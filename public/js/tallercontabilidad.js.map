{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/js/tallercontabilidad.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","$","tooltip","funciones","Vue","data","options","objeto","cuentas","methods","obtenerNombre","id","this","filter","x","nombre","formatoFecha","fecha","split","reverse","join","VueSweetAlert2","component","propsData","Swal","fire","html","showConfirmButton","showCloseButton","customClass","willOpen","instance","extend","$mount","document","getElementById","appendChild","$el","horasExtras","horas","sueldo","total","horaTrabajo","Number","forEach","hora","dia","impuestoAgregado","deduciones","fraccion","impuesto_fraccion","interes","toFixed","prestamoHipotecario","valor","tiempo","division","porcentaje","prestamoQuirografario","meses","mayor_general","el","id_taller","taller","tipo","update","balance_inicial","patrimonio","nom_cuenta","cuenta_id","saldo","total_balance_inicial","t_activo","t_pasivo","t_patrimonio_pasivo","b_initotal","t_a_corriente","t_a_nocorriente","t_p_corriente","t_p_no_corriente","t_patrimonio","a_corrientes","a_nocorrientes","p_corrientes","p_nocorrientes","patrimonios","registro","activo_corriente","activo_nocorriente","pasivo_corriente","pasivo_nocorriente","activo","a_corriente","edit","a_nocorriente","bi","const_id","pasivo","p_corriente","p_nocorriente","mounted","cambioActivo","cambioActivoNo","cambioPasivo","cambioPasivoNo","cambioPatrimonio","TotalActivo","TotalPasivo","obtenerBalance","decimales","calculadora","title","noteProp","abrirActivoC","limpiar","modal","tab","abrirActivoNoC","abrirPasivoC","abrirPasivoNoC","abrirPatrimonio","deleteAcCooriente","index","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","splice","deletePaCooriente","deleteAcNoCooriente","deletePaNoCooriente","deletePatrimonio","agregarActivoCorriente","toastr","error","timeOut","verificarCuenta","push","success","editAcorriente","actualizarActivoC","cancelarEdicionActivoC","agregarActivoNoCorriente","editNoAcorriente","actualizarActivoNC","cancelarEdicionActivoNC","agregarPasivoCorriente","editPcorriente","actualizarPasivoC","cancelarEdicionPcorriente","agregarPasivoNoCorriente","editPNocorriente","actualizarPasivoNC","cancelarEdicionPNocorriente","agregarPatrimonio","editPatrimonio","actualizarPatrimonio","cancelarEdicionPatrimonio","Agregar","diario","trim","debe","haber","warning","gloza","diarios","deleteDiario","guardarDiario","axios","post","datos","response","console","log","agregarBalance","balance","cuenta","suma_debe","suma_haber","saldo_debe","saldo_haber","balances","ac","anc","pc","pnc","length","obj","t_noactivo","t_nopasivo","t_patrimo","totalPasivoPatrimonio","guardarBalanceInicial","_this","totales_iniciales","totales_totales","message","total_pasivo_patrimonio","datos_diario","producto_id","fechabalance","complete","balanceInicial","totaldebe","totalhaber","kardex","nombre_kardex","producto_kardex","transacciones","registros","eliminar","ajustes","porcentajes","index_cuenta","cantidad","registerindex","cuentaindex","comentario","ajustado","pasan","dato","obtenerDiarioGeneral","abrirTransaccion","valorPorcentual","obtenerKardexFifo","kardex_fifo","informacion","producto","obtenerBalanceInicial","inicial","unshift","totalDebe","totalHaber","totalesFinales","agregarHaber","porcentual","calculo","agregarDebe","agregarComentario","deleteHaber","deleteDebe","guardarRegistro","total_debe","total_haber","debeEditRegister","register","JSON","parse","stringify","debeEditAjustado","deleteRegistro","deleteAjuste","updaterRegister","sal","updateHaber","habediarioEdit","id_cuenta","regis","total1","debediairoEdit","cancelarEdicion","updateDebe","debeDelete","totalDebeBi","balan","totalHaberBi","union","concat","librocaja","librosbanco","reten_iva","tieneinicial","nombre_dgral","dgeneral","cierres","total_saldo","seleccion","cierre","detalle","obtenerMayorGeneral","obtenerAsientoCierre","registros_cierres","nombre_cierre","onSelect","mayor","mayores","numberFormat","numero","Intl","NumberFormat","format","agregarCelda","deleteNormal","deleteCierre","tdebe","thaber","editarTransaccion","warningEliminar","eliminarRegistro","guardarMayor","balance_comp","hoja_trabajo","enunciados","nombre_mayor","mayorgeneral","suman","sum_debe","sum_haber","sal_debe","sal_haber","registro_id","obtenerBalanceCom","sumas","mover","evt","window","totales","total2","total3","total4","agregarRegistro","deleteBalance","editBalance","editBalanceFuera","actualizarBalance","guardarBalance","estado","info","bcomprobacion","nombre_balance","fecha_balance","balance_ajustado","estado_resultado","balance_general","obtenerHojita","sumasTotales","bc_debe","bc_haber","ajuste_debe","ajuste_haber","ba_debe","ba_haber","er_debe","er_haber","bg_debe","bg_haber","temp","guardarHoja","bc_total_debe","bc_total_haber","ajuste_total_debe","ajuste_total_haber","ba_total_debe","ba_total_haber","er_total_debe","er_total_haber","bg_total_debe","bg_total_haber","asientos_cierre","hojatrabajo","nombre_hoja","balances_ajustados","obtenerBalanceAjus","bcomprobacionAjustado","venta","costo_venta","ingresos","gastos","ingreso","utilidad_bruta","costo","gasto","utilida","utilidades","utilidad","utilidad_bruta_ventas","utilidad_neta_o","utilidad_ejercicio","utilidad_liquida","obtenerEstadoResultado","agregarBruta","suma_ventas","totale","subtotal","warningEliminarIngreso","warningEliminarGastos","warningEliminarUtilidad","selectUtilidad","verificarCuentaIngreso","ga","u","verificarCuentaGasto","verificarCuentaUtilidad","abrirIngreso","abrirGastos","abrirUtilidades","mostrarUtilidades","cerrarUtilidades","agregarIngreso","agregarGasto","agregarUtilidad","editIngreso","editIngresoFuera","cancelarEdicionIngreso","actualizarIngreso","editGasto","editGastoFuera","cancelarEdicionGasto","actualizarGasto","editUtilidad","editUtilidadFuera","cancelarEdicionUtilidad","actualizarUtilidad","guardarEstadoResultado","estadoresultado","nombre_e_resultado","fecha_e_resultado","venta_e_resultado","costo_venta_e_resultado","utilidad_bruta_ventas_e_resultado","utilidad_ejercicio_e_resultado","utilidad_liquida_e_resultado","const_id2","cuenta_id2","total_saldo2","saldo2","double","total_ingresos","total_gastos","id2","undefined","nombre1","resta","cuenta2","verificarCuentaAct","nombre2","DoubleCouenta","DoubleCouentaC","DoubleAcorriente","DoubleAcorrienteC","obj2","guardarBalanceGeneral","bgneral","llamarDiario","agregarEdit","agregarEditPasivo","haberEdit","updateHaber1","haberDelete","exis","precio","productos","ingreso_cantidad","ingreso_total","egreso_cantidad","egreso_total","muestra","datos_transacciones","prueba","inventario_inicial","adquicisiones","ventas","inventario_final","ejercicio","actuingreso","modales","modal_ingreso","existencia_ingreso","modal_devolucion_compra","modal_egreso","modal_devolucion_venta","actuegreso","egresos","existencias","movimiento","egreso","movimientos","transaccion","add","active","existencia","heightAuto","reverseFecha","in_cantidad","in_total","eg_cantidad","eg_total","parseInt","temp1","modalIngreso","modalInicial","cerrarInicial","modalEgreso","compras","totalIng","ingreso_precio","multiplicacion","ventaIng","actuaIng","suma","actuaVenta","bajarExis","identificador","egreso_precio","existencia_cantidad","existencia_precio","existencia_total","actuExiIng","agregarTran","array","ultimaExistencia","a","filtro","agregar","actualizarInicial","newTotal","borrarIngreso","agregarTransaccion","filtro_existencias","exi_total","ultimo","second","egre","comprea","cancelarActualizacion","multi","nuevoEgreso","metodo","identificacion","agregarEgreso","agregarEgresoNew","existenciaEgreso","exisEgresoAct","agregarEgresos","iden","agregarDevolucionCompra","actualEgre","ul","totaEgre","ActualizarEgresos","existencias_egresos","existencias_filtro","borrarEgresoAct","borrarEgreso","agregarDevolucion","existenciaVenta","agregarNewEgreso","guardarKardex","inv_inicial_cantidad","adquisicion_cantidad","ventas_cantidad","inv_final_cantidad","inv_inicial_precio","adquisicion_precio","ventas_precio","inv_final_precio","borrarTransaccion","last","ultima_transaccion","kardex_id","ultima_existencia","obtenerKardexPromedio","exitenciaFinal","modalTransacciones","calcularTotalIngreso","actuaEgre","calcularTotalEgreso","agregarInicial","ultima","actualizarEgreso","kardex_promedio","libros_caja","caja","obtenerLibroCaja","abrirLibro","editLibroCaja","editlibrocajafuera","cancelarEditlibro","actualizarLibroCaja","WarningEliminarLibro","guardarLibro","arqueo_caja","banexocaja","debe_lb","haber_lb","nombre_lb","t_saldo","s_debe","s_haber","pruebas","cuenta1","valor1","valor2","saldo_ctcaja","saldo_arqueocaja","select_resultado","select_valor","t_exis","e_debe","e_haber","td","th","ObtenerArqueo","totales_s","rg","re","t1","t2","t3","t4","td1","th1","abrirArqueo","agregarsaldo","editSaldo","editSaldoFuera","cancelarEditSaldo","actualizarSaldo","WarningEliminarSaldo","agregarExistencia","editExis","editExisFuera","cancelarEditExis","actualizarExis","WarningEliminarExis","guardaArqueo","n_banco","c_banco","lb_banco","banco","cheque","obtenerLibroBanco","abrirLibroB","agregarBanco","editLibroBanco","editLibroBancoFuera","cancelarEditlibroBanco","actualizarLibroBanco","eliminarLibro","deleteLibroBanco","guardarlbBAnco","conciliacionb","mb","lb_nombre","lb_n_banco","lb_c_banco","debe_lbanco","haber_lbanco","c_saldos","c_debitos","debito","c_creditos","credito","c_cheques","cheques","c_depositos","deposito","saldo_c","saldo_ch","saldo_d","saldo_depositos","obtenerConciliacionBancaria","r1","r2","r3","r4","r5","t5","tch","abrirSaldos","abrirDebito","abrirCredito","abrirCheques","abrirDepositos","agregarDeposito","editDepositos","editDepositoFuera","cancelarEditDeposito","EliminarDeposito","actualizarDeposito","agregarSaldo","EliminarSaldo","agregarCreditos","editCredito","editCreditoFuera","cancelarEditCredito","EliminarCredito","actualizarCredito","agregarDebitos","editDebito","editDebitoFuera","cancelarEditDebito","EliminarDebito","actualizarDebito","agregarCheques","editCheque","editChequeFuera","cancelarEditCheque","EliminarCheque","actualizarCheque","guardarConciliacionB","nombre_c","contribuyente","ruc","t_ventas","t_compras","compra","fecha_c","proveedor","base_im","v_retenido","iva","ret_10","ret_20","ret_30","ret_70","ret_100","suma_c","suma_base","suma_reten","suma_ivac","suma_10","suma_20","suma_30","suma_70","suma_100","fecha_v","cliente","suma_v","suma_ivav","t_ivacompra","t_ivaventa","total_pagar","result_iva","t_reten","obtenerRetencionIva","Totales","c1","c2","c3","c4","c5","c6","c7","c8","v1","v2","v3","v4","v5","v6","v7","v8","abrirCompra","abrirVenta","agregarCompra","editCompra","editCompraFuera","cancelarEditCompra","actualizarCompra","WarningEliminarCompra","agregarVenta","editVenta","editVentaFuera","cancelarEditVenta","actualizarVenta","WarningEliminarVenta","guardaretencioniva","sumac_base","sumac_reten","sumac_ivac","sumac_10","sumac_20","sumac_30","sumac_70","sumac_100","sumav_base","sumav_reten","sumav_ivav","sumav_10","sumav_20","sumav_30","sumav_70","sumav_100","provision_b","t_nomina","nomina","nombre_e","cargo","s_tiempo","iees","pres_iees","pres_cia","anticipo","imp_renta","neto_pagar","sobretiempo","hora_trabajo","total_suple","total_extra","suma_suple","suma_extra","calculo1","mes","s_sueldo","s_sobretiempo","s_tingreso","s_iess","s_piess","s_pcias","s_anticipo","s_impr","s_tegresos","s_netopagar","deduccion","descripcion","deducciones","impuesto","fraccion_excedente_iva","ingreso_gravable","iies","ingreso_liquido","comisiones","fraccion_excedente","ingreso_mensual","base_imponible","ingreso_anual","total_impuesto","obtenerNomina","calculoHora","calculoSobre","suplementaria","extraordinaria","limpiarSobre","fraccion_excedenteiva","agregardeduccion","deduccio","borrarDeduccion","impuestoRenta","calculoHipo","hipo","calculoquiro","abrirNomina","c9","c10","agregarNomina","editNomina","editNominaFuera","cancelarEditNomina","actualizarNomina","eliminarNomina","deleteNomina","WarningEliminarNomina","guardarNomina","t_pro","pro","nombre_em","dias","v_recibido","d_tercero","d_cuarto","vacaciones","f_reserva","s_valor","s_tercero","s_cuarto","s_vacaciones","s_res","obtenerProvision","abrirProvision","agregarProvision","editProvision","editProvisionFuera","cancelarEditProvision","actualizarProvision","eliminarProvision","deleteProvision","WarningEliminarProvision","guardarProvision"],"mappings":"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","file":"/js/tallercontabilidad.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 59);\n","//const { update } = require(\"lodash\");\r\n\r\n$(function () {\r\n    $('[data-toggle=\"tooltip\"]').tooltip();\r\n});\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////FUNCIONES/////////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\nconst funciones = new Vue({\r\n    data: {\r\n        options: objeto,\r\n        cuentas: cuentas\r\n    },\r\n    methods: {\r\n        obtenerNombre(id) {\r\n            let cuenta = this.cuentas.filter(x => x.id == id);\r\n            let nombre = cuenta[0].nombre;\r\n            return nombre;\r\n        },\r\n        formatoFecha(fecha) {\r\n            if (fecha !== null) {\r\n                let date = fecha\r\n                    .split(\"-\")\r\n                    .reverse()\r\n                    .join(\"-\");\r\n                return date;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        VueSweetAlert2(component, propsData) {\r\n            Swal.fire({\r\n                html: '<div id=\"VueSweetAlert2\"></div>',\r\n                showConfirmButton: false,\r\n                showCloseButton: true,\r\n                customClass: \"swal-wide\",\r\n                willOpen: () => {\r\n                    let ComponentClass = Vue.extend(Vue.component(component));\r\n                    let instance = new ComponentClass({\r\n                        propsData: propsData\r\n                    });\r\n                    instance.$mount();\r\n                    document\r\n                        .getElementById(\"VueSweetAlert2\")\r\n                        .appendChild(instance.$el);\r\n                }\r\n            });\r\n        },\r\n        horasExtras(horas, sueldo) {\r\n            let total = 0;\r\n            let horaTrabajo = Number(sueldo) / 30 / 8;\r\n            horas.forEach(function (hora) {\r\n                total += Number(hora.dia) * horaTrabajo * 1.5;\r\n            });\r\n            return total;\r\n        },\r\n\r\n        impuestoAgregado(\r\n            sueldo,\r\n            deduciones,\r\n            fraccion,\r\n            impuesto_fraccion,\r\n            interes\r\n        ) {\r\n            let total = 0;\r\n            let iies = (sueldo * 9.45) / 100;\r\n            let ingreso_liquido = sueldo - iies;\r\n            let ingreso_mensual = ingreso_liquido - deduciones;\r\n            let ingreso_anual = ingreso_mensual * 12;\r\n            let fraccion_excedente = ingreso_anual - fraccion;\r\n            let fraccion_excedenteiva = (fraccion_excedente * interes) / 100;\r\n            let total_impuesto = impuesto_fraccion + fraccion_excedenteiva;\r\n            total = total_impuesto / 12;\r\n\r\n            return Number(total).toFixed(2);\r\n        },\r\n\r\n        prestamoHipotecario(valor, tiempo, interes) {\r\n            let total = 0;\r\n            let division = Number(valor) / Number(tiempo);\r\n            let porcentaje = (division * Number(interes)) / 100;\r\n\r\n            let subtotal = division + porcentaje;\r\n            total = subtotal / 12;\r\n\r\n            return Number(total).toFixed(2);\r\n        },\r\n        prestamoQuirografario(valor, meses, interes) {\r\n            let total = 0;\r\n            let division = Number(valor) / Number(meses);\r\n            let porcentaje = (division * Number(interes)) / 100;\r\n\r\n            total = division + porcentaje;\r\n\r\n            return Number(total).toFixed(2);\r\n        }\r\n    }\r\n});\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////BALANCE INICIAL HORIZONTAL/////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst b_hori = new Vue({\r\n    el: \"#b_horizontal\",\r\n    data: {\r\n        options: objeto,\r\n        cuentas: cuentas,\r\n        id_taller: taller,\r\n        tipo: \"horizontal\",\r\n        //diarios:[],\r\n        update: 0,\r\n        balance_inicial: {\r\n            //Nombre y fecha del balance inicial\r\n            nombre: \"\",\r\n            fecha: \"\"\r\n        },\r\n        patrimonio: {\r\n            //Asignar Patrimonio\r\n            nom_cuenta: \"\",\r\n            cuenta_id: \"\",\r\n            saldo: \"\"\r\n        },\r\n        //diarios2:[],\r\n        total_balance_inicial: {\r\n            //Totales de activo, pasivo y patrimonio\r\n            t_activo: \"\",\r\n            t_pasivo: \"\",\r\n            t_patrimonio_pasivo: \"\"\r\n        },\r\n        b_initotal: {\r\n            t_a_corriente: \"\", //Total de activo corriente\r\n            t_a_nocorriente: \"\", //Total de activo no corriente\r\n            t_p_corriente: \"\", //Total de pasivo corriente\r\n            t_p_no_corriente: \"\", //Total de pasivo no corriente\r\n            t_patrimonio: \"\" //Total de patrimonio\r\n        },\r\n        a_corrientes: [], //Array de activos corrientes\r\n        a_nocorrientes: [], //Array de activos no corrientes\r\n        p_corrientes: [], //Array de pasivos corrientes\r\n        p_nocorrientes: [], //Array de pasivos no corrientes\r\n        patrimonios: [], //Array de patrimonios\r\n        registro: {\r\n            activo_corriente: \"\",\r\n            activo_nocorriente: \"\",\r\n            pasivo_corriente: \"\",\r\n            pasivo_nocorriente: \"\",\r\n            patrimonio: \"\"\r\n        },\r\n        activo: {\r\n            a_corriente: {\r\n                //Agregar un nuevo activo corriente al array\r\n                nom_cuenta: \"\",\r\n                cuenta_id: \"\",\r\n                saldo: \"\",\r\n                edit: false\r\n            },\r\n            a_nocorriente: {\r\n                //Agregar un nuevo activo no corriente al array\r\n                nom_cuenta: \"\",\r\n                cuenta_id: \"\",\r\n                saldo: \"\",\r\n                edit: false\r\n            }\r\n        },\r\n        bi: {\r\n            const_id: \"\"\r\n        },\r\n        pasivo: {\r\n            p_corriente: {\r\n                //Agregar un nuevo pasivo corriente al array\r\n                nom_cuenta: \"\",\r\n                cuenta_id: \"\",\r\n                saldo: \"\",\r\n                edit: false,\r\n                total: \"\"\r\n            },\r\n            p_nocorriente: {\r\n                //Agregar un nuevo pasivo no corriente al array\r\n                nom_cuenta: \"\",\r\n                cuenta_id: \"\",\r\n                saldo: \"\",\r\n                edit: false,\r\n                total: \"\"\r\n            }\r\n        }\r\n    },\r\n    mounted: function () {\r\n        this.cambioActivo();\r\n        this.cambioActivoNo();\r\n        this.cambioPasivo();\r\n        this.cambioPasivoNo();\r\n        this.cambioPatrimonio();\r\n        this.TotalActivo();\r\n        this.TotalPasivo();\r\n        this.obtenerBalance();\r\n    },\r\n    methods: {\r\n        decimales(saldo) {\r\n            if (saldo !== null && saldo !== \"\" && saldo !== 0) {\r\n                let total = Number(saldo).toFixed(2);\r\n                return total;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        calculadora() {\r\n            let propsData = {\r\n                title: \"Called from basic js\",\r\n                noteProp: [\"Note number 1\", \"Note number 2\"]\r\n            };\r\n            let component = \"example-component\";\r\n            funciones.VueSweetAlert2(component, propsData);\r\n        },\r\n        abrirActivoC() {\r\n            this.limpiar();\r\n            $(\"#bih-transaccion\").modal(\"show\");\r\n            $(\"#nav-bih-activo-corriente-tab\").tab(\"show\");\r\n            // $('#kardex-promedio-ingreso-edit-tab').tab('show')\r\n        },\r\n        abrirActivoNoC() {\r\n            this.limpiar();\r\n            $(\"#bih-transaccion\").modal(\"show\");\r\n            $(\"#nav-bih-activo-no-corriente-tab\").tab(\"show\");\r\n        },\r\n        abrirPasivoC() {\r\n            this.limpiar();\r\n            $(\"#bih-transaccion\").modal(\"show\");\r\n            $(\"#nav-bih-pasivo-corriente-tab\").tab(\"show\");\r\n        },\r\n        abrirPasivoNoC() {\r\n            this.limpiar();\r\n            $(\"#bih-transaccion\").modal(\"show\");\r\n            $(\"#nav-bih-pasivo-no-corriente-tab\").tab(\"show\");\r\n        },\r\n        abrirPatrimonio() {\r\n            this.limpiar();\r\n            $(\"#bih-transaccion\").modal(\"show\");\r\n\r\n            $(\"#nav-bih-patrimonio-tab\").tab(\"show\");\r\n        },\r\n\r\n        //ELIMINAR ELEMENTOS DE UN ARRAY /////////\r\n        deleteAcCooriente(index) {\r\n            let nombre = this.a_corrientes[index].nom_cuenta;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.a_corrientes.splice(index, 1);\r\n                    this.cambioActivo();\r\n                    this.TotalActivo();\r\n                    this.limpiar();\r\n                }\r\n            });\r\n        },\r\n\r\n        deletePaCooriente(index) {\r\n            let nombre = this.p_corrientes[index].nom_cuenta;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n\r\n                    this.p_corrientes.splice(index, 1);\r\n                    this.cambioPasivo();\r\n                    this.TotalPasivo();\r\n                    this.limpiar();\r\n                }\r\n            });\r\n        },\r\n        deleteAcNoCooriente(index) {\r\n            let nombre = this.a_nocorrientes[index].nom_cuenta;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.a_nocorrientes.splice(index, 1);\r\n                    this.cambioActivoNo();\r\n                    this.TotalActivo();\r\n                    this.limpiar();\r\n                }\r\n            });\r\n        },\r\n        deletePaNoCooriente(index) {\r\n            let nombre = this.p_nocorrientes[index].nom_cuenta;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.p_nocorrientes.splice(index, 1);\r\n                    this.cambioPasivoNo();\r\n                    this.TotalPasivo();\r\n                    this.limpiar();\r\n                }\r\n            });\r\n        },\r\n        deletePatrimonio(index) {\r\n            let nombre = this.patrimonios[index].nom_cuenta;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.patrimonios.splice(index, 1);\r\n                    this.cambioPatrimonio();\r\n                    this.limpiar();\r\n                }\r\n            });\r\n        },\r\n        limpiar() {\r\n            //LIMPIAR TODOS LOS CAMPOS DE ACTIVOS PASIVOS Y PATRIMONIOS\r\n            this.pasivo.p_corriente.cuenta_id = \"\";\r\n            this.pasivo.p_corriente.saldo = \"\";\r\n            this.pasivo.p_nocorriente.cuenta_id = \"\";\r\n            this.pasivo.p_nocorriente.saldo = \"\";\r\n            this.activo.a_corriente.cuenta_id = \"\";\r\n            this.activo.a_corriente.saldo = \"\";\r\n            this.activo.a_nocorriente.cuenta_id = \"\";\r\n            this.activo.a_nocorriente.saldo = \"\";\r\n            this.pasivo.p_corriente.edit = false;\r\n            this.pasivo.p_nocorriente.edit = false;\r\n            this.activo.a_corriente.edit = false;\r\n            this.activo.a_nocorriente.edit = false;\r\n            this.patrimonio.edit = false;\r\n            this.bi.const_id = \"\";\r\n        },\r\n        agregarActivoCorriente() {\r\n            if (this.activo.a_corriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.activo.a_corriente.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    var a_corriente = {\r\n                        cuenta_id: this.activo.a_corriente.cuenta_id,\r\n                        nom_cuenta: nombre,\r\n                        saldo: this.activo.a_corriente.saldo\r\n                    };\r\n                    this.a_corrientes.push(a_corriente);\r\n                    toastr.success(\r\n                        \"Cuenta agregada correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.activo.a_corriente.cuenta_id = \"\";\r\n                    this.activo.a_corriente.saldo = \"\";\r\n                    this.cambioActivo();\r\n                }\r\n            }\r\n        },\r\n\r\n        //EDITAR ELEMENTOS DE UN ARRAY\r\n        editAcorriente(index) {\r\n            this.limpiar();\r\n            this.activo.a_corriente.edit = true;\r\n            this.registro.a_corriente = index;\r\n            this.bi.const_id = this.a_corrientes[index].cuenta_id;\r\n            this.activo.a_corriente.cuenta_id = this.a_corrientes[\r\n                index\r\n            ].cuenta_id;\r\n            this.activo.a_corriente.saldo = this.a_corrientes[index].saldo;\r\n            $(\"#bih-transaccion\").modal(\"show\");\r\n            $(\"#nav-bih-activo-corriente-tab\").tab(\"show\");\r\n        },\r\n        actualizarActivoC() {\r\n            if (this.activo.a_corriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.activo.a_corriente.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    let index = this.registro.a_corriente;\r\n                    this.a_corrientes[\r\n                        index\r\n                    ].cuenta_id = this.activo.a_corriente.cuenta_id;\r\n                    this.a_corrientes[index].nom_cuenta = nombre;\r\n                    this.a_corrientes[\r\n                        index\r\n                    ].saldo = this.activo.a_corriente.saldo;\r\n                    this.activo.a_corriente.cuenta_id = \"\";\r\n                    this.activo.a_corriente.saldo = \"\";\r\n                    this.activo.a_corriente.edit = false;\r\n                    this.registro.a_corriente = \"\";\r\n                    this.cambioActivo();\r\n                }\r\n            }\r\n        },\r\n        cancelarEdicionActivoC() {\r\n            this.activo.a_corriente.cuenta_id = \"\";\r\n            this.activo.a_corriente.saldo = \"\";\r\n            this.activo.a_corriente.edit = false;\r\n        },\r\n        agregarActivoNoCorriente() {\r\n            if (this.activo.a_nocorriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.activo.a_nocorriente.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    var a_nocorriente = {\r\n                        cuenta_id: this.activo.a_nocorriente.cuenta_id,\r\n                        nom_cuenta: nombre,\r\n                        saldo: this.activo.a_nocorriente.saldo\r\n                    };\r\n                    this.a_nocorrientes.push(a_nocorriente);\r\n                    toastr.success(\r\n                        \"Cuenta agregada correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.activo.a_nocorriente.cuenta_id = \"\";\r\n                    this.activo.a_nocorriente.saldo = \"\";\r\n                    this.cambioActivoNo();\r\n                }\r\n            }\r\n        },\r\n\r\n        //EDITAR ELEMENTOS DE UN ARRAY\r\n        editNoAcorriente(index) {\r\n            this.limpiar();\r\n            this.activo.a_nocorriente.edit = true;\r\n            this.registro.a_nocorriente = index;\r\n            this.bi.const_id = this.a_nocorrientes[index].cuenta_id;\r\n            this.activo.a_nocorriente.cuenta_id = this.a_nocorrientes[\r\n                index\r\n            ].cuenta_id;\r\n            this.activo.a_nocorriente.saldo = this.a_nocorrientes[index].saldo;\r\n            $(\"#bih-transaccion\").modal(\"show\");\r\n            $(\"#nav-bih-activo-no-corriente-tab\").tab(\"show\");\r\n        },\r\n        actualizarActivoNC() {\r\n            if (this.activo.a_nocorriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.activo.a_nocorriente.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    let index = this.registro.a_nocorriente;\r\n                    this.a_nocorrientes[\r\n                        index\r\n                    ].cuenta_id = this.activo.a_nocorriente.cuenta_id;\r\n                    this.a_nocorrientes[index].nom_cuenta = nombre;\r\n                    this.a_nocorrientes[\r\n                        index\r\n                    ].saldo = this.activo.a_nocorriente.saldo;\r\n                    this.activo.a_nocorriente.cuenta_id = \"\";\r\n                    this.activo.a_nocorriente.saldo = \"\";\r\n                    this.activo.a_nocorriente.edit = false;\r\n                    this.registro.a_nocorriente = \"\";\r\n                    this.cambioActivoNo();\r\n                }\r\n            }\r\n        },\r\n        cancelarEdicionActivoNC() {\r\n            this.activo.a_nocorriente.cuenta_id = \"\";\r\n            this.activo.a_nocorriente.saldo = \"\";\r\n            this.activo.a_nocorriente.edit = false;\r\n        },\r\n\r\n        agregarPasivoCorriente() {\r\n            if (this.pasivo.p_corriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.pasivo.p_corriente.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    var p_corriente = {\r\n                        cuenta_id: this.pasivo.p_corriente.cuenta_id,\r\n                        nom_cuenta: nombre,\r\n                        saldo: this.pasivo.p_corriente.saldo\r\n                    };\r\n                    this.p_corrientes.push(p_corriente);\r\n                    toastr.success(\r\n                        \"Cuenta agregada correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.pasivo.p_corriente.cuenta_id = \"\";\r\n                    this.pasivo.p_corriente.saldo = \"\";\r\n                    this.cambioPasivo();\r\n                }\r\n            }\r\n        },\r\n\r\n        //EDITAR ELEMENTOS DE UN ARRAY\r\n        editPcorriente(index) {\r\n            this.limpiar();\r\n            this.pasivo.p_corriente.edit = true;\r\n            this.registro.p_corriente = index;\r\n            this.bi.const_id = this.p_corrientes[index].cuenta_id;\r\n            this.pasivo.p_corriente.cuenta_id = this.p_corrientes[\r\n                index\r\n            ].cuenta_id;\r\n            this.pasivo.p_corriente.saldo = this.p_corrientes[index].saldo;\r\n            $(\"#bih-transaccion\").modal(\"show\");\r\n            $(\"#nav-bih-pasivo-corriente-tab\").tab(\"show\");\r\n        },\r\n        actualizarPasivoC() {\r\n            if (this.pasivo.p_corriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.pasivo.p_corriente.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    let index = this.registro.p_corriente;\r\n                    this.p_corrientes[\r\n                        index\r\n                    ].cuenta_id = this.pasivo.p_corriente.cuenta_id;\r\n                    this.p_corrientes[index].nom_cuenta = nombre;\r\n                    this.p_corrientes[\r\n                        index\r\n                    ].saldo = this.pasivo.p_corriente.saldo;\r\n                    this.pasivo.p_corriente.cuenta_id = \"\";\r\n                    this.pasivo.p_corriente.saldo = \"\";\r\n                    this.pasivo.p_corriente.edit = false;\r\n                    this.registro.p_corriente = \"\";\r\n                    this.cambioPasivo();\r\n                }\r\n            }\r\n        },\r\n        cancelarEdicionPcorriente() {\r\n            this.pasivo.p_corriente.cuenta_id = \"\";\r\n            this.pasivo.p_corriente.saldo = \"\";\r\n            this.pasivo.p_corriente.edit = false;\r\n        },\r\n\r\n        agregarPasivoNoCorriente() {\r\n            if (this.pasivo.p_nocorriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.pasivo.p_nocorriente.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    var p_nocorriente = {\r\n                        cuenta_id: this.pasivo.p_nocorriente.cuenta_id,\r\n                        nom_cuenta: nombre,\r\n                        saldo: this.pasivo.p_nocorriente.saldo\r\n                    };\r\n                    this.p_nocorrientes.push(p_nocorriente);\r\n                    toastr.success(\r\n                        \"Cuenta agregada correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.pasivo.p_nocorriente.cuenta_id = \"\";\r\n                    this.pasivo.p_nocorriente.saldo = \"\";\r\n                    this.cambioPasivoNo();\r\n                }\r\n            }\r\n        },\r\n\r\n        //EDITAR ELEMENTOS DE UN ARRAY\r\n        editPNocorriente(index) {\r\n            this.limpiar();\r\n            this.pasivo.p_nocorriente.edit = true;\r\n            this.registro.p_nocorriente = index;\r\n            this.bi.const_id = this.p_nocorrientes[index].cuenta_id;\r\n            this.pasivo.p_nocorriente.cuenta_id = this.p_nocorrientes[\r\n                index\r\n            ].cuenta_id;\r\n            this.pasivo.p_nocorriente.saldo = this.p_nocorrientes[index].saldo;\r\n            $(\"#bih-transaccion\").modal(\"show\");\r\n            $(\"#nav-bih-pasivo-no-corriente-tab\").tab(\"show\");\r\n        },\r\n        actualizarPasivoNC() {\r\n            if (this.pasivo.p_nocorriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.pasivo.p_nocorriente.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    let index = this.registro.p_nocorriente;\r\n                    this.p_nocorrientes[\r\n                        index\r\n                    ].cuenta_id = this.pasivo.p_nocorriente.cuenta_id;\r\n                    this.p_nocorrientes[index].nom_cuenta = nombre;\r\n                    this.p_nocorrientes[\r\n                        index\r\n                    ].saldo = this.pasivo.p_nocorriente.saldo;\r\n                    this.pasivo.p_nocorriente.cuenta_id = \"\";\r\n                    this.pasivo.p_nocorriente.saldo = \"\";\r\n                    this.pasivo.p_nocorriente.edit = false;\r\n                    this.registro.p_nocorriente = \"\";\r\n                    this.cambioPasivoNo();\r\n                }\r\n            }\r\n        },\r\n        cancelarEdicionPNocorriente() {\r\n            this.pasivo.p_nocorriente.cuenta_id = \"\";\r\n            this.pasivo.p_nocorriente.saldo = \"\";\r\n            this.pasivo.p_nocorriente.edit = false;\r\n        },\r\n        agregarPatrimonio() {\r\n            if (this.patrimonio.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.patrimonio.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    var patrimonio = {\r\n                        cuenta_id: this.patrimonio.cuenta_id,\r\n                        nom_cuenta: nombre,\r\n                        saldo: this.patrimonio.saldo\r\n                    };\r\n                    this.patrimonios.push(patrimonio);\r\n                    toastr.success(\r\n                        \"Cuenta agregada correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.patrimonio.cuenta_id = \"\";\r\n                    this.patrimonio.saldo = \"\";\r\n                    this.cambioPatrimonio();\r\n                }\r\n            }\r\n        },\r\n\r\n        //EDITAR ELEMENTOS DE UN ARRAY\r\n        editPatrimonio(index) {\r\n            this.limpiar();\r\n            this.patrimonio.edit = true;\r\n            this.registro.patrimonio = index;\r\n            this.bi.const_id = this.patrimonios[index].cuenta_id;\r\n            this.patrimonio.cuenta_id = this.patrimonios[index].cuenta_id;\r\n            this.patrimonio.saldo = this.patrimonios[index].saldo;\r\n            $(\"#bih-transaccion\").modal(\"show\");\r\n            $(\"#nav-bih-patrimonio-tab\").tab(\"show\");\r\n        },\r\n        actualizarPatrimonio() {\r\n            if (this.patrimonio.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.patrimonio.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    let index = this.registro.patrimonio;\r\n                    this.patrimonios[\r\n                        index\r\n                    ].cuenta_id = this.patrimonio.cuenta_id;\r\n                    this.patrimonios[index].nom_cuenta = nombre;\r\n                    this.patrimonios[index].saldo = this.patrimonio.saldo;\r\n                    this.patrimonio.cuenta_id = \"\";\r\n                    this.patrimonio.saldo = \"\";\r\n                    this.patrimonio.edit = false;\r\n                    this.registro.patrimonio = \"\";\r\n                    this.cambioPatrimonio();\r\n                }\r\n            }\r\n        },\r\n        cancelarEdicionPatrimonio() {\r\n            this.patrimonio.cuenta_id = \"\";\r\n            this.patrimonio.saldo = \"\";\r\n            this.patrimonio.edit = false;\r\n        },\r\n        Agregar() {\r\n            if (this.diario.nom_cuenta.trim() === \"\") {\r\n                toastr.error(\r\n                    \"El campo Nombre de cuenta es obligatorio\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (\r\n                this.diario.debe.trim() === \"\" &&\r\n                this.diario.haber.trim() === \"\"\r\n            ) {\r\n                toastr.warning(\r\n                    \"Rellena el cambio de Debe o Haber, no puedes dejar ambos vacios\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (\r\n                this.diario.debe.trim() != \"\" &&\r\n                this.diario.haber.trim() != \"\"\r\n            ) {\r\n                toastr.warning(\r\n                    \"No pueden estar ambos campos llenos a mismo tiempo\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                var diario = {\r\n                    fecha: this.diario.fecha,\r\n                    nom_cuenta: this.diario.nom_cuenta,\r\n                    gloza: this.diario.gloza,\r\n                    debe: this.diario.debe,\r\n                    haber: this.diario.haber\r\n                };\r\n                this.diarios.push(diario); //añadimos el la variable persona al array\r\n                //Limpiamos los campos\r\n                toastr.success(\r\n                    \"Registro agregado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.diario.fecha = \"\";\r\n                this.diario.nom_cuenta = \"\";\r\n                this.diario.gloza = \"\";\r\n                this.diario.debe = \"\";\r\n                this.diario.haber = \"\";\r\n            }\r\n        },\r\n        deleteDiario(index) {\r\n            this.diarios.splice(index, 1);\r\n        },\r\n        guardarDiario: function () {\r\n            var _this = this;\r\n            var url = \"/sistema/admin/taller/diario\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller,\r\n                    datos: _this.diarios\r\n                })\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                })\r\n                .catch(function (error) { });\r\n        },\r\n        agregarBalance() {\r\n            if (this.balance.cuenta.trim() === \"\") {\r\n                toastr.error(\"El campo cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (\r\n                this.balance.suma_debe.trim() === \"\" &&\r\n                this.balance.suma_haber.trim() === \"\"\r\n            ) {\r\n                toastr.warning(\r\n                    \"Rellena el cambio de Debe o Haber DE SUMAS, no puedes dejar ambos vacios\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (\r\n                this.balance.saldo_debe.trim() === \"\" &&\r\n                this.balance.saldo_haber.trim() === \"\"\r\n            ) {\r\n                toastr.warning(\r\n                    \"Rellena el cambio de Debe o Haber de SALDOS, no puedes dejar ambos vacios\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (\r\n                this.balance.saldo_debe.trim() != \"\" &&\r\n                this.balance.saldo_haber.trim() != \"\"\r\n            ) {\r\n                toastr.warning(\r\n                    \"No pueden estar ambos campos llenos a mismo tiempo\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                var balance = {\r\n                    cuenta: this.balance.cuenta,\r\n                    suma_debe: this.balance.suma_debe,\r\n                    suma_haber: this.balance.suma_haber,\r\n                    saldo_debe: this.balance.saldo_debe,\r\n                    saldo_haber: this.balance.saldo_haber\r\n                };\r\n                this.balances.push(balance); //añadimos el la variable persona al array\r\n                //Limpiamos los campos\r\n                toastr.success(\r\n                    \"Registro agregado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.balance.cuenta = \"\";\r\n                this.balance.suma_debe = \"\";\r\n                this.balance.suma_haber = \"\";\r\n                this.balance.saldo_debe = \"\";\r\n                this.balance.saldo_haber = \"\";\r\n            }\r\n        },\r\n\r\n        verificarCuenta(id) {\r\n            if (Number(this.bi.const_id) === id) {\r\n                return false;\r\n            }\r\n            let ac = this.a_corrientes.filter(x => x.cuenta_id == id);\r\n            let anc = this.a_nocorrientes.filter(x => x.cuenta_id == id);\r\n            let pc = this.p_corrientes.filter(x => x.cuenta_id == id);\r\n            let pnc = this.a_nocorrientes.filter(x => x.cuenta_id == id);\r\n            let p = this.patrimonios.filter(x => x.cuenta_id == id);\r\n            if (ac.length > 0) {\r\n                return true;\r\n            } else if (anc.length > 0) {\r\n                return true;\r\n            } else if (pc.length > 0) {\r\n                return true;\r\n            } else if (pnc.length > 0) {\r\n                return true;\r\n            } else if (p.length > 0) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n\r\n        //ACTUALIZAR SUMAS DE PASIVOS, ACTIVOS Y PATRIMONIO\r\n        cambioActivo() {\r\n            this.b_initotal.t_a_corriente = 0;\r\n            var t_activo = this.a_corrientes; //CARGAR EL ARRAY DE LOS ACTIVOS\r\n            //console.log(t_activo)\r\n            var total = 0;\r\n            t_activo.forEach(function (obj) {\r\n                //RECORRER ESE ARRAY\r\n                total += Number(obj.saldo); //SUMAR EL SALDO DE CADA CUENTA EN EL ARRAY UNA Y OTRA VEZ\r\n            });\r\n            //console.log(total);\r\n            this.b_initotal.t_a_corriente = total; //IGUALAR LA VARIABLE QUE CONTIENE LA SUMA TOTAL CON LA SUMA REALIZADA\r\n            this.TotalActivo();\r\n        },\r\n        cambioActivoNo() {\r\n            this.b_initotal.t_a_nocorriente = 0;\r\n            var t_noactivo = this.a_nocorrientes;\r\n            //console.log(t_noactivo)\r\n            var total = 0;\r\n            t_noactivo.forEach(function (obj) {\r\n                total += Number(obj.saldo);\r\n            });\r\n            //console.log(total);\r\n            this.b_initotal.t_a_nocorriente = total;\r\n            this.TotalActivo();\r\n        },\r\n        cambioPasivo() {\r\n            this.b_initotal.t_p_corriente = 0;\r\n            var t_pasivo = this.p_corrientes;\r\n            console.log(t_pasivo);\r\n            var total = 0;\r\n            t_pasivo.forEach(function (obj) {\r\n                total += Number(obj.saldo);\r\n            });\r\n            console.log(total);\r\n            this.b_initotal.t_p_corriente = total;\r\n            this.TotalPasivo();\r\n        },\r\n        cambioPasivoNo() {\r\n            this.b_initotal.t_p_no_corriente = 0;\r\n            var t_nopasivo = this.p_nocorrientes;\r\n            //console.log(t_nopasivo)\r\n            var total = 0;\r\n            t_nopasivo.forEach(function (obj) {\r\n                total += Number(obj.saldo);\r\n            });\r\n            //console.log(total);\r\n            this.b_initotal.t_p_no_corriente = total;\r\n            this.TotalPasivo();\r\n        },\r\n        cambioPatrimonio() {\r\n            this.b_initotal.t_patrimonio = 0;\r\n            var t_patrimo = this.patrimonios;\r\n            //console.log(t_patrimo)\r\n            var total = 0;\r\n            t_patrimo.forEach(function (obj) {\r\n                total += Number(obj.saldo);\r\n            });\r\n            //console.log(total);\r\n            this.b_initotal.t_patrimonio = total;\r\n        },\r\n\r\n        //TOTAL GENERAL DE ACTIVO, PASIVO Y PATRIMONIO\r\n        TotalActivo() {\r\n            var activo =\r\n                this.b_initotal.t_a_corriente + this.b_initotal.t_a_nocorriente;\r\n            //console.log(activo);\r\n            this.total_balance_inicial.t_activo = activo;\r\n        },\r\n        TotalPasivo() {\r\n            var pasivo =\r\n                this.b_initotal.t_p_corriente +\r\n                this.b_initotal.t_p_no_corriente;\r\n            //onsole.log(pasivo);\r\n            this.total_balance_inicial.t_pasivo = pasivo;\r\n        },\r\n        totalPasivoPatrimonio() {\r\n            $(\"#pasivo_patrimonio\").modal(\"hide\");\r\n            toastr.success(\"Total Agregado Correctamente\", \"SmartLearn\", {\r\n                timeOut: \"3000\"\r\n            });\r\n        },\r\n        //GUARDAR BALANCE INICIAL\r\n        guardarBalanceInicial: function () {\r\n            if (this.balance_inicial.nombre.trim() === \"\") {\r\n                toastr.error(\"Campo Nombre es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.balance_inicial.fecha.trim() === \"\") {\r\n                toastr.error(\"Campo Fecha es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (\r\n                this.total_balance_inicial.t_patrimonio_pasivo.trim() === \"\"\r\n            ) {\r\n                toastr.error(\r\n                    \"Debes calcular el Total del Pasivo + Patrimonio\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                var _this = this;\r\n                var url = \"/sistema/admin/taller/balance_inicial\";\r\n                axios\r\n                    .post(url, {\r\n                        id: _this.id_taller,\r\n                        nombre: _this.balance_inicial.nombre,\r\n                        fecha: _this.balance_inicial.fecha,\r\n                        tipo: _this.tipo,\r\n                        a_corriente: _this.a_corrientes,\r\n                        a_nocorriente: _this.a_nocorrientes,\r\n                        p_corriente: _this.p_corrientes,\r\n                        p_nocorriente: _this.p_nocorrientes,\r\n                        patrimonio: _this.patrimonios,\r\n                        totales_iniciales: _this.total_balance_inicial,\r\n                        totales_totales: _this.b_initotal,\r\n                        t_patrimonio:\r\n                            _this.total_balance_inicial.t_patrimonio_pasivo\r\n                    })\r\n                    .then(response => {\r\n                        if (response.data.success == true) {\r\n                            toastr.success(\r\n                                response.data.message,\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            _this.cambioActivo();\r\n                            _this.cambioActivoNo();\r\n                            _this.cambioPasivo();\r\n                            _this.cambioPasivoNo();\r\n                            _this.cambioPatrimonio();\r\n                            // diario.obtenerBalanceInicial();\r\n                            // $('#list-tab a:nth-child(3)').tab('show');\r\n                            console.log(response.data);\r\n                        } else {\r\n                            toastr.success(\r\n                                response.data.message,\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            _this.cambioActivo();\r\n                            _this.cambioActivoNo();\r\n                            _this.cambioPasivo();\r\n                            _this.cambioPasivoNo();\r\n                            _this.cambioPatrimonio();\r\n                            // diario.obtenerBalanceInicial();\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        //   toastr.error(error.response.data, \"SmartLearn\", {\r\n                        //     \"timeOut\": \"3000\"\r\n                        //    });\r\n                    });\r\n            }\r\n        },\r\n        obtenerBalance: function () {\r\n            var _this = this;\r\n            var url = \"/sistema/admin/taller/obtenerbalance\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller,\r\n                    tipo: _this.tipo\r\n                })\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                    if (\r\n                        response.data.tipo == _this.tipo ||\r\n                        response.data.datos == true\r\n                    ) {\r\n                        toastr.success(response.data.message, \"SmartLearn\", {\r\n                            timeOut: \"3000\"\r\n                        });\r\n                        _this.balance_inicial.nombre = response.data.nombre;\r\n                        _this.balance_inicial.fecha = response.data.fecha;\r\n                        _this.a_corrientes = response.data.a_corriente;\r\n                        _this.a_nocorrientes = response.data.a_nocorriente;\r\n                        _this.p_corrientes = response.data.p_corriente;\r\n                        _this.p_nocorrientes = response.data.p_nocorriente;\r\n                        _this.patrimonios = response.data.patrimonios;\r\n                        _this.total_balance_inicial.t_patrimonio_pasivo =\r\n                            response.data.total_pasivo_patrimonio;\r\n                        _this.cambioActivo();\r\n                        _this.cambioActivoNo();\r\n                        _this.cambioPasivo();\r\n                        _this.cambioPasivoNo();\r\n                        _this.cambioPatrimonio();\r\n                        // diario.obtenerBalanceInicial();\r\n                        console.log(response.data);\r\n                    } else {\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        }\r\n    }\r\n});\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////BALANCE INICIAL VERTICAL///////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\nconst b_ver = new Vue({\r\n    el: \"#b_vertical\",\r\n    data: {\r\n        id_taller: taller,\r\n        tipo: \"vertical\",\r\n        //diarios:[],\r\n        update: 0,\r\n        balance_inicial: {\r\n            //Nombre y fecha del balance inicial\r\n            nombre: \"\",\r\n            fecha: \"\"\r\n        },\r\n        patrimonio: {\r\n            //Asignar Patrimonio\r\n            nom_cuenta: \"\",\r\n            cuenta_id: \"\",\r\n            saldo: \"\"\r\n        },\r\n        bi: { const_id: \"\" },\r\n        options: objeto,\r\n        cuentas: cuentas,\r\n        //diarios2:[],\r\n        total_balance_inicial: {\r\n            //Totales de activo, pasivo y patrimonio\r\n            t_activo: \"\",\r\n            t_pasivo: \"\",\r\n            t_patrimonio_pasivo: \"\"\r\n        },\r\n        b_initotal: {\r\n            t_a_corriente: \"\", //Total de activo corriente\r\n            t_a_nocorriente: \"\", //Total de activo no corriente\r\n            t_p_corriente: \"\", //Total de pasivo corriente\r\n            t_p_no_corriente: \"\", //Total de pasivo no corriente\r\n            t_patrimonio: \"\" //Total de patrimonio\r\n        },\r\n        a_corrientes: [], //Array de activos corrientes\r\n        a_nocorrientes: [], //Array de activos no corrientes\r\n        p_corrientes: [], //Array de pasivos corrientes\r\n        p_nocorrientes: [], //Array de pasivos no corrientes\r\n        patrimonios: [], //Array de patrimonios\r\n        registro: {\r\n            activo_corriente: \"\",\r\n            activo_nocorriente: \"\",\r\n            pasivo_corriente: \"\",\r\n            pasivo_nocorriente: \"\",\r\n            patrimonio: \"\"\r\n        },\r\n        activo: {\r\n            a_corriente: {\r\n                //Agregar un nuevo activo corriente al array\r\n                nom_cuenta: \"\",\r\n                cuenta_id: \"\",\r\n                saldo: \"\",\r\n                edit: false\r\n            },\r\n            a_nocorriente: {\r\n                //Agregar un nuevo activo no corriente al array\r\n                nom_cuenta: \"\",\r\n                cuenta_id: \"\",\r\n                saldo: \"\",\r\n                edit: false\r\n            }\r\n        },\r\n        pasivo: {\r\n            p_corriente: {\r\n                //Agregar un nuevo pasivo corriente al array\r\n                nom_cuenta: \"\",\r\n                cuenta_id: \"\",\r\n                saldo: \"\",\r\n                edit: false,\r\n                total: \"\"\r\n            },\r\n            p_nocorriente: {\r\n                //Agregar un nuevo pasivo no corriente al array\r\n                nom_cuenta: \"\",\r\n                cuenta_id: \"\",\r\n                saldo: \"\",\r\n                edit: false,\r\n                total: \"\"\r\n            }\r\n        }\r\n    },\r\n    mounted: function () {\r\n        this.cambioActivo();\r\n        this.cambioActivoNo();\r\n        this.cambioPasivo();\r\n        this.cambioPasivoNo();\r\n        this.cambioPatrimonio();\r\n        this.TotalActivo();\r\n        this.TotalPasivo();\r\n        this.obtenerBalance();\r\n    },\r\n    methods: {\r\n        decimales(saldo) {\r\n            if (saldo !== null && saldo !== \"\" && saldo !== 0) {\r\n                let total = Number(saldo).toFixed(2);\r\n                return total;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        calculadora() {\r\n            let propsData = {\r\n                title: \"Called from basic js\",\r\n                noteProp: [\"Note number 1\", \"Note number 2\"]\r\n            };\r\n            let component = \"example-component\";\r\n            funciones.VueSweetAlert2(component, propsData);\r\n        },\r\n        abrirActivoC() {\r\n            this.limpiar();\r\n            $(\"#biv-transaccion\").modal(\"show\");\r\n            $(\"#nav-biv-activo-corriente-tab\").tab(\"show\");\r\n        },\r\n        abrirActivoNoC() {\r\n            this.limpiar();\r\n            $(\"#biv-transaccion\").modal(\"show\");\r\n\r\n            $(\"#nav-biv-activo-no-corriente-tab\").tab(\"show\");\r\n        },\r\n        abrirPasivoC() {\r\n            this.limpiar();\r\n            $(\"#biv-transaccion\").modal(\"show\");\r\n\r\n            $(\"#nav-biv-pasivo-corriente-tab\").tab(\"show\");\r\n        },\r\n        abrirPasivoNoC() {\r\n            this.limpiar();\r\n            $(\"#biv-transaccion\").modal(\"show\");\r\n\r\n            $(\"#nav-biv-pasivo-no-corriente-tab\").tab(\"show\");\r\n        },\r\n        abrirPatrimonio() {\r\n            this.limpiar();\r\n            $(\"#biv-transaccion\").modal(\"show\");\r\n\r\n            $(\"#nav-biv-patrimonio-tab\").tab(\"show\");\r\n        },\r\n\r\n        //ELIMINAR ELEMENTOS DE UN ARRAY /////////\r\n        deleteAcCooriente(index) {\r\n            let nombre = this.a_corrientes[index].nom_cuenta;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.a_corrientes.splice(index, 1);\r\n                    this.cambioActivo();\r\n                    this.TotalActivo();\r\n                }\r\n            });\r\n        },\r\n\r\n        deletePaCooriente(index) {\r\n            let nombre = this.p_corrientes[index].nom_cuenta;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n\r\n                    this.p_corrientes.splice(index, 1);\r\n                    this.cambioPasivo();\r\n                    this.TotalPasivo();\r\n                }\r\n            });\r\n        },\r\n        deleteAcNoCooriente(index) {\r\n            let nombre = this.a_nocorrientes[index].nom_cuenta;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.a_nocorrientes.splice(index, 1);\r\n                    this.cambioActivoNo();\r\n                    this.TotalActivo();\r\n                }\r\n            });\r\n        },\r\n        deletePaNoCooriente(index) {\r\n            let nombre = this.p_nocorrientes[index].nom_cuenta;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.p_nocorrientes.splice(index, 1);\r\n                    this.cambioPasivoNo();\r\n                    this.TotalPasivo();\r\n                }\r\n            });\r\n        },\r\n        deletePatrimonio(index) {\r\n            let nombre = this.patrimonios[index].nom_cuenta;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.patrimonios.splice(index, 1);\r\n                    this.cambioPatrimonio();\r\n                }\r\n            });\r\n        },\r\n        limpiar() {\r\n            //LIMPIAR TODOS LOS CAMPOS DE ACTIVOS PASIVOS Y PATRIMONIOS\r\n            this.pasivo.p_corriente.cuenta_id = \"\";\r\n            this.pasivo.p_corriente.saldo = \"\";\r\n            this.pasivo.p_nocorriente.cuenta_id = \"\";\r\n            this.pasivo.p_nocorriente.saldo = \"\";\r\n            this.activo.a_corriente.cuenta_id = \"\";\r\n            this.activo.a_corriente.saldo = \"\";\r\n            this.activo.a_nocorriente.cuenta_id = \"\";\r\n            this.activo.a_nocorriente.saldo = \"\";\r\n\r\n            this.pasivo.p_corriente.edit = false;\r\n            this.pasivo.p_nocorriente.edit = false;\r\n            this.activo.a_corriente.edit = false;\r\n            this.activo.a_nocorriente.edit = false;\r\n            this.bi.const_id = \"\";\r\n        },\r\n        agregarActivoCorriente() {\r\n            if (this.activo.a_corriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.activo.a_corriente.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    var a_corriente = {\r\n                        cuenta_id: this.activo.a_corriente.cuenta_id,\r\n                        nom_cuenta: nombre,\r\n                        saldo: this.activo.a_corriente.saldo\r\n                    };\r\n                    this.a_corrientes.push(a_corriente);\r\n                    toastr.success(\r\n                        \"Cuenta agregada correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.activo.a_corriente.cuenta_id = \"\";\r\n                    this.activo.a_corriente.saldo = \"\";\r\n                    this.cambioActivo();\r\n                }\r\n            }\r\n        },\r\n\r\n        //EDITAR ELEMENTOS DE UN ARRAY\r\n        editAcorriente(index) {\r\n            this.activo.a_corriente.edit = true;\r\n            this.registro.a_corriente = index;\r\n            this.bi.const_id = this.a_corrientes[index].cuenta_id;\r\n            this.activo.a_corriente.cuenta_id = this.a_corrientes[\r\n                index\r\n            ].cuenta_id;\r\n            this.activo.a_corriente.saldo = this.a_corrientes[index].saldo;\r\n            $(\"#biv-transaccion\").modal(\"show\");\r\n            $(\"#nav-biv-activo-corriente-tab\").tab(\"show\");\r\n        },\r\n        actualizarActivoC() {\r\n            if (this.activo.a_corriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.activo.a_corriente.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    let index = this.registro.a_corriente;\r\n                    this.a_corrientes[\r\n                        index\r\n                    ].cuenta_id = this.activo.a_corriente.cuenta_id;\r\n                    this.a_corrientes[index].nom_cuenta = nombre;\r\n                    this.a_corrientes[\r\n                        index\r\n                    ].saldo = this.activo.a_corriente.saldo;\r\n                    this.activo.a_corriente.cuenta_id = \"\";\r\n                    this.activo.a_corriente.saldo = \"\";\r\n                    this.activo.a_corriente.edit = false;\r\n                    this.registro.a_corriente = \"\";\r\n                    this.cambioActivo();\r\n                }\r\n            }\r\n        },\r\n        cancelarEdicionActivoC() {\r\n            this.activo.a_corriente.cuenta_id = \"\";\r\n            this.activo.a_corriente.saldo = \"\";\r\n            this.activo.a_corriente.edit = false;\r\n        },\r\n        agregarActivoNoCorriente() {\r\n            if (this.activo.a_nocorriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.activo.a_nocorriente.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    var a_nocorriente = {\r\n                        cuenta_id: this.activo.a_nocorriente.cuenta_id,\r\n                        nom_cuenta: nombre,\r\n                        saldo: this.activo.a_nocorriente.saldo\r\n                    };\r\n                    this.a_nocorrientes.push(a_nocorriente);\r\n                    toastr.success(\r\n                        \"Cuenta agregada correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.activo.a_nocorriente.cuenta_id = \"\";\r\n                    this.activo.a_nocorriente.saldo = \"\";\r\n                    this.cambioActivoNo();\r\n                }\r\n            }\r\n        },\r\n\r\n        //EDITAR ELEMENTOS DE UN ARRAY\r\n        editNoAcorriente(index) {\r\n            this.activo.a_nocorriente.edit = true;\r\n            this.registro.a_nocorriente = index;\r\n            this.bi.const_id = this.a_nocorrientes[index].cuenta_id;\r\n            this.activo.a_nocorriente.cuenta_id = this.a_nocorrientes[\r\n                index\r\n            ].cuenta_id;\r\n            this.activo.a_nocorriente.saldo = this.a_nocorrientes[index].saldo;\r\n            $(\"#biv-transaccion\").modal(\"show\");\r\n            $(\"#nav-biv-activo-no-corriente-tab\").tab(\"show\");\r\n        },\r\n        actualizarActivoNC() {\r\n            if (this.activo.a_nocorriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.activo.a_nocorriente.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    let index = this.registro.a_nocorriente;\r\n                    this.a_nocorrientes[\r\n                        index\r\n                    ].cuenta_id = this.activo.a_nocorriente.cuenta_id;\r\n                    this.a_nocorrientes[index].nom_cuenta = nombre;\r\n                    this.a_nocorrientes[\r\n                        index\r\n                    ].saldo = this.activo.a_nocorriente.saldo;\r\n                    this.activo.a_nocorriente.cuenta_id = \"\";\r\n                    this.activo.a_nocorriente.saldo = \"\";\r\n                    this.activo.a_nocorriente.edit = false;\r\n                    this.registro.a_nocorriente = \"\";\r\n                    this.cambioActivoNo();\r\n                }\r\n            }\r\n        },\r\n        cancelarEdicionActivoNC() {\r\n            this.activo.a_nocorriente.cuenta_id = \"\";\r\n            this.activo.a_nocorriente.saldo = \"\";\r\n            this.activo.a_nocorriente.edit = false;\r\n        },\r\n\r\n        agregarPasivoCorriente() {\r\n            if (this.pasivo.p_corriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.pasivo.p_corriente.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    var p_corriente = {\r\n                        cuenta_id: this.pasivo.p_corriente.cuenta_id,\r\n                        nom_cuenta: nombre,\r\n                        saldo: this.pasivo.p_corriente.saldo\r\n                    };\r\n                    this.p_corrientes.push(p_corriente);\r\n                    toastr.success(\r\n                        \"Cuenta agregada correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.pasivo.p_corriente.cuenta_id = \"\";\r\n                    this.pasivo.p_corriente.saldo = \"\";\r\n                    this.cambioPasivo();\r\n                }\r\n            }\r\n        },\r\n\r\n        //EDITAR ELEMENTOS DE UN ARRAY\r\n        editPcorriente(index) {\r\n            this.pasivo.p_corriente.edit = true;\r\n            this.registro.p_corriente = index;\r\n            this.bi.const_id = this.p_corrientes[index].cuenta_id;\r\n            this.pasivo.p_corriente.cuenta_id = this.p_corrientes[\r\n                index\r\n            ].cuenta_id;\r\n            this.pasivo.p_corriente.saldo = this.p_corrientes[index].saldo;\r\n            $(\"#biv-transaccion\").modal(\"show\");\r\n            $(\"#nav-biv-pasivo-corriente-tab\").tab(\"show\");\r\n        },\r\n        actualizarPasivoC() {\r\n            if (this.pasivo.p_corriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.pasivo.p_corriente.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    let index = this.registro.p_corriente;\r\n                    this.p_corrientes[\r\n                        index\r\n                    ].cuenta_id = this.pasivo.p_corriente.cuenta_id;\r\n                    this.p_corrientes[index].nom_cuenta = nombre;\r\n                    this.p_corrientes[\r\n                        index\r\n                    ].saldo = this.pasivo.p_corriente.saldo;\r\n                    this.pasivo.p_corriente.cuenta_id = \"\";\r\n                    this.pasivo.p_corriente.saldo = \"\";\r\n                    this.pasivo.p_corriente.edit = false;\r\n                    this.registro.p_corriente = \"\";\r\n                    this.cambioPasivo();\r\n                }\r\n            }\r\n        },\r\n        cancelarEdicionPcorriente() {\r\n            this.pasivo.p_corriente.cuenta_id = \"\";\r\n            this.pasivo.p_corriente.saldo = \"\";\r\n            this.pasivo.p_corriente.edit = false;\r\n        },\r\n\r\n        agregarPasivoNoCorriente() {\r\n            if (this.pasivo.p_nocorriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.pasivo.p_nocorriente.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    var p_nocorriente = {\r\n                        cuenta_id: this.pasivo.p_nocorriente.cuenta_id,\r\n                        nom_cuenta: nombre,\r\n                        saldo: this.pasivo.p_nocorriente.saldo\r\n                    };\r\n                    this.p_nocorrientes.push(p_nocorriente);\r\n                    toastr.success(\r\n                        \"Cuenta agregada correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.pasivo.p_nocorriente.cuenta_id = \"\";\r\n                    this.pasivo.p_nocorriente.saldo = \"\";\r\n                    this.cambioPasivoNo();\r\n                }\r\n            }\r\n        },\r\n\r\n        //EDITAR ELEMENTOS DE UN ARRAY\r\n        editPNocorriente(index) {\r\n            this.pasivo.p_nocorriente.edit = true;\r\n            this.registro.p_nocorriente = index;\r\n            this.bi.const_id = this.p_nocorrientes[index].cuenta_id;\r\n            this.pasivo.p_nocorriente.cuenta_id = this.p_nocorrientes[\r\n                index\r\n            ].cuenta_id;\r\n            this.pasivo.p_nocorriente.saldo = this.p_nocorrientes[index].saldo;\r\n            $(\"#biv-transaccion\").modal(\"show\");\r\n            $(\"#nav-biv-pasivo-no-corriente-tab\").tab(\"show\");\r\n        },\r\n        actualizarPasivoNC() {\r\n            if (this.pasivo.p_nocorriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.pasivo.p_nocorriente.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    let index = this.registro.p_nocorriente;\r\n                    this.p_nocorrientes[\r\n                        index\r\n                    ].cuenta_id = this.pasivo.p_nocorriente.cuenta_id;\r\n                    this.p_nocorrientes[index].nom_cuenta = nombre;\r\n                    this.p_nocorrientes[\r\n                        index\r\n                    ].saldo = this.pasivo.p_nocorriente.saldo;\r\n                    this.pasivo.p_nocorriente.cuenta_id = \"\";\r\n                    this.pasivo.p_nocorriente.saldo = \"\";\r\n                    this.pasivo.p_nocorriente.edit = false;\r\n                    this.registro.p_nocorriente = \"\";\r\n                    this.cambioPasivoNo();\r\n                }\r\n            }\r\n        },\r\n        cancelarEdicionPNocorriente() {\r\n            this.pasivo.p_nocorriente.cuenta_id = \"\";\r\n            this.pasivo.p_nocorriente.saldo = \"\";\r\n            this.pasivo.p_nocorriente.edit = false;\r\n        },\r\n        agregarPatrimonio() {\r\n            if (this.patrimonio.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.patrimonio.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    var patrimonio = {\r\n                        cuenta_id: this.patrimonio.cuenta_id,\r\n                        nom_cuenta: nombre,\r\n                        saldo: this.patrimonio.saldo\r\n                    };\r\n                    this.patrimonios.push(patrimonio);\r\n                    toastr.success(\r\n                        \"Cuenta agregada correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.patrimonio.cuenta_id = \"\";\r\n                    this.patrimonio.saldo = \"\";\r\n                    this.cambioPatrimonio();\r\n                }\r\n            }\r\n        },\r\n\r\n        //EDITAR ELEMENTOS DE UN ARRAY\r\n        editPatrimonio(index) {\r\n            this.patrimonio.edit = true;\r\n            this.registro.patrimonio = index;\r\n            this.bi.const_id = this.patrimonios[index].cuenta_id;\r\n            this.patrimonio.cuenta_id = this.patrimonios[index].cuenta_id;\r\n            this.patrimonio.saldo = this.patrimonios[index].saldo;\r\n            $(\"#biv-transaccion\").modal(\"show\");\r\n            $(\"#nav-biv-patrimonio-tab\").tab(\"show\");\r\n        },\r\n        actualizarPatrimonio() {\r\n            if (this.patrimonio.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.patrimonio.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    let index = this.registro.patrimonio;\r\n                    this.patrimonios[\r\n                        index\r\n                    ].cuenta_id = this.patrimonio.cuenta_id;\r\n                    this.patrimonios[index].nom_cuenta = nombre;\r\n                    this.patrimonios[index].saldo = this.patrimonio.saldo;\r\n                    this.patrimonio.cuenta_id = \"\";\r\n                    this.patrimonio.saldo = \"\";\r\n                    this.patrimonio.edit = false;\r\n                    this.registro.patrimonio = \"\";\r\n                    this.cambioPatrimonio();\r\n                }\r\n            }\r\n        },\r\n        cancelarEdicionPatrimonio() {\r\n            this.patrimonio.cuenta_id = \"\";\r\n            this.patrimonio.saldo = \"\";\r\n            this.patrimonio.edit = false;\r\n        },\r\n\r\n        Agregar() {\r\n            if (this.diario.nom_cuenta.trim() === \"\") {\r\n                toastr.error(\r\n                    \"El campo Nombre de cuenta es obligatorio\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (\r\n                this.diario.debe.trim() === \"\" &&\r\n                this.diario.haber.trim() === \"\"\r\n            ) {\r\n                toastr.warning(\r\n                    \"Rellena el cambio de Debe o Haber, no puedes dejar ambos vacios\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (\r\n                this.diario.debe.trim() != \"\" &&\r\n                this.diario.haber.trim() != \"\"\r\n            ) {\r\n                toastr.warning(\r\n                    \"No pueden estar ambos campos llenos a mismo tiempo\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                var diario = {\r\n                    fecha: this.diario.fecha,\r\n                    nom_cuenta: this.diario.nom_cuenta,\r\n                    gloza: this.diario.gloza,\r\n                    debe: this.diario.debe,\r\n                    haber: this.diario.haber\r\n                };\r\n                this.diarios.push(diario); //añadimos el la variable persona al array\r\n                //Limpiamos los campos\r\n                toastr.success(\r\n                    \"Registro agregado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.diario.fecha = \"\";\r\n                this.diario.nom_cuenta = \"\";\r\n                this.diario.gloza = \"\";\r\n                this.diario.debe = \"\";\r\n                this.diario.haber = \"\";\r\n            }\r\n        },\r\n        deleteDiario(index) {\r\n            this.diarios.splice(index, 1);\r\n        },\r\n        guardarDiario: function () {\r\n            var _this = this;\r\n            var url = \"/sistema/admin/taller/diario\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller,\r\n                    datos: _this.diarios\r\n                })\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                })\r\n                .catch(function (error) { });\r\n        },\r\n        agregarBalance() {\r\n            if (this.balance.cuenta.trim() === \"\") {\r\n                toastr.error(\"El campo cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (\r\n                this.balance.suma_debe.trim() === \"\" &&\r\n                this.balance.suma_haber.trim() === \"\"\r\n            ) {\r\n                toastr.warning(\r\n                    \"Rellena el cambio de Debe o Haber DE SUMAS, no puedes dejar ambos vacios\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (\r\n                this.balance.saldo_debe.trim() === \"\" &&\r\n                this.balance.saldo_haber.trim() === \"\"\r\n            ) {\r\n                toastr.warning(\r\n                    \"Rellena el cambio de Debe o Haber de SALDOS, no puedes dejar ambos vacios\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (\r\n                this.balance.saldo_debe.trim() != \"\" &&\r\n                this.balance.saldo_haber.trim() != \"\"\r\n            ) {\r\n                toastr.warning(\r\n                    \"No pueden estar ambos campos llenos a mismo tiempo\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                var balance = {\r\n                    cuenta: this.balance.cuenta,\r\n                    suma_debe: this.balance.suma_debe,\r\n                    suma_haber: this.balance.suma_haber,\r\n                    saldo_debe: this.balance.saldo_debe,\r\n                    saldo_haber: this.balance.saldo_haber\r\n                };\r\n                this.balances.push(balance); //añadimos el la variable persona al array\r\n                //Limpiamos los campos\r\n                toastr.success(\r\n                    \"Registro agregado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.balance.cuenta = \"\";\r\n                this.balance.suma_debe = \"\";\r\n                this.balance.suma_haber = \"\";\r\n                this.balance.saldo_debe = \"\";\r\n                this.balance.saldo_haber = \"\";\r\n            }\r\n        },\r\n        verificarCuenta(id) {\r\n            if (Number(this.bi.const_id) === id) {\r\n                return false;\r\n            }\r\n            let ac = this.a_corrientes.filter(x => x.cuenta_id == id);\r\n            let anc = this.a_nocorrientes.filter(x => x.cuenta_id == id);\r\n            let pc = this.p_corrientes.filter(x => x.cuenta_id == id);\r\n            let pnc = this.a_nocorrientes.filter(x => x.cuenta_id == id);\r\n            let p = this.patrimonios.filter(x => x.cuenta_id == id);\r\n            if (ac.length > 0) {\r\n                return true;\r\n            } else if (anc.length > 0) {\r\n                return true;\r\n            } else if (pc.length > 0) {\r\n                return true;\r\n            } else if (pnc.length > 0) {\r\n                return true;\r\n            } else if (p.length > 0) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n\r\n        //ACTUALIZAR SUMAS DE PASIVOS, ACTIVOS Y PATRIMONIO\r\n        cambioActivo() {\r\n            this.b_initotal.t_a_corriente = 0;\r\n            var t_activo = this.a_corrientes; //CARGAR EL ARRAY DE LOS ACTIVOS\r\n            //console.log(t_activo)\r\n            var total = 0;\r\n            t_activo.forEach(function (obj) {\r\n                //RECORRER ESE ARRAY\r\n                total += Number(obj.saldo); //SUMAR EL SALDO DE CADA CUENTA EN EL ARRAY UNA Y OTRA VEZ\r\n            });\r\n            //console.log(total);\r\n            this.b_initotal.t_a_corriente = total; //IGUALAR LA VARIABLE QUE CONTIENE LA SUMA TOTAL CON LA SUMA REALIZADA\r\n            this.TotalActivo();\r\n        },\r\n        cambioActivoNo() {\r\n            this.b_initotal.t_a_nocorriente = 0;\r\n            var t_noactivo = this.a_nocorrientes;\r\n            //console.log(t_noactivo)\r\n            var total = 0;\r\n            t_noactivo.forEach(function (obj) {\r\n                total += Number(obj.saldo);\r\n            });\r\n            //console.log(total);\r\n            this.b_initotal.t_a_nocorriente = total;\r\n            this.TotalActivo();\r\n        },\r\n        cambioPasivo() {\r\n            this.b_initotal.t_p_corriente = 0;\r\n            var t_pasivo = this.p_corrientes;\r\n            //console.log(t_pasivo)\r\n            var total = 0;\r\n            t_pasivo.forEach(function (obj) {\r\n                total += Number(obj.saldo);\r\n            });\r\n            //console.log(total);\r\n            this.b_initotal.t_p_corriente = total;\r\n            this.TotalPasivo();\r\n        },\r\n        cambioPasivoNo() {\r\n            this.b_initotal.t_p_no_corriente = 0;\r\n            var t_nopasivo = this.p_nocorrientes;\r\n            //console.log(t_nopasivo)\r\n            var total = 0;\r\n            t_nopasivo.forEach(function (obj) {\r\n                total += Number(obj.saldo);\r\n            });\r\n            //console.log(total);\r\n            this.b_initotal.t_p_no_corriente = total;\r\n            this.TotalPasivo();\r\n        },\r\n        cambioPatrimonio() {\r\n            this.b_initotal.t_patrimonio = 0;\r\n            var t_patrimo = this.patrimonios;\r\n            //console.log(t_patrimo)\r\n            var total = 0;\r\n            t_patrimo.forEach(function (obj) {\r\n                total += Number(obj.saldo);\r\n            });\r\n            //console.log(total);\r\n            this.b_initotal.t_patrimonio = total;\r\n        },\r\n\r\n        //TOTAL GENERAL DE ACTIVO, PASIVO Y PATRIMONIO\r\n        TotalActivo() {\r\n            var activo =\r\n                this.b_initotal.t_a_corriente + this.b_initotal.t_a_nocorriente;\r\n            //console.log(activo);\r\n            this.total_balance_inicial.t_activo = activo;\r\n        },\r\n        TotalPasivo() {\r\n            var pasivo =\r\n                this.b_initotal.t_p_corriente +\r\n                this.b_initotal.t_p_no_corriente;\r\n            //onsole.log(pasivo);\r\n            this.total_balance_inicial.t_pasivo = pasivo;\r\n        },\r\n        totalPasivoPatrimonio() {\r\n            $(\"#pasivo_patrimonio\").modal(\"hide\");\r\n            toastr.success(\"Total Agregado Correctamente\", \"SmartLearn\", {\r\n                timeOut: \"3000\"\r\n            });\r\n        },\r\n        //GUARDAR BALANCE INICIAL\r\n        guardarBalanceInicial: function () {\r\n            if (this.balance_inicial.nombre.trim() === \"\") {\r\n                toastr.error(\"Campo Nombre es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.balance_inicial.fecha.trim() === \"\") {\r\n                toastr.error(\"Campo Fecha es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (\r\n                this.total_balance_inicial.t_patrimonio_pasivo.trim() === \"\"\r\n            ) {\r\n                toastr.error(\r\n                    \"Debes calcular el Total del Pasivo + Patrimonio\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                var _this = this;\r\n                var url = \"/sistema/admin/taller/balance_inicial\";\r\n                axios\r\n                    .post(url, {\r\n                        id: _this.id_taller,\r\n                        nombre: _this.balance_inicial.nombre,\r\n                        fecha: _this.balance_inicial.fecha,\r\n                        tipo: _this.tipo,\r\n                        a_corriente: _this.a_corrientes,\r\n                        a_nocorriente: _this.a_nocorrientes,\r\n                        p_corriente: _this.p_corrientes,\r\n                        p_nocorriente: _this.p_nocorrientes,\r\n                        patrimonio: _this.patrimonios,\r\n                        totales_iniciales: _this.total_balance_inicial,\r\n                        totales_totales: _this.b_initotal,\r\n                        t_patrimonio:\r\n                            _this.total_balance_inicial.t_patrimonio_pasivo\r\n                    })\r\n                    .then(response => {\r\n                        if (response.data.success == true) {\r\n                            toastr.success(\r\n                                response.data.message,\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            _this.cambioActivo();\r\n                            _this.cambioActivoNo();\r\n                            _this.cambioPasivo();\r\n                            _this.cambioPasivoNo();\r\n                            _this.cambioPatrimonio();\r\n\r\n                            console.log(response.data);\r\n                        } else {\r\n                            toastr.success(\r\n                                response.data.message,\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            _this.cambioActivo();\r\n                            _this.cambioActivoNo();\r\n                            _this.cambioPasivo();\r\n                            _this.cambioPasivoNo();\r\n                            _this.cambioPatrimonio();\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        //   toastr.error(error.response.data.message, \"SmartLearn\", {\r\n                        //     \"timeOut\": \"3000\"\r\n                        //    });\r\n                    });\r\n            }\r\n        },\r\n        obtenerBalance: function () {\r\n            var _this = this;\r\n            var url = \"/sistema/admin/taller/obtenerbalance\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller,\r\n                    tipo: _this.tipo\r\n                })\r\n                .then(response => {\r\n                    if (\r\n                        response.data.tipo == _this.tipo ||\r\n                        response.data.datos == true\r\n                    ) {\r\n                        toastr.success(response.data.message, \"SmartLearn\", {\r\n                            timeOut: \"3000\"\r\n                        });\r\n                        _this.balance_inicial.nombre = response.data.nombre;\r\n                        _this.balance_inicial.fecha = response.data.fecha;\r\n                        _this.a_corrientes = response.data.a_corriente;\r\n                        _this.a_nocorrientes = response.data.a_nocorriente;\r\n                        _this.p_corrientes = response.data.p_corriente;\r\n                        _this.p_nocorrientes = response.data.p_nocorriente;\r\n                        _this.patrimonios = response.data.patrimonios;\r\n                        _this.total_balance_inicial.t_patrimonio_pasivo =\r\n                            response.data.total_pasivo_patrimonio;\r\n                        _this.cambioActivo();\r\n                        _this.cambioActivoNo();\r\n                        _this.cambioPasivo();\r\n                        _this.cambioPasivoNo();\r\n                        _this.cambioPatrimonio();\r\n                        //diario.obtenerBalanceInicial();\r\n                        console.log(response.data);\r\n                    } else {\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        }\r\n    }\r\n});\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////DIARIO GENERAL//////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst diario = new Vue({\r\n    el: \"#diario\",\r\n    name: \"Diario General\",\r\n    data: {\r\n        id_taller: taller,\r\n        datos_diario: \"\",\r\n        producto_id: 1,\r\n        nombre: \"\",\r\n        fechabalance: \"\",\r\n        complete: false,\r\n        options: objeto,\r\n        cuentas: cuentas,\r\n        balanceInicial: {\r\n            debe: [],\r\n            haber: [],\r\n            totaldebe: 0,\r\n            totalhaber: 0\r\n        },\r\n        kardex: [],\r\n        nombre_kardex: \"\",\r\n        producto_kardex: \"\",\r\n        transacciones: \"\",\r\n        registros: [],\r\n        eliminar: {\r\n            index: \"\"\r\n        },\r\n        ajustes: [],\r\n        porcentajes: {\r\n            porcentaje: 0,\r\n            index_cuenta: \"\",\r\n            tipo: \"\",\r\n            cantidad: 0\r\n        },\r\n        registerindex: 0,\r\n        cuentaindex: 0,\r\n        diarios: {\r\n            debe: [],\r\n            haber: [],\r\n            comentario: \"\",\r\n            fecha: \"\",\r\n            ajustado: false,\r\n            tipo: \"\"\r\n        },\r\n        edit: {\r\n            debe: [],\r\n            haber: [],\r\n            comentario: \"\"\r\n        },\r\n        diario: {\r\n            debe: {\r\n                edit: false,\r\n                index: \"\",\r\n                fecha: \"\",\r\n                nom_cuenta: \"\",\r\n                saldo: \"0.00\"\r\n            },\r\n            haber: {\r\n                edit: false,\r\n                index: \"\",\r\n                fecha: \"\",\r\n                nom_cuenta: \"\",\r\n                saldo: \"0.00\"\r\n            },\r\n            comentario: \"\"\r\n        },\r\n        pasan: {\r\n            debe: 0,\r\n            haber: 0\r\n        },\r\n        total: {\r\n            debe: 0,\r\n            haber: 0\r\n        },\r\n        update: false,\r\n        dato: []\r\n    },\r\n    mounted: function () {\r\n        this.obtenerDiarioGeneral();\r\n    },\r\n\r\n    methods: {\r\n        calculadora() {\r\n            let propsData = {\r\n                title: \"Called from basic js\",\r\n                noteProp: [\"Note number 1\", \"Note number 2\"]\r\n            };\r\n            let component = \"example-component\";\r\n            funciones.VueSweetAlert2(component, propsData);\r\n        },\r\n        formatoFecha(fecha) {\r\n            if (fecha !== null) {\r\n                let date = fecha\r\n                    .split(\"-\")\r\n                    .reverse()\r\n                    .join(\"-\");\r\n                return date;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        decimales(saldo) {\r\n            if (saldo !== null) {\r\n                let total = Number(saldo).toFixed(2);\r\n                return total;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        abrirTransaccion() {\r\n            this.update = false;\r\n            this.diarios.debe = [];\r\n            this.diarios.haber = [];\r\n            this.diarios.fecha = [];\r\n            this.diarios.comentario = [];\r\n            this.diarios.ajustado = false;\r\n            this.diario.haber.fecha = \"\";\r\n            this.diario.haber.nom_cuenta = \"\";\r\n            this.diario.haber.saldo = \"\";\r\n            this.diario.haber.edit = false;\r\n            this.diario.debe.fecha = \"\";\r\n            this.diario.debe.nom_cuenta = \"\";\r\n            this.diario.debe.saldo = \"\";\r\n            this.diario.debe.edit = false;\r\n\r\n            this.limpiar();\r\n            $(\"#dg-transaccion\").modal(\"show\");\r\n            $(\"#comentario-diario-tab\").tab(\"show\");\r\n        },\r\n        limpiar() {\r\n            this.update = false;\r\n            this.diarios.debe = [];\r\n            this.diarios.haber = [];\r\n            this.diarios.fecha = [];\r\n            this.diarios.comentario = [];\r\n            this.diarios.ajustado = false;\r\n            this.diario.haber.fecha = \"\";\r\n            this.diario.haber.nom_cuenta = \"\";\r\n            this.diario.haber.saldo = \"\";\r\n            this.diario.haber.edit = false;\r\n            this.diario.debe.fecha = \"\";\r\n            this.diario.debe.nom_cuenta = \"\";\r\n            this.diario.debe.saldo = \"\";\r\n            this.diario.debe.edit = false;\r\n        },\r\n        valorPorcentual(porcentaje, valor) {\r\n            let total = Number((valor * porcentaje) / 100);\r\n            return total.toFixed(2);\r\n        },\r\n        obtenerKardexFifo: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/kardex-obtener-fifo\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller,\r\n                    producto_id: _this.producto_id\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        _this.kardex = response.data.kardex_fifo;\r\n                        _this.nombre_kardex = response.data.informacion.nombre;\r\n                        _this.producto_kardex =\r\n                            response.data.informacion.producto;\r\n                    } else {\r\n                        _this.kardex = [];\r\n                        _this.nombre = \"\";\r\n                        _this.producto = \"\";\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        },\r\n        obtenerBalanceInicial: function () {\r\n            let verificar = this.registros.filter(x => x.tipo == \"inicial\");\r\n\r\n            if (verificar.length >= 1) {\r\n                toastr.warning(\r\n                    \"Ya tienes cargado los datos del balance inicial\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                return;\r\n            }\r\n\r\n            var _this = this;\r\n            var url = \"/sistema/admin/taller/b_inicial_diario\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        let inicial = response.data.inicial;\r\n                        inicial.debe[0].fecha = inicial.fecha;\r\n                        _this.registros.unshift(inicial);\r\n\r\n                        console.log(response.data);\r\n                        this.totalDebe();\r\n                        this.totalHaber();\r\n                        this.totalesFinales();\r\n                    } else {\r\n                        toastr.warning(\r\n                            \"Aun no has creado tu balance Inicial\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        },\r\n        agregarHaber() {\r\n            if (this.diario.haber.nom_cuenta === \"\") {\r\n                toastr.error(\"No has registrado una cuenta\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.diario.haber.nom_cuenta;\r\n                let cuenta = this.cuentas.filter(x => x.id == id);\r\n                let valor = this.diario.haber.saldo;\r\n\r\n                if (cuenta[0].porcentual == 1) {\r\n                    let calculo = this.valorPorcentual(\r\n                        cuenta[0].porcentaje,\r\n                        valor\r\n                    );\r\n                    let haber = {\r\n                        cuenta_id: cuenta[0].id,\r\n                        fecha: this.diario.haber.fecha,\r\n                        nom_cuenta: cuenta[0].nombre,\r\n                        saldo: calculo\r\n                    };\r\n                    this.diarios.haber.push(haber); //añadimos el la variable persona al array\r\n                } else {\r\n                    let haber = {\r\n                        cuenta_id: cuenta[0].id,\r\n                        fecha: this.diario.haber.fecha,\r\n                        nom_cuenta: cuenta[0].nombre,\r\n                        saldo: this.diario.haber.saldo\r\n                    };\r\n                    this.diarios.haber.push(haber);\r\n                }\r\n\r\n                //Limpiamos los campos\r\n                toastr.success(\"Activo agregado correctamente\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n                this.diario.haber.fecha = \"\";\r\n                this.diario.haber.nom_cuenta = \"\";\r\n                this.diario.haber.saldo = \"\";\r\n            }\r\n        },\r\n        agregarDebe() {\r\n            let id = this.diario.debe.nom_cuenta;\r\n            let cuenta = this.cuentas.filter(x => x.id == id);\r\n            let valor = this.diario.debe.saldo;\r\n\r\n            if (this.diario.debe.nom_cuenta === \"\") {\r\n                toastr.error(\"La cuenta es obligatoria\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                if (cuenta[0].porcentual == 1) {\r\n                    let calculo = this.valorPorcentual(\r\n                        cuenta[0].porcentaje,\r\n                        valor\r\n                    );\r\n\r\n                    let debe = {\r\n                        cuenta_id: cuenta[0].id,\r\n                        fecha: this.diario.debe.fecha,\r\n                        nom_cuenta: cuenta[0].nombre,\r\n                        saldo: calculo\r\n                    };\r\n                    this.diarios.debe.push(debe); //añadimos el la variable persona al array\r\n                } else {\r\n                    let debe = {\r\n                        cuenta_id: cuenta[0].id,\r\n                        fecha: this.diario.debe.fecha,\r\n                        nom_cuenta: cuenta[0].nombre,\r\n                        saldo: this.diario.debe.saldo\r\n                    };\r\n                    this.diarios.debe.push(debe);\r\n                }\r\n                toastr.success(\"Activo agregado correctamente\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n                this.diario.debe.fecha = \"\";\r\n                this.diario.debe.nom_cuenta = \"\";\r\n                this.diario.debe.saldo = \"\";\r\n            }\r\n            // }\r\n        },\r\n        agregarComentario() {\r\n            this.diarios.comentario = this.diario.comentario;\r\n            this.diario.comentario = \"\";\r\n        },\r\n        deleteHaber(index) {\r\n            this.diarios.haber.splice(index, 1);\r\n            this.diario.debe.fecha = \"\";\r\n            this.diario.debe.nom_cuenta = \"\";\r\n            this.diario.debe.saldo = \"\";\r\n            this.diario.debe.edit = false;\r\n            this.diario.haber.fecha = \"\";\r\n            this.diario.haber.nom_cuenta = \"\";\r\n            this.diario.haber.saldo = \"\";\r\n            this.diario.haber.edit = false;\r\n        },\r\n        deleteDebe(index) {\r\n            this.diarios.debe.splice(index, 1);\r\n            this.diario.haber.fecha = \"\";\r\n            this.diario.haber.nom_cuenta = \"\";\r\n            this.diario.haber.saldo = \"\";\r\n            this.diario.haber.edit = false;\r\n            this.diario.debe.fecha = \"\";\r\n            this.diario.debe.nom_cuenta = \"\";\r\n            this.diario.debe.saldo = \"\";\r\n            this.diario.debe.edit = false;\r\n        },\r\n        guardarRegistro() {\r\n            let total_debe = 0;\r\n            let total_haber = 0;\r\n\r\n            this.diarios.debe.forEach(function (debe, id) {\r\n                let saldo = debe.saldo;\r\n                total_debe += Number(saldo);\r\n            });\r\n            this.diarios.haber.forEach(function (haber, id) {\r\n                let saldo = haber.saldo;\r\n                total_haber += Number(saldo);\r\n            });\r\n\r\n            if (this.diarios.debe == 0) {\r\n                toastr.error(\r\n                    \"No tienes transaccion para guardar\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.diarios.comentario == \"\") {\r\n                toastr.error(\"Debes agregar un comentario\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.diarios.fecha == \"\") {\r\n                toastr.error(\"Debes agregar la fecha\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (total_haber.toFixed(2) != total_debe.toFixed(2)) {\r\n                toastr.error(\r\n                    \"El Total de Debe y Haber no coinciden\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                this.diarios.debe[0].fecha = this.diarios.fecha;\r\n\r\n                if (this.diarios.ajustado == true) {\r\n                    let registro = {\r\n                        tipo: \"ajustado\",\r\n                        debe: this.diarios.debe,\r\n                        haber: this.diarios.haber,\r\n                        comentario: this.diarios.comentario,\r\n                        fecha: this.diarios.fecha\r\n                    };\r\n                    this.ajustes.push(registro); //añadimos el la variable persona al array\r\n                } else {\r\n                    let registro = {\r\n                        tipo: \"normal\",\r\n                        debe: this.diarios.debe,\r\n                        haber: this.diarios.haber,\r\n                        comentario: this.diarios.comentario,\r\n                        fecha: this.diarios.fecha\r\n                    };\r\n                    this.registros.push(registro); //añadimos el la variable persona al array\r\n                }\r\n                //Limpiamos los campos\r\n                toastr.success(\r\n                    \"Registro agregado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.diarios.debe = [];\r\n                this.diarios.haber = [];\r\n                this.diarios.comentario = \"\";\r\n                this.diarios.ajustado = false;\r\n                this.totalDebe();\r\n                this.totalHaber();\r\n                this.totalesFinales();\r\n                this.limpiar();\r\n\r\n                $(\"#dg-transaccion\").modal(\"hide\");\r\n            }\r\n        },\r\n        debeEditRegister(id) {\r\n            let register = JSON.parse(JSON.stringify(this.registros));\r\n            this.update = true;\r\n            this.registerindex = id;\r\n            this.diarios.debe = [];\r\n            this.diarios.haber = [];\r\n            this.diarios.debe = register[id].debe;\r\n            this.diarios.haber = register[id].haber;\r\n            this.diarios.comentario = register[id].comentario;\r\n            this.diarios.fecha = register[id].fecha;\r\n            if (register[id].tipo == \"ajustado\") {\r\n                this.diarios.ajustado = true;\r\n            } else {\r\n                this.diarios.ajustado = false;\r\n            }\r\n            this.diarios.tipo = register[id].tipo;\r\n\r\n            $(\"#dg-transaccion\").modal(\"show\");\r\n        },\r\n        debeEditAjustado(id) {\r\n            let register = JSON.parse(JSON.stringify(this.ajustes));\r\n            this.update = true;\r\n            this.registerindex = id;\r\n            this.diarios.debe = [];\r\n            this.diarios.haber = [];\r\n            this.diarios.debe = register[id].debe;\r\n            this.diarios.haber = register[id].haber;\r\n            this.diarios.comentario = register[id].comentario;\r\n            this.diarios.fecha = register[id].fecha;\r\n            if (register[id].tipo == \"ajustado\") {\r\n                this.diarios.ajustado = true;\r\n            } else {\r\n                this.diarios.ajustado = false;\r\n            }\r\n            this.diarios.tipo = register[id].tipo;\r\n\r\n            $(\"#dg-transaccion\").modal(\"show\");\r\n        },\r\n\r\n        deleteRegistro(id) {\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar este registro??\",\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro se elimino\",\r\n                        \"success\"\r\n                    );\r\n                    this.registros.splice(id, 1);\r\n                    this.totalDebe();\r\n                    this.totalHaber();\r\n                    this.totalesFinales();\r\n                }\r\n            });\r\n        },\r\n\r\n        deleteAjuste(id) {\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar este registro??\",\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro se elimino\",\r\n                        \"success\"\r\n                    );\r\n                    this.ajustes.splice(id, 1);\r\n                    this.totalDebe();\r\n                    this.totalHaber();\r\n                    this.totalesFinales();\r\n                }\r\n            });\r\n        },\r\n        updaterRegister() {\r\n            let id = this.registerindex;\r\n            let total_debe = 0;\r\n            let total_haber = 0;\r\n\r\n            this.diarios.debe.forEach(function (debe, id) {\r\n                let saldo = debe.saldo;\r\n                total_debe += Number(saldo);\r\n            });\r\n            this.diarios.haber.forEach(function (haber, id) {\r\n                let saldo = haber.saldo;\r\n                total_haber += Number(saldo);\r\n            });\r\n\r\n            if (this.diarios.debe == 0) {\r\n                toastr.error(\r\n                    \"No tienes transaccion para guardar\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.diarios.comentario.trim() === \"\") {\r\n                toastr.error(\"Debes agregar un comentario\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.diarios.fecha.trim() === \"\") {\r\n                toastr.error(\"Debes agregar la fecha\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (total_haber != total_debe) {\r\n                toastr.error(\r\n                    \"El Total de Debe y Haber no coinciden\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                if (\r\n                    this.diarios.tipo == \"ajustado\" &&\r\n                    this.diarios.ajustado == true\r\n                ) {\r\n                    this.diarios.debe.forEach(function (sal, id) {\r\n                        sal.fecha = \"\";\r\n                    });\r\n                    this.diarios.debe[0].fecha = this.diarios.fecha;\r\n                    this.ajustes[id].debe = this.diarios.debe;\r\n                    this.ajustes[id].haber = this.diarios.haber;\r\n                    this.ajustes[id].comentario = this.diarios.comentario;\r\n                    this.ajustes[id].fecha = this.diarios.fecha;\r\n                } else if (\r\n                    this.diarios.tipo == \"ajustado\" &&\r\n                    this.diarios.ajustado !== true\r\n                ) {\r\n                    let register = JSON.parse(JSON.stringify(this.ajustes[id]));\r\n\r\n                    this.diarios.debe.forEach(function (sal, id) {\r\n                        sal.fecha = \"\";\r\n                    });\r\n                    this.diarios.debe[0].fecha = this.diarios.fecha;\r\n                    register.debe = this.diarios.debe;\r\n                    register.haber = this.diarios.haber;\r\n                    register.comentario = this.diarios.comentario;\r\n                    register.fecha = this.diarios.fecha;\r\n                    register.tipo = \"normal\";\r\n                    this.registros.push(register);\r\n                    this.ajustes.splice(id, 1);\r\n                } else if (\r\n                    this.diarios.tipo == \"normal\" &&\r\n                    this.diarios.ajustado == false\r\n                ) {\r\n                    this.diarios.debe.forEach(function (sal, id) {\r\n                        sal.fecha = \"\";\r\n                    });\r\n                    this.diarios.debe[0].fecha = this.diarios.fecha;\r\n                    this.registros[id].debe = this.diarios.debe;\r\n                    this.registros[id].haber = this.diarios.haber;\r\n                    this.registros[id].comentario = this.diarios.comentario;\r\n                    this.registros[id].fecha = this.diarios.fecha;\r\n                } else if (\r\n                    this.diarios.tipo == \"normal\" &&\r\n                    this.diarios.ajustado == true\r\n                ) {\r\n                    let register = JSON.parse(\r\n                        JSON.stringify(this.registros[id])\r\n                    );\r\n                    this.diarios.debe.forEach(function (sal, id) {\r\n                        sal.fecha = \"\";\r\n                        console.log(sal.fecha);\r\n                    });\r\n                    console.log(register);\r\n                    this.diarios.debe[0].fecha = this.diarios.fecha;\r\n                    register.debe = this.diarios.debe;\r\n                    register.haber = this.diarios.haber;\r\n                    register.comentario = this.diarios.comentario;\r\n                    register.fecha = this.diarios.fecha;\r\n                    register.tipo = \"ajustado\";\r\n                    this.ajustes.push(register);\r\n                    this.registros.splice(id, 1);\r\n                }\r\n                this.diarios.debe = [];\r\n                this.diarios.haber = [];\r\n                this.diarios.comentario = \"\";\r\n                this.diarios.fecha = \"\";\r\n                this.diarios.tipo = \"\";\r\n                this.diarios.ajustado = false;\r\n\r\n                this.totalDebe();\r\n                this.totalHaber();\r\n                this.totalesFinales();\r\n\r\n                $(\"#dg-transaccion\").modal(\"hide\");\r\n            }\r\n        },\r\n\r\n        updateHaber() {\r\n            let id = this.diario.haber.nom_cuenta;\r\n            let index = this.diario.haber.index;\r\n            let cuenta = this.cuentas.filter(x => x.id == id);\r\n            console.log(cuenta);\r\n            let valor = this.diario.haber.saldo;\r\n            if (cuenta[0].porcentual == 1) {\r\n                let calculo = this.valorPorcentual(cuenta[0].porcentaje, valor);\r\n                this.diarios.haber[index].nom_cuenta = cuenta[0].nombre;\r\n                this.diarios.haber[index].saldo = calculo;\r\n            } else {\r\n                this.diarios.haber[index].cuenta_id = id;\r\n                this.diarios.haber[index].nom_cuenta = cuenta[0].nombre;\r\n                this.diarios.haber[index].saldo = valor;\r\n            }\r\n            this.diario.haber.nom_cuenta = \"\";\r\n            this.diario.haber.saldo = \"\";\r\n            this.diario.haber.edit = false;\r\n        },\r\n        habediarioEdit(index) {\r\n            this.diario.debe.fecha = \"\";\r\n            this.diario.debe.nom_cuenta = \"\";\r\n            this.diario.debe.saldo = \"\";\r\n            this.diario.debe.edit = false;\r\n            this.diario.haber.index = index;\r\n            let id_cuenta = this.diarios.haber[index].cuenta_id;\r\n\r\n            let cuenta = this.cuentas.filter(x => x.id == id_cuenta);\r\n            console.log(cuenta);\r\n            if (cuenta[0].porcentual == 1) {\r\n                this.diario.haber.nom_cuenta = id_cuenta;\r\n                this.diario.haber.saldo = \"\";\r\n            } else {\r\n                this.diario.haber.nom_cuenta = id_cuenta;\r\n                this.diario.haber.saldo = this.diarios.haber[index].saldo;\r\n            }\r\n            this.diario.haber.edit = true;\r\n\r\n            $(\"#haber-diario-tab\").tab(\"show\");\r\n        },\r\n\r\n        totalesFinales: function () {\r\n            this.total.debe = 0;\r\n            this.total.haber = 0;\r\n            var regis = this.ajustes;\r\n            var total = 0;\r\n            var total1 = 0;\r\n            regis.forEach(function (obj, index) {\r\n                obj.debe.forEach(function (sal, id) {\r\n                    total += Number(sal.saldo);\r\n                });\r\n            });\r\n            // console.log(total);\r\n            this.total.debe = Number(this.pasan.debe + total).toFixed(2);\r\n\r\n            regis.forEach(function (obj, index) {\r\n                obj.haber.forEach(function (sal, id) {\r\n                    total1 += Number(sal.saldo);\r\n                });\r\n            });\r\n            this.total.haber = Number(this.pasan.haber + total1).toFixed(2);\r\n        },\r\n\r\n        debediairoEdit(index) {\r\n            this.diario.haber.nom_cuenta = \"\";\r\n            this.diario.haber.saldo = \"\";\r\n            this.diario.haber.edit = false;\r\n            this.diario.debe.index = index;\r\n            let id_cuenta = this.diarios.debe[index].cuenta_id;\r\n\r\n            if (this.diarios.debe[index].fecha !== \"\") {\r\n                this.diario.debe.fecha = this.diarios.debe[index].fecha;\r\n            } else {\r\n                this.diario.debe.fecha = \"\";\r\n            }\r\n            let cuenta = this.cuentas.filter(x => x.id == id_cuenta);\r\n            // console.log(cuenta)\r\n            if (cuenta[0].porcentual == 1) {\r\n                this.diario.debe.nom_cuenta = id_cuenta;\r\n                this.diario.debe.saldo = \"\";\r\n            } else {\r\n                this.diario.debe.nom_cuenta = id_cuenta;\r\n                this.diario.debe.saldo = this.diarios.debe[index].saldo;\r\n            }\r\n            this.diario.debe.edit = true;\r\n            $(\"#debe-diario-tab\").tab(\"show\");\r\n        },\r\n        cancelarEdicion(cuenta) {\r\n            if (cuenta == \"debe\") {\r\n                this.diario.debe.fecha = \"\";\r\n                this.diario.debe.nom_cuenta = \"\";\r\n                this.diario.debe.saldo = \"\";\r\n                this.diario.debe.edit = false;\r\n            } else {\r\n                this.diario.haber.nom_cuenta = \"\";\r\n                this.diario.haber.saldo = \"\";\r\n                this.diario.haber.edit = false;\r\n            }\r\n        },\r\n        updateDebe() {\r\n            let id = this.diario.debe.nom_cuenta;\r\n            let index = this.diario.debe.index;\r\n            let cuenta = this.cuentas.filter(x => x.id == id);\r\n            console.log(cuenta);\r\n            let valor = this.diario.debe.saldo;\r\n            if (this.diario.debe.fecha !== \"\") {\r\n                this.diarios.debe[index].fecha = this.diario.debe.fecha;\r\n            }\r\n            if (cuenta[0].porcentual == 1) {\r\n                let calculo = this.valorPorcentual(cuenta[0].porcentaje, valor);\r\n                this.diarios.debe[index].nom_cuenta = cuenta[0].nombre;\r\n                this.diarios.debe[index].saldo = calculo;\r\n            } else {\r\n                this.diarios.debe[index].nom_cuenta = cuenta[0].nombre;\r\n                this.diarios.debe[index].saldo = valor;\r\n            }\r\n            this.diarios.debe[index].cuenta_id = id;\r\n\r\n            if (this.diario.debe.fecha !== \"\") {\r\n                this.diario.debe.fecha = \"\";\r\n            }\r\n            this.diario.debe.nom_cuenta = \"\";\r\n            this.diario.debe.saldo = \"\";\r\n            this.diario.debe.edit = false;\r\n        },\r\n        debeDelete(index) {\r\n            this.edit.debe.splice(index, 1);\r\n        },\r\n        totalDebeBi: function () {\r\n            let balan = this.balanceInicial;\r\n            let total = 0;\r\n            balan.debe.forEach(function (obj, index) {\r\n                total += Number(obj.saldo);\r\n            });\r\n            // console.log(total);\r\n            this.balanceInicial.totaldebe = total;\r\n        },\r\n        totalHaberBi: function () {\r\n            let balan = this.balanceInicial;\r\n            let total = 0;\r\n            balan.haber.forEach(function (obj, index) {\r\n                total += Number(obj.saldo);\r\n            });\r\n            // console.log(total);\r\n            this.balanceInicial.totalhaber = total;\r\n            this.totalesFinales();\r\n        },\r\n        totalDebe: function () {\r\n            this.pasan.debe = 0;\r\n            let regis = this.registros;\r\n            let total = 0;\r\n            regis.forEach(function (obj, index) {\r\n                obj.debe.forEach(function (sal, id) {\r\n                    total += Number(sal.saldo);\r\n                });\r\n            });\r\n            // console.log(total);\r\n            this.pasan.debe = this.balanceInicial.totaldebe + total;\r\n        },\r\n        totalHaber: function () {\r\n            this.pasan.haber = 0;\r\n            let regis = this.registros;\r\n            let total = 0;\r\n\r\n            regis.forEach(function (obj, index) {\r\n                obj.haber.forEach(function (sal, id) {\r\n                    total += Number(sal.saldo);\r\n                });\r\n            });\r\n            // console.log(total);\r\n            this.pasan.haber = this.balanceInicial.totalhaber + total;\r\n        },\r\n        guardarDiario: function () {\r\n            const union = this.registros.concat(this.ajustes);\r\n            if (union.length == 0) {\r\n                toastr.error(\"No tienes registros para guardar\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                console.log(union);\r\n                let _this = this;\r\n                let url = \"/sistema/admin/taller/diario\";\r\n                axios\r\n                    .post(url, {\r\n                        id: _this.id_taller,\r\n                        registro: union,\r\n                        nombre: _this.nombre,\r\n                        total_debe: _this.total.debe,\r\n                        total_haber: _this.total.haber\r\n                    })\r\n                    .then(response => {\r\n                        if (response.data.success == false) {\r\n                            toastr.error(response.data.message, \"SmartLearn\", {\r\n                                timeOut: \"3000\"\r\n                            });\r\n                        } else if (response.data.success == \"act\") {\r\n                            toastr.success(\r\n                                \"Diario General Actualizado Correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            mayor_general.obtenerDiarioGeneral();\r\n                            librocaja.obtenerDiarioGeneral();\r\n                            librosbanco.obtenerDiarioGeneral();\r\n                            reten_iva.obtenerDiarioGeneral();\r\n                        } else {\r\n                            toastr.success(\r\n                                \"Diario General Creado Correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n\r\n                            _this.dato = response.data;\r\n\r\n                            mayor_general.obtenerDiarioGeneral();\r\n                            librocaja.obtenerDiarioGeneral();\r\n                            librosbanco.obtenerDiarioGeneral();\r\n                            reten_iva.obtenerDiarioGeneral();\r\n\r\n                            //\r\n                        }\r\n                    })\r\n                    .catch(function (error) { });\r\n            }\r\n        },\r\n        obtenerDiarioGeneral: function () {\r\n            var _this = this;\r\n            var url = \"/sistema/admin/taller/diariogeneral\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                    if (response.data.datos == true) {\r\n                        _this.registros = response.data.registros;\r\n                        _this.ajustes = response.data.ajustado;\r\n                        _this.nombre = response.data.nombre;\r\n                        if (response.data.tieneinicial == true) {\r\n                            let inicial = response.data.inicial;\r\n                            _this.registros.unshift(inicial);\r\n                        }\r\n\r\n                        _this.complete = true;\r\n                        this.totalDebe();\r\n                        this.totalHaber();\r\n                        this.totalesFinales();\r\n                        toastr.success(\r\n                            \"Diairo General cargado Correctamente\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        }\r\n    }\r\n});\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////MAYOR GENERAL//////// /////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\nlet mayor_general = new Vue({\r\n    el: \"#mayor_general\",\r\n    data: {\r\n        id_taller: taller,\r\n        nombre: \"\",\r\n        nombre_dgral: \"\",\r\n        fechabalance: \"\",\r\n        complete: false,\r\n        options: objeto,\r\n        cuentas: cuentas,\r\n        dgeneral: [],\r\n        nombre_kardex: \"\",\r\n        producto_kardex: \"\",\r\n        registros: [],\r\n        eliminar: {\r\n            index: \"\"\r\n        },\r\n        eliminar: {\r\n            nombre: \"\",\r\n            index: \"\"\r\n        },\r\n        ajustes: [],\r\n        registerindex: 0,\r\n        cuentaindex: 0,\r\n        mayores: {\r\n            registros: [],\r\n            cierres: [],\r\n            cuenta: \"\",\r\n            total_debe: \"\",\r\n            total_haber: \"\",\r\n            total_saldo: \"\"\r\n        },\r\n        mayor: {\r\n            seleccion: \"\",\r\n            registro: {\r\n                edit: false,\r\n                cierre: false,\r\n                index: \"\",\r\n                fecha: \"\",\r\n                detalle: \"\",\r\n                debe: \"\",\r\n                haber: \"\",\r\n                saldo: \"\"\r\n            },\r\n            cuenta: \"\",\r\n            tipo: \"\"\r\n        },\r\n        update: false,\r\n        registros_cierres: [],\r\n        nombre_cierre: \"\"\r\n    },\r\n    mounted: function () {\r\n        this.obtenerDiarioGeneral();\r\n        this.obtenerMayorGeneral();\r\n        this.obtenerAsientoCierre();\r\n    },\r\n    methods: {\r\n        calculadora() {\r\n            let propsData = {\r\n                title: \"Called from basic js\",\r\n                noteProp: [\"Note number 1\", \"Note number 2\"]\r\n            };\r\n            let component = \"example-component\";\r\n            funciones.VueSweetAlert2(component, propsData);\r\n        },\r\n        obtenerAsientoCierre: function () {\r\n            var _this = this;\r\n            var url = \"/sistema/admin/taller/asiento-cierre-obtener\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        _this.registros_cierres = response.data.registros;\r\n                        _this.nombre_cierre = response.data.nombre;\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        },\r\n\r\n        formatoFecha(fecha) {\r\n            if (fecha !== null) {\r\n                let date = fecha\r\n                    .split(\"-\")\r\n                    .reverse()\r\n                    .join(\"-\");\r\n                return date;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        onSelect() {\r\n            if (this.mayor.seleccion == null) {\r\n                this.update = false;\r\n\r\n                this.mayores.registros = [];\r\n                this.mayores.cierres = [];\r\n                this.mayores.cuenta = \"\";\r\n\r\n                this.mayor.registro.cierre = false;\r\n                this.mayor.registro.detalle = \"\";\r\n                this.mayor.registro.fecha = \"\";\r\n                this.mayor.registro.debe = \"\";\r\n                this.mayor.registro.haber = \"\";\r\n                this.mayor.registro.saldo = \"\";\r\n                return;\r\n            }\r\n            let id = this.mayor.seleccion.value;\r\n            let cuenta = this.registros.filter(x => x.cuenta_id == id);\r\n            console.log(id);\r\n            if (cuenta.length > 0) {\r\n                this.update = true;\r\n\r\n                this.mayores.registros = cuenta[0].registros;\r\n                this.mayores.cierres = cuenta[0].cierres;\r\n                this.mayor.cuenta = cuenta[0].cuenta_id;\r\n            } else {\r\n                this.update = false;\r\n                this.mayores.registros = [];\r\n                this.mayores.cierres = [];\r\n                this.mayor.cuenta = id;\r\n                this.mayor.registro.cierre = false;\r\n                this.mayor.registro.detalle = \"\";\r\n                this.mayor.registro.fecha = \"\";\r\n                this.mayor.registro.debe = \"\";\r\n                this.mayor.registro.haber = \"\";\r\n                this.mayor.registro.saldo = \"\";\r\n            }\r\n        },\r\n        abrirTransaccion() {\r\n            this.update = false;\r\n            this.mayores.registros = [];\r\n            this.mayores.cierres = [];\r\n            this.mayor.cuenta = \"\";\r\n            this.mayores.cuenta = \"\";\r\n            this.mayor.seleccion = \"\";\r\n            this.mayor.registro.cierre = false;\r\n            this.mayor.registro.detalle = \"\";\r\n            this.mayor.registro.fecha = \"\";\r\n            this.mayor.registro.debe = \"\";\r\n            this.mayor.registro.haber = \"\";\r\n            this.mayor.registro.saldo = \"\";\r\n\r\n            $(\"#mg-transaccion\").modal(\"show\");\r\n        },\r\n        numberFormat(numero) {\r\n            let number = numero;\r\n\r\n            let nuevo = new Intl.NumberFormat(\"de-DE\").format(numero);\r\n            return nuevo;\r\n        },\r\n        agregarCelda() {\r\n            if (this.mayor.registro.fecha == \"\") {\r\n                toastr.error(\"El campo fecha es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.mayor.registro.detalle == \"\") {\r\n                toastr.error(\"El campo detalle es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let saldo = Number(this.mayor.registro.saldo).toFixed(2);\r\n                let debe = this.decimales(this.mayor.registro.debe);\r\n                let haber = this.decimales(this.mayor.registro.haber);\r\n                if (this.mayor.registro.cierre == true) {\r\n                    let registro = {\r\n                        tipo: \"\",\r\n                        fecha: this.mayor.registro.fecha,\r\n                        detalle: this.mayor.registro.detalle,\r\n                        debe: debe,\r\n                        haber: haber,\r\n                        saldo: saldo\r\n                    };\r\n                    this.mayores.cierres.push(registro);\r\n                } else {\r\n                    let registro = {\r\n                        tipo: \"\",\r\n                        fecha: this.mayor.registro.fecha,\r\n                        detalle: this.mayor.registro.detalle,\r\n                        debe: debe,\r\n                        haber: haber,\r\n                        saldo: saldo\r\n                    };\r\n                    this.mayores.registros.push(registro);\r\n                }\r\n                toastr.success(\r\n                    \"Movimiento agregado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.mayor.registro.fecha = \"\";\r\n                this.mayor.registro.detalle = \"\";\r\n                this.mayor.registro.debe = \"\";\r\n                this.mayor.registro.haber = \"\";\r\n                this.mayor.registro.saldo = \"\";\r\n                this.mayor.registro.cierre = false;\r\n            }\r\n        },\r\n        deleteNormal(index) {\r\n            this.mayores.registros.splice(index, 1);\r\n        },\r\n        deleteCierre(index) {\r\n            this.mayores.cierres.splice(index, 1);\r\n        },\r\n        decimales(saldo) {\r\n            if (saldo !== null && saldo !== \"\" && saldo !== 0) {\r\n                let total = Number(saldo).toFixed(2);\r\n                return total;\r\n            } else {\r\n                return \"\";\r\n            }\r\n        },\r\n        guardarRegistro() {\r\n            if (this.mayores.registros.length == 0) {\r\n                toastr.error(\r\n                    \"No tienes transaccion para guardar\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.mayor.cuenta == \"\") {\r\n                toastr.error(\"Debes seleccionar una cuenta\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let tdebe = 0;\r\n                let thaber = 0;\r\n\r\n                this.mayores.registros.forEach(function (debe, id) {\r\n                    let saldo = debe.debe;\r\n                    tdebe += Number(saldo);\r\n                });\r\n                this.mayores.registros.forEach(function (haber, id) {\r\n                    let saldo = haber.haber;\r\n                    thaber += Number(saldo);\r\n                });\r\n\r\n                let id = this.mayor.cuenta;\r\n                let nombre = funciones.obtenerNombre(id);\r\n\r\n                if (this.mayores.cierres.length >= 1) {\r\n                    let registro = {\r\n                        cuenta_id: id,\r\n                        cuenta: nombre,\r\n                        registros: this.mayores.registros,\r\n                        cierres: this.mayores.cierres,\r\n                        total_debe: tdebe,\r\n                        total_haber: thaber,\r\n                        total_saldo: \"-0-\"\r\n                    };\r\n                    this.registros.push(registro); //añadimos el la variable persona al array\r\n                } else {\r\n                    let registro = {\r\n                        cuenta_id: id,\r\n                        cuenta: nombre,\r\n                        registros: this.mayores.registros,\r\n                        cierres: this.mayores.cierres,\r\n                        total_debe: tdebe,\r\n                        total_haber: thaber,\r\n                        total_saldo: \"\"\r\n                    };\r\n                    this.registros.push(registro); //añadimos el la variable persona al array\r\n                }\r\n\r\n                //Limpiamos los campos\r\n                toastr.success(\r\n                    \"Registro agregado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.mayores.registros = [];\r\n                this.mayores.cierres = [];\r\n                this.mayor.cuenta = \"\";\r\n                this.mayor.seleccion = \"\";\r\n                this.mayor.registro.cierre = false;\r\n            }\r\n        },\r\n        editarTransaccion(id) {\r\n            let register = JSON.parse(JSON.stringify(this.registros));\r\n            this.update = true;\r\n            this.registerindex = id;\r\n            this.mayores.registros = [];\r\n            this.mayores.cierres = [];\r\n            this.mayores.registros = register[id].registros;\r\n            this.mayores.cierres = register[id].cierres;\r\n            this.mayor.seleccion = {\r\n                text: register[id].cuenta,\r\n                value: register[id].cuenta_id\r\n            };\r\n            this.onSelect();\r\n            $(\"#mg-transaccion\").modal(\"show\");\r\n        },\r\n        updaterRegister() {\r\n            let id = this.mayor.cuenta;\r\n            let tdebe = 0;\r\n            let thaber = 0;\r\n            let cuenta = this.registros.filter(x => x.cuenta_id == id);\r\n            console.log(cuenta);\r\n            cuenta[0].registros.forEach(function (debe, id) {\r\n                let saldo = debe.debe;\r\n                tdebe += Number(saldo);\r\n            });\r\n            cuenta[0].registros.forEach(function (haber, id) {\r\n                let saldo = haber.haber;\r\n                thaber += Number(saldo);\r\n            });\r\n            cuenta[0].total_debe = tdebe;\r\n            cuenta[0].total_haber = thaber;\r\n            if (this.mayores.cierres.length >= 1) {\r\n                cuenta[0].total_saldo = \"-0-\";\r\n            } else {\r\n                cuenta[0].total_saldo = \"\";\r\n            }\r\n            this.mayores.registros = [];\r\n            this.mayores.cierres = [];\r\n            this.mayor.cuenta = \"\";\r\n            this.mayores.cuenta = \"\";\r\n            this.mayor.seleccion = \"\";\r\n            this.mayor.registro.cierre = false;\r\n            this.mayor.registro.detalle = \"\";\r\n            this.mayor.registro.fecha = \"\";\r\n            this.mayor.registro.debe = \"\";\r\n            this.mayor.registro.haber = \"\";\r\n            this.mayor.registro.saldo = \"\";\r\n            toastr.success(\r\n                \"Registro Actualizado Correctamente \",\r\n                \"SmartLearn\",\r\n                {\r\n                    timeOut: \"3000\"\r\n                }\r\n            );\r\n        },\r\n        obtenerDiarioGeneral: function () {\r\n            var _this = this;\r\n            var url = \"/sistema/admin/taller/diariogeneral\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        _this.dgeneral = response.data.registros;\r\n                        _this.ajustes = response.data.ajustado;\r\n                        _this.nombre_dgral = response.data.nombre;\r\n                        if (response.data.tieneinicial == true) {\r\n                            let inicial = response.data.inicial;\r\n                            _this.dgeneral.unshift(inicial);\r\n                        }\r\n                        toastr.success(\r\n                            \"Diairo General cargado Correctamente\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        },\r\n        warningEliminar(id) {\r\n            this.eliminar.index = id;\r\n            this.eliminar.nombre = this.registros[id].cuenta;\r\n            Swal.fire({\r\n                title:\r\n                    \"Seguro que deseas eliminar la cuenta \" +\r\n                    this.eliminar.nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + this.eliminar.nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.registros.splice(id, 1);\r\n                }\r\n            });\r\n        },\r\n        eliminarRegistro() {\r\n            let id = this.eliminar.index;\r\n            this.registros.splice(id, 1);\r\n            this.eliminar.index = \"\";\r\n            this.eliminar.nombre = \"\";\r\n            $(\"#eliminar-mg\").modal(\"hide\");\r\n        },\r\n        guardarMayor: function () {\r\n            if (this.registros.length == 0) {\r\n                toastr.error(\"No tienes registros para guardar\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let _this = this;\r\n                let url = \"/sistema/admin/taller/mayor\";\r\n                axios\r\n                    .post(url, {\r\n                        id: _this.id_taller,\r\n                        registro: _this.registros,\r\n                        nombre: _this.nombre\r\n                    })\r\n                    .then(response => {\r\n                        if (response.data.success == false) {\r\n                            toastr.error(response.data.message, \"SmartLearn\", {\r\n                                timeOut: \"3000\"\r\n                            });\r\n                        } else if (response.data.success == \"act\") {\r\n                            toastr.success(\r\n                                \"Mayor General Actualizado Correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n\r\n                            balance_comp.obtenerMayorGeneral();\r\n                            hoja_trabajo.obtenerMayorGeneral();\r\n                        } else {\r\n                            toastr.success(\r\n                                \"Mayor General Creado Correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            balance_comp.obtenerMayorGeneral();\r\n                            hoja_trabajo.obtenerMayorGeneral();\r\n                        }\r\n                    })\r\n                    .catch(function (error) { });\r\n            }\r\n        },\r\n        obtenerMayorGeneral: function () {\r\n            var _this = this;\r\n            var url = \"/sistema/admin/taller/mayorgeneral\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        _this.registros = response.data.registros;\r\n                        _this.nombre = response.data.nombre;\r\n                        console.log(response.data.registros);\r\n\r\n                        toastr.success(\r\n                            \"Mayor General cargado Correctamente\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        }\r\n    }\r\n});\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////BALANCE DE COMPROBACION /////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst balance_comp = new Vue({\r\n    el: \"#balance_comp\",\r\n    data: {\r\n        nombre: \"\",\r\n        fecha: \"\",\r\n        enunciados: ``,\r\n        id_taller: taller,\r\n        nombre_mayor: \"\",\r\n        options: objeto,\r\n        cuentas: cuentas,\r\n        balances: [], //array del balance de COMPROBACION\r\n        balance: {\r\n            //variables a utilizar para el balance de COMPROBACION\r\n            cuenta: \"\",\r\n            suma_debe: \"\",\r\n            suma_haber: \"\",\r\n            saldo_debe: \"\",\r\n            saldo_haber: \"\",\r\n            edit: false,\r\n            const_id: \"\"\r\n        },\r\n        mayorgeneral: [],\r\n        suman: {\r\n            //suma total del balance COMPROBACION\r\n            sum_debe: 0,\r\n            sum_haber: 0,\r\n            sal_debe: 0,\r\n            sal_haber: 0\r\n        },\r\n        update: false,\r\n        registro_id: 0\r\n    },\r\n    mounted: function () {\r\n        this.obtenerBalanceCom();\r\n        this.obtenerMayorGeneral();\r\n    },\r\n    methods: {\r\n        calculadora() {\r\n            let propsData = {\r\n                title: \"Called from basic js\",\r\n                noteProp: [\"Note number 1\", \"Note number 2\"]\r\n            };\r\n            let component = \"example-component\";\r\n            funciones.VueSweetAlert2(component, propsData);\r\n        },\r\n        verificarCuenta(id) {\r\n            if (Number(this.balance.const_id) === id) {\r\n                return false;\r\n            }\r\n            let ac = this.balances.filter(x => x.cuenta_id == id);\r\n\r\n            if (ac.length > 0) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n        decimales(saldo) {\r\n            let vacio = \"\";\r\n            if (saldo !== null && saldo !== \"\" && saldo !== 0) {\r\n                let total = Number(saldo).toFixed(2);\r\n                return total;\r\n            } else {\r\n                return vacio;\r\n            }\r\n        },\r\n        formatoFecha(fecha) {\r\n            if (fecha !== null) {\r\n                let date = fecha\r\n                    .split(\"-\")\r\n                    .reverse()\r\n                    .join(\"-\");\r\n                return date;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        obtenerMayorGeneral: function () {\r\n            var _this = this;\r\n            var url = \"/sistema/admin/taller/mayorgeneral\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        _this.mayorgeneral = response.data.registros;\r\n                        _this.nombre_mayor = response.data.nombre;\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        },\r\n        abrirTransaccion() {\r\n            this.update = false;\r\n            this.balance.cuenta = \"\";\r\n            this.balance.edit = false;\r\n            this.balance.suma_debe = \"\";\r\n            this.balance.suma_haber = \"\";\r\n            this.balance.saldo_debe = \"\";\r\n            this.balance.saldo_haber = \"\";\r\n            $(\"#bc-transaccion\").modal(\"show\");\r\n        },\r\n        sumas() {\r\n            let debe = Number(this.balance.suma_debe);\r\n            let haber = Number(this.balance.suma_haber);\r\n            if (debe > haber) {\r\n                this.balance.saldo_debe = Number(debe - haber).toFixed(2);\r\n                this.balance.saldo_haber = \"\";\r\n            } else {\r\n                this.balance.saldo_haber = Number(haber - debe).toFixed(2);\r\n                this.balance.saldo_debe = \"\";\r\n            }\r\n        },\r\n        mover() {\r\n            this.update = false;\r\n            this.balance.cuenta = \"\";\r\n            this.balance.suma_debe = \"\";\r\n            this.balance.suma_haber = \"\";\r\n        },\r\n        log: function (evt) {\r\n            window.console.log(evt);\r\n        },\r\n        totales: function () {\r\n            this.suman.sum_debe = 0;\r\n            this.suman.sum_haber = 0;\r\n            this.suman.sal_debe = 0;\r\n            this.suman.sal_haber = 0;\r\n            let regis = this.balances;\r\n            let total1 = 0;\r\n            let total2 = 0;\r\n            let total3 = 0;\r\n            let total4 = 0;\r\n\r\n            regis.forEach(function (obj, index) {\r\n                total1 += Number(obj.suma_debe);\r\n            });\r\n\r\n            regis.forEach(function (obj, index) {\r\n                total2 += Number(obj.suma_haber);\r\n            });\r\n            regis.forEach(function (obj, index) {\r\n                total3 += Number(obj.saldo_debe);\r\n            });\r\n            regis.forEach(function (obj, index) {\r\n                total4 += Number(obj.saldo_haber);\r\n            });\r\n            this.suman.sum_debe = total1.toFixed(2);\r\n            this.suman.sum_haber = total2.toFixed(2);\r\n            this.suman.sal_debe = total3.toFixed(2);\r\n            this.suman.sal_haber = total4.toFixed(2);\r\n        },\r\n\r\n        agregarRegistro() {\r\n            if (this.balance.cuenta == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.balance.cuenta;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    // this.sumas()\r\n                    var balance = {\r\n                        cuenta_id: id,\r\n                        cuenta: nombre,\r\n                        suma_debe: this.balance.suma_debe,\r\n                        suma_haber: this.balance.suma_haber,\r\n                        saldo_debe: this.balance.saldo_debe,\r\n                        saldo_haber: this.balance.saldo_haber\r\n                    };\r\n                    this.balances.push(balance);\r\n                    toastr.success(\r\n                        \"Registro agregado correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n\r\n                    this.balance.cuenta = \"\";\r\n                    this.balance.suma_debe = \"\";\r\n                    this.balance.saldo_debe = \"\";\r\n                    this.balance.suma_haber = \"\";\r\n                    this.balance.saldo_haber = \"\";\r\n                    this.totales();\r\n                }\r\n            }\r\n        }, //fin metodo agregar registro\r\n        deleteBalance(index) {\r\n            Swal.fire({\r\n                title:\r\n                    \"Seguro que deseas eliminar la cuenta \" +\r\n                    this.balances[index].cuenta,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" +\r\n                        this.balances[index].cuenta,\r\n                        \"success\"\r\n                    );\r\n                    this.balances.splice(index, 1);\r\n                    this.cancelarEdicion();\r\n                    this.totales();\r\n                }\r\n            });\r\n        }, //fin metodo delete cuenta\r\n\r\n        editBalance(index) {\r\n            this.balance.edit = true;\r\n            this.registro_id = index;\r\n            this.balance.const_id = this.balances[index].cuenta_id;\r\n            this.balance.cuenta = this.balances[index].cuenta_id;\r\n            this.balance.suma_debe = this.balances[index].suma_debe;\r\n            this.balance.suma_haber = this.balances[index].suma_haber;\r\n            this.balance.saldo_debe = this.balances[index].saldo_debe;\r\n            this.balance.saldo_haber = this.balances[index].saldo_haber;\r\n        },\r\n        editBalanceFuera(index) {\r\n            this.balance.edit = true;\r\n            this.registro_id = index;\r\n            this.balance.const_id = this.balances[index].cuenta_id;\r\n            this.balance.cuenta = this.balances[index].cuenta_id;\r\n            this.balance.suma_debe = this.balances[index].suma_debe;\r\n            this.balance.suma_haber = this.balances[index].suma_haber;\r\n            this.balance.saldo_debe = this.balances[index].saldo_debe;\r\n            this.balance.saldo_haber = this.balances[index].saldo_haber;\r\n            $(\"#bc-transaccion\").modal(\"show\");\r\n        },\r\n        cancelarEdicion() {\r\n            this.balance.cuenta = \"\";\r\n            this.balance.suma_debe = \"\";\r\n            this.balance.suma_haber = \"\";\r\n            this.balance.saldo_haber = \"\";\r\n            this.balance.saldo_debe = \"\";\r\n            this.balance.edit = false;\r\n        },\r\n        actualizarBalance() {\r\n            if (this.balance.cuenta == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                // this.sumas();\r\n                let index = this.registro_id;\r\n                let id = this.balance.cuenta;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    this.balances[index].cuenta = nombre;\r\n                    this.balances[index].cuenta_id = id;\r\n                    this.balances[index].suma_debe = this.balance.suma_debe;\r\n                    this.balances[index].suma_haber = this.balance.suma_haber;\r\n                    this.balances[index].saldo_debe = this.balance.saldo_debe;\r\n                    this.balances[index].saldo_haber = this.balance.saldo_haber;\r\n\r\n                    this.balance.cuenta = \"\";\r\n                    this.balance.suma_debe = \"\";\r\n                    this.balance.suma_haber = \"\";\r\n                    this.balance.saldo_debe = \"\";\r\n                    this.balance.saldo_haber = \"\";\r\n                    this.balance.edit = false;\r\n                    this.totales();\r\n                }\r\n            }\r\n        },\r\n        guardarBalance: function () {\r\n            if (this.balances.length == 0) {\r\n                toastr.error(\r\n                    \"Debe haber al menos un registro en el Balance\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.fecha == \"\" || this.nombre == \"\") {\r\n                toastr.error(\"Fecha y Nombre son obligaorios\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let _this = this;\r\n                let url = \"/sistema/admin/taller/balance-comprobacion\";\r\n                axios\r\n                    .post(url, {\r\n                        id: _this.id_taller,\r\n                        nombre: _this.nombre,\r\n                        fecha: _this.fecha,\r\n                        balances: _this.balances,\r\n                        sum_debe: _this.suman.sum_debe,\r\n                        sum_haber: _this.suman.sum_haber,\r\n                        sal_debe: _this.suman.sal_debe,\r\n                        sal_haber: _this.suman.sal_haber\r\n                    })\r\n                    .then(response => {\r\n                        if (response.data.estado == \"guardado\") {\r\n                            toastr.success(\r\n                                \"Balance creado correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            hoja_trabajo.obtenerBalanceCom();\r\n                        } else if (response.data.estado == \"actualizado\") {\r\n                            toastr.warning(\r\n                                \"Balance actualizado correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n\r\n                            console.log(this.balances);\r\n                            hoja_trabajo.obtenerBalanceCom();\r\n                        }\r\n                    })\r\n                    .catch(function (error) { });\r\n            }\r\n        },\r\n        obtenerBalanceCom: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/balance-obtener-comprobacion\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        toastr.info(\r\n                            \"Balance de Comprobacion cargado correctamente\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                        this.balances = response.data.bcomprobacion;\r\n                        this.nombre = response.data.nombre;\r\n                        this.fecha = response.data.fecha;\r\n                        this.totales();\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        }\r\n    }\r\n});\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////HOJA DE TRABAJO ////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nlet hoja_trabajo = new Vue({\r\n    el: \"#hoja_trabajo\",\r\n    data: {\r\n        id_taller: taller,\r\n        nombre: \"\",\r\n        options: objeto,\r\n        cuentas: cuentas,\r\n        balances: [],\r\n        nombre_mayor: \"\",\r\n        mayorgeneral: [],\r\n        nombre_balance: \"\",\r\n        eliminar: {\r\n            index: \"\",\r\n            nombre: \"\"\r\n        },\r\n        fecha_balance: \"\",\r\n        registros: [],\r\n        registro_id: \"\",\r\n        registro: {\r\n            edit: false,\r\n            const_id: \"\",\r\n            cuenta_id: \"\",\r\n            balance_comp: {\r\n                debe: \"\",\r\n                haber: \"\"\r\n            },\r\n            ajustes: {\r\n                debe: \"\",\r\n                haber: \"\"\r\n            },\r\n            balance_ajustado: {\r\n                debe: \"\",\r\n                haber: \"\"\r\n            },\r\n            estado_resultado: {\r\n                debe: \"\",\r\n                haber: \"\"\r\n            },\r\n            balance_general: {\r\n                debe: \"\",\r\n                haber: \"\"\r\n            }\r\n        },\r\n        suman: {\r\n            balance_comp: {\r\n                total_debe: 0,\r\n                total_haber: 0\r\n            },\r\n            ajustes: {\r\n                total_debe: 0,\r\n                total_haber: 0\r\n            },\r\n            balance_ajustado: {\r\n                total_debe: 0,\r\n                total_haber: 0\r\n            },\r\n            estado_resultado: {\r\n                total_debe: 0,\r\n                total_haber: 0\r\n            },\r\n            balance_general: {\r\n                total_debe: 0,\r\n                total_haber: 0\r\n            }\r\n        },\r\n        update: false\r\n    },\r\n    mounted: function () {\r\n        this.obtenerBalanceCom();\r\n        this.obtenerMayorGeneral();\r\n        this.obtenerHojita();\r\n    },\r\n    methods: {\r\n        calculadora() {\r\n            let propsData = {\r\n                title: \"Called from basic js\",\r\n                noteProp: [\"Note number 1\", \"Note number 2\"]\r\n            };\r\n            let component = \"example-component\";\r\n            funciones.VueSweetAlert2(component, propsData);\r\n        },\r\n        sumasTotales() {\r\n            let registros = this.registros;\r\n            let bc_debe = 0;\r\n            let bc_haber = 0;\r\n            let ajuste_debe = 0;\r\n            let ajuste_haber = 0;\r\n            let ba_debe = 0;\r\n            let ba_haber = 0;\r\n            let er_debe = 0;\r\n            let er_haber = 0;\r\n            let bg_debe = 0;\r\n            let bg_haber = 0;\r\n\r\n            //INGRESO CANTIDAD\r\n            registros.forEach(function (registro, i) {\r\n                let temp = registro.bc_debe;\r\n                if (temp != null && temp !== \"\") {\r\n                    bc_debe += Number(temp);\r\n                }\r\n            });\r\n            this.suman.balance_comp.total_debe = bc_debe.toFixed(2);\r\n\r\n            registros.forEach(function (registro, i) {\r\n                let temp = registro.bc_haber;\r\n                if (temp != null && temp !== \"\") {\r\n                    bc_haber += Number(temp);\r\n                }\r\n            });\r\n            this.suman.balance_comp.total_haber = bc_haber.toFixed(2);\r\n\r\n            registros.forEach(function (registro, i) {\r\n                let temp = registro.ajuste_debe;\r\n                if (temp != null && temp !== \"\") {\r\n                    ajuste_debe += Number(temp);\r\n                }\r\n            });\r\n            this.suman.ajustes.total_debe = ajuste_debe.toFixed(2);\r\n\r\n            registros.forEach(function (registro, i) {\r\n                let temp = registro.ajuste_haber;\r\n                if (temp != null && temp !== \"\") {\r\n                    ajuste_haber += Number(temp);\r\n                }\r\n            });\r\n            this.suman.ajustes.total_haber = ajuste_haber.toFixed(2);\r\n\r\n            registros.forEach(function (registro, i) {\r\n                let temp = registro.ba_debe;\r\n                if (temp != null && temp !== \"\") {\r\n                    ba_debe += Number(temp);\r\n                }\r\n            });\r\n            this.suman.balance_ajustado.total_debe = ba_debe.toFixed(2);\r\n\r\n            registros.forEach(function (registro, i) {\r\n                let temp = registro.ba_haber;\r\n                if (temp != null && temp !== \"\") {\r\n                    ba_haber += Number(temp);\r\n                }\r\n            });\r\n            this.suman.balance_ajustado.total_haber = ba_haber.toFixed(2);\r\n\r\n            registros.forEach(function (registro, i) {\r\n                let temp = registro.er_debe;\r\n                if (temp != null && temp !== \"\") {\r\n                    er_debe += Number(temp);\r\n                }\r\n            });\r\n            this.suman.estado_resultado.total_debe = er_debe.toFixed(2);\r\n\r\n            registros.forEach(function (registro, i) {\r\n                let temp = registro.er_haber;\r\n                if (temp != null && temp !== \"\") {\r\n                    er_haber += Number(temp);\r\n                }\r\n            });\r\n            this.suman.estado_resultado.total_haber = er_haber.toFixed(2);\r\n\r\n            registros.forEach(function (registro, i) {\r\n                let temp = registro.bg_debe;\r\n                if (temp != null && temp !== \"\") {\r\n                    bg_debe += Number(temp);\r\n                }\r\n            });\r\n            this.suman.balance_general.total_debe = bg_debe.toFixed(2);\r\n\r\n            registros.forEach(function (registro, i) {\r\n                let temp = registro.bg_haber;\r\n                if (temp != null && temp !== \"\") {\r\n                    bg_haber += Number(temp);\r\n                }\r\n            });\r\n            this.suman.balance_general.total_haber = bg_haber.toFixed(2);\r\n        },\r\n        verificarCuenta(id) {\r\n            if (Number(this.registro.const_id) === id) {\r\n                return false;\r\n            }\r\n            let ac = this.registros.filter(x => x.cuenta_id == id);\r\n\r\n            if (ac.length > 0) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n        decimales(saldo) {\r\n            if (saldo !== null && saldo !== \"\" && saldo !== 0) {\r\n                let total = Number(saldo).toFixed(2);\r\n                return total;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        formatoFecha(fecha) {\r\n            if (fecha !== null) {\r\n                let date = fecha\r\n                    .split(\"-\")\r\n                    .reverse()\r\n                    .join(\"-\");\r\n                return date;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        abrirTransaccion() {\r\n            this.update = false;\r\n\r\n            $(\"#ht-transaccion\").modal(\"show\");\r\n        },\r\n        agregarRegistro() {\r\n            if (this.registro.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.registro.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n\r\n                    let balance = {\r\n                        cuenta_id: id,\r\n                        cuenta: nombre,\r\n                        bc_debe: this.registro.balance_comp.debe,\r\n                        bc_haber: this.registro.balance_comp.haber,\r\n                        ajuste_debe: this.registro.ajustes.debe,\r\n                        ajuste_haber: this.registro.ajustes.haber,\r\n                        ba_debe: this.registro.balance_ajustado.debe,\r\n                        ba_haber: this.registro.balance_ajustado.haber,\r\n                        er_debe: this.registro.estado_resultado.debe,\r\n                        er_haber: this.registro.estado_resultado.haber,\r\n                        bg_debe: this.registro.balance_general.debe,\r\n                        bg_haber: this.registro.balance_general.haber\r\n                    };\r\n                    this.registros.push(balance);\r\n                    toastr.success(\r\n                        \"Registro agregado correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.registro.cuenta_id = \"\";\r\n                    this.registro.balance_comp.debe = \"\";\r\n                    this.registro.balance_comp.haber = \"\";\r\n                    this.registro.ajustes.debe = \"\";\r\n                    this.registro.ajustes.haber = \"\";\r\n                    this.registro.balance_ajustado.debe = \"\";\r\n                    this.registro.balance_ajustado.haber = \"\";\r\n                    this.registro.estado_resultado.debe = \"\";\r\n                    this.registro.estado_resultado.haber = \"\";\r\n                    this.registro.balance_general.debe = \"\";\r\n                    this.registro.balance_general.haber = \"\";\r\n                    this.sumasTotales();\r\n                }\r\n            }\r\n        },\r\n\r\n        editBalance(index) {\r\n            this.registro.edit = true;\r\n            this.registro_id = index;\r\n            this.registro.const_id = this.registros[index].cuenta_id;\r\n            this.registro.cuenta_id = this.registros[index].cuenta_id;\r\n            this.registro.balance_comp.debe = this.registros[index].bc_debe;\r\n            this.registro.balance_comp.haber = this.registros[index].bc_haber;\r\n            this.registro.ajustes.debe = this.registros[index].ajuste_debe;\r\n            this.registro.ajustes.haber = this.registros[index].ajuste_haber;\r\n            this.registro.balance_ajustado.debe = this.registros[index].ba_debe;\r\n            this.registro.balance_ajustado.haber = this.registros[\r\n                index\r\n            ].ba_haber;\r\n            this.registro.estado_resultado.debe = this.registros[index].er_debe;\r\n            this.registro.estado_resultado.haber = this.registros[\r\n                index\r\n            ].er_haber;\r\n            this.registro.balance_general.debe = this.registros[index].bg_debe;\r\n            this.registro.balance_general.haber = this.registros[\r\n                index\r\n            ].bg_haber;\r\n        },\r\n        editBalanceFuera(index) {\r\n            this.registro.edit = true;\r\n            this.registro_id = index;\r\n            this.registro.const_id = this.registros[index].cuenta_id;\r\n            this.registro.cuenta_id = this.registros[index].cuenta_id;\r\n            this.registro.balance_comp.debe = this.registros[index].bc_debe;\r\n            this.registro.balance_comp.haber = this.registros[index].bc_haber;\r\n            this.registro.ajustes.debe = this.registros[index].ajuste_debe;\r\n            this.registro.ajustes.haber = this.registros[index].ajuste_haber;\r\n            this.registro.balance_ajustado.debe = this.registros[index].ba_debe;\r\n            this.registro.balance_ajustado.haber = this.registros[\r\n                index\r\n            ].ba_haber;\r\n            this.registro.estado_resultado.debe = this.registros[index].er_debe;\r\n            this.registro.estado_resultado.haber = this.registros[\r\n                index\r\n            ].er_haber;\r\n            this.registro.balance_general.debe = this.registros[index].bg_debe;\r\n            this.registro.balance_general.haber = this.registros[\r\n                index\r\n            ].bg_haber;\r\n            $(\"#ht-transaccion\").modal(\"show\");\r\n        },\r\n        cancelarEdicion() {\r\n            this.registro.const_id = \"\";\r\n            this.registro.cuenta_id = \"\";\r\n            this.registro.balance_comp.debe = \"\";\r\n            this.registro.balance_comp.haber = \"\";\r\n            this.registro.ajustes.debe = \"\";\r\n            this.registro.ajustes.haber = \"\";\r\n            this.registro.balance_ajustado.debe = \"\";\r\n            this.registro.balance_ajustado.haber = \"\";\r\n            this.registro.estado_resultado.debe = \"\";\r\n            this.registro.estado_resultado.haber = \"\";\r\n            this.registro.balance_general.debe = \"\";\r\n            this.registro.balance_general.haber = \"\";\r\n            this.registro.edit = false;\r\n        },\r\n        actualizarBalance() {\r\n            if (this.registro.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let index = this.registro_id;\r\n                let id = this.registro.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    this.registros[index].cuenta = nombre;\r\n                    this.registros[index].cuenta_id = id;\r\n                    this.registros[\r\n                        index\r\n                    ].bc_debe = this.registro.balance_comp.debe;\r\n                    this.registros[\r\n                        index\r\n                    ].bc_haber = this.registro.balance_comp.haber;\r\n                    this.registros[\r\n                        index\r\n                    ].ajuste_debe = this.registro.ajustes.debe;\r\n                    this.registros[\r\n                        index\r\n                    ].ajuste_haber = this.registro.ajustes.haber;\r\n                    this.registros[\r\n                        index\r\n                    ].ba_debe = this.registro.balance_ajustado.debe;\r\n                    this.registros[\r\n                        index\r\n                    ].ba_haber = this.registro.balance_ajustado.haber;\r\n                    this.registros[\r\n                        index\r\n                    ].er_debe = this.registro.estado_resultado.debe;\r\n                    this.registros[\r\n                        index\r\n                    ].er_haber = this.registro.estado_resultado.haber;\r\n                    this.registros[\r\n                        index\r\n                    ].bg_debe = this.registro.balance_general.debe;\r\n                    this.registros[\r\n                        index\r\n                    ].bg_haber = this.registro.balance_general.haber;\r\n                    this.cancelarEdicion();\r\n                    this.sumasTotales();\r\n\r\n                    toastr.error(\r\n                        \"Registro actualizado correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    // this.totales();\r\n                }\r\n            }\r\n        },\r\n        eliminarRegistro() {\r\n            let id = this.eliminar.index;\r\n            this.registros.splice(id, 1);\r\n            this.eliminar.index = \"\";\r\n            this.eliminar.nombre = \"\";\r\n            $(\"#eliminar-ht\").modal(\"hide\");\r\n        },\r\n        deleteBalance(index) {\r\n            this.registros.splice(index, 1);\r\n            this.sumasTotales();\r\n        },\r\n        warningEliminar(id) {\r\n            this.eliminar.index = id;\r\n            this.eliminar.nombre = this.registros[id].cuenta;\r\n            Swal.fire({\r\n                title:\r\n                    \"Seguro que deseas eliminar la cuenta \" +\r\n                    this.eliminar.nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + this.eliminar.nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.registros.splice(id, 1);\r\n                    this.cancelarEdicion();\r\n                    this.sumasTotales();\r\n                }\r\n            });\r\n        },\r\n        obtenerBalanceCom: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/balance-obtener-comprobacion\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        this.balances = response.data.bcomprobacion;\r\n                        this.nombre_balance = response.data.nombre;\r\n                        this.fecha_balance = response.data.fecha;\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        },\r\n        obtenerMayorGeneral: function () {\r\n            var _this = this;\r\n            var url = \"/sistema/admin/taller/mayorgeneral\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        _this.mayorgeneral = response.data.registros;\r\n                        _this.nombre_mayor = response.data.nombre;\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        },\r\n        guardarHoja: function () {\r\n            if (this.registros.length == 0) {\r\n                toastr.error(\r\n                    \"Debe haber al menos un registro en la Hoja\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.nombre == \"\") {\r\n                toastr.error(\"Nombre es obligaorios\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let _this = this;\r\n                let url = \"/sistema/admin/taller/hoja-trabajo\";\r\n                axios\r\n                    .post(url, {\r\n                        id: _this.id_taller,\r\n                        nombre: _this.nombre,\r\n                        registros: _this.registros,\r\n                        bc_total_debe: _this.suman.balance_comp.total_debe,\r\n                        bc_total_haber: _this.suman.balance_comp.total_haber,\r\n                        ajuste_total_debe: _this.suman.ajustes.total_debe,\r\n                        ajuste_total_haber: _this.suman.ajustes.total_haber,\r\n                        ba_total_debe: _this.suman.balance_ajustado.total_debe,\r\n                        ba_total_haber:\r\n                            _this.suman.balance_ajustado.total_haber,\r\n                        er_total_debe: _this.suman.estado_resultado.total_debe,\r\n                        er_total_haber:\r\n                            _this.suman.estado_resultado.total_haber,\r\n                        bg_total_debe: _this.suman.balance_general.total_debe,\r\n                        bg_total_haber: _this.suman.balance_general.total_haber\r\n                    })\r\n                    .then(response => {\r\n                        if (response.data.estado == \"guardado\") {\r\n                            toastr.success(\r\n                                \"Hoja de Trabajo Creada Correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            balance_ajustado.obtenerHojita();\r\n                            estado_resultado.obtenerHojita();\r\n                            balance_general.obtenerHojita();\r\n                            asientos_cierre.obtenerHojita();\r\n                        } else if (response.data.estado == \"actualizado\") {\r\n                            toastr.warning(\r\n                                \"Hoja de Trabajo Actualizada correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            balance_ajustado.obtenerHojita();\r\n                            estado_resultado.obtenerHojita();\r\n                            balance_general.obtenerHojita();\r\n                            asientos_cierre.obtenerHojita();\r\n                        }\r\n                    })\r\n                    .catch(function (error) { });\r\n            }\r\n        },\r\n        obtenerHojita: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/hoja-obtener-trabajo\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        this.registros = response.data.hojatrabajo;\r\n                        this.nombre = response.data.nombre;\r\n                        this.sumasTotales();\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        }\r\n    }\r\n});\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////BALANCE DE COMPROBACION AJUSTADO /////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst balance_ajustado = new Vue({\r\n    el: \"#balance_ajustado\",\r\n    data: {\r\n        id_taller: taller,\r\n        hojatrabajo: [],\r\n        options: objeto,\r\n        cuentas: cuentas,\r\n        nombre_hoja: \"\",\r\n        nombre: \"\",\r\n        fecha: \"\",\r\n        balances_ajustados: [], //array del balance de COMPROBACION\r\n        balance: {\r\n            //variables a utilizar para el balance de COMPROBACION\r\n            cuenta_id: \"\",\r\n            debe: \"\",\r\n            haber: \"\",\r\n            const_id: \"\",\r\n            edit: false\r\n        },\r\n        suman: {\r\n            //suma total del balance COMPROBACION\r\n            debe: 0,\r\n            haber: 0\r\n        },\r\n        update: false,\r\n        registro_id: 0\r\n    },\r\n    mounted: function () {\r\n        this.obtenerBalanceAjus();\r\n        this.obtenerHojita();\r\n    },\r\n    methods: {\r\n        calculadora() {\r\n            let propsData = {\r\n                title: \"Called from basic js\",\r\n                noteProp: [\"Note number 1\", \"Note number 2\"]\r\n            };\r\n            let component = \"example-component\";\r\n            funciones.VueSweetAlert2(component, propsData);\r\n        },\r\n        obtenerHojita: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/hoja-obtener-trabajo\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        this.hojatrabajo = response.data.hojatrabajo;\r\n                        this.nombre_hoja = response.data.nombre;\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        },\r\n        verificarCuenta(id) {\r\n            if (Number(this.balance.const_id) === id) {\r\n                return false;\r\n            }\r\n            let ac = this.balances_ajustados.filter(x => x.cuenta_id == id);\r\n\r\n            if (ac.length > 0) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n        decimales(saldo) {\r\n            if (saldo !== null && saldo !== \"\" && saldo !== 0) {\r\n                let total = Number(saldo).toFixed(2);\r\n                return total;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        formatoFecha(fecha) {\r\n            if (fecha !== null) {\r\n                let date = fecha\r\n                    .split(\"-\")\r\n                    .reverse()\r\n                    .join(\"-\");\r\n                return date;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        totales: function () {\r\n            this.suman.debe = 0;\r\n            this.suman.haber = 0;\r\n            let regis = this.balances_ajustados;\r\n            let total1 = 0;\r\n            let total2 = 0;\r\n\r\n            regis.forEach(function (obj, index) {\r\n                total1 += Number(obj.debe);\r\n            });\r\n\r\n            regis.forEach(function (obj, index) {\r\n                total2 += Number(obj.haber);\r\n            });\r\n            this.suman.debe = total1.toFixed(2);\r\n            this.suman.haber = total2.toFixed(2);\r\n        },\r\n        abrirTransaccion() {\r\n            this.update = false;\r\n\r\n            $(\"#ba-transaccion\").modal(\"show\");\r\n        },\r\n        agregarRegistro() {\r\n            if (this.balance.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.balance.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    var balance = {\r\n                        cuenta_id: this.balance.cuenta_id,\r\n                        cuenta: nombre,\r\n                        debe: this.balance.debe,\r\n                        haber: this.balance.haber\r\n                    };\r\n                    this.balances_ajustados.push(balance);\r\n                    toastr.success(\r\n                        \"Registro agregado correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n\r\n                    this.balance.cuenta_id = \"\";\r\n                    this.balance.debe = \"\";\r\n                    this.balance.haber = \"\";\r\n                    this.totales();\r\n                }\r\n            }\r\n        }, //fin metodo agregar registro\r\n\r\n        deleteBalance(index) {\r\n            this.balances_ajustados.splice(index, 1);\r\n            this.totales();\r\n        }, //fin metodo delete cuenta\r\n\r\n        editBalance(index) {\r\n            this.balance.edit = true;\r\n            this.registro_id = index;\r\n            this.balance.const_id = this.balances_ajustados[index].cuenta_id;\r\n            this.balance.cuenta_id = this.balances_ajustados[index].cuenta_id;\r\n            this.balance.debe = this.balances_ajustados[index].debe;\r\n            this.balance.haber = this.balances_ajustados[index].haber;\r\n        },\r\n\r\n        editBalanceFuera(index) {\r\n            this.balance.edit = true;\r\n            this.registro_id = index;\r\n            this.balance.const_id = this.balances_ajustados[index].cuenta_id;\r\n            this.balance.cuenta_id = this.balances_ajustados[index].cuenta_id;\r\n            this.balance.debe = this.balances_ajustados[index].debe;\r\n            this.balance.haber = this.balances_ajustados[index].haber;\r\n            $(\"#ba-transaccion\").modal(\"show\");\r\n        },\r\n\r\n        cancelarEdicion() {\r\n            this.balance.cuenta_id = \"\";\r\n            this.balance.debe = \"\";\r\n            this.balance.haber = \"\";\r\n            this.balance.edit = false;\r\n        },\r\n        actualizarBalance() {\r\n            if (this.balance.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.balance.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    let index = this.registro_id;\r\n                    this.balances_ajustados[\r\n                        index\r\n                    ].cuenta_id = this.balance.cuenta_id;\r\n                    this.balances_ajustados[index].cuenta = nombre;\r\n                    this.balances_ajustados[index].debe = this.balance.debe;\r\n                    this.balances_ajustados[index].haber = this.balance.haber;\r\n                    this.balance.cuenta_id = \"\";\r\n                    this.balance.debe = \"\";\r\n                    this.balance.haber = \"\";\r\n                    this.balance.edit = false;\r\n                    this.registro_id = \"\";\r\n                    this.totales();\r\n                }\r\n            }\r\n        },\r\n        warningEliminar(id) {\r\n            let nombre = this.balances_ajustados[id].cuenta;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.balances_ajustados.splice(id, 1);\r\n                    this.cancelarEdicion();\r\n                }\r\n            });\r\n        },\r\n        guardarBalance: function () {\r\n            if (this.balances_ajustados.length == 0) {\r\n                toastr.error(\r\n                    \"Debe haber al menos un registro en el Balance\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.nombre == \"\") {\r\n                toastr.error(\"El nombre es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.fecha == \"\") {\r\n                toastr.error(\"La fecha es obligatoria\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let _this = this;\r\n                let url = \"/sistema/admin/taller/balance-ajustado\";\r\n                axios\r\n                    .post(url, {\r\n                        id: _this.id_taller,\r\n                        balances: _this.balances_ajustados,\r\n                        total_debe: _this.suman.debe,\r\n                        total_haber: _this.suman.haber,\r\n                        nombre: _this.nombre,\r\n                        fecha: _this.fecha\r\n                    })\r\n                    .then(response => {\r\n                        if (response.data.estado == \"guardado\") {\r\n                            toastr.success(\r\n                                \"Balance creado correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                        } else if (response.data.estado == \"actualizado\") {\r\n                            toastr.warning(\r\n                                \"Balance actualizado correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                        }\r\n                    })\r\n                    .catch(function (error) { });\r\n            }\r\n        },\r\n        obtenerBalanceAjus: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/balance-obtener-ajustado\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        toastr.info(\r\n                            \"Balance de Comprobacion Ajustado cargado correctamente\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                        this.balances_ajustados =\r\n                            response.data.bcomprobacionAjustado;\r\n                        this.nombre = response.data.nombre;\r\n                        this.fecha = response.data.fecha;\r\n                        this.totales();\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        }\r\n    }\r\n});\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////ESTADO RESULTADO ///////////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst estado_resultado = new Vue({\r\n    el: \"#estado_resultado\",\r\n    data: {\r\n        id_taller: taller,\r\n        hojatrabajo: [],\r\n        options: objeto,\r\n        cuentas: cuentas,\r\n        nombre_hoja: \"\",\r\n        venta: \"\",\r\n        costo_venta: \"\",\r\n        producto: \"\",\r\n        nombre: \"\",\r\n        fecha: \"\",\r\n        ingresos: [],\r\n        gastos: [],\r\n        ingreso: {\r\n            cuenta_id: \"\",\r\n            saldo: \"\",\r\n            edit: false,\r\n            const_id: \"\"\r\n        },\r\n        utilidad_bruta: {\r\n            costo: \"\",\r\n            costo_venta: \"\"\r\n        },\r\n        gasto: {\r\n            cuenta_id: \"\",\r\n            saldo: \"\",\r\n            edit: false,\r\n            const_id: \"\"\r\n        },\r\n        utilida: {\r\n            cuenta_id: \"\",\r\n            saldo: \"\",\r\n            edit: false,\r\n            create: false,\r\n            const_id: \"\"\r\n        },\r\n        utilidades: [],\r\n        utilidad: \"\",\r\n\r\n        update: false,\r\n        registro: {\r\n            ingreso: \"\",\r\n            gasto: \"\",\r\n            utilida: \"\"\r\n        },\r\n        totales: {\r\n            ingreso: 0,\r\n            gastos: 0,\r\n            utilidad_bruta_ventas: \"\",\r\n            utilidad_neta_o: 0,\r\n            utilidad_ejercicio: \"\",\r\n            utilidad_liquida: \"\"\r\n        }\r\n    },\r\n\r\n    mounted: function () {\r\n        this.obtenerHojita();\r\n        this.obtenerEstadoResultado();\r\n    },\r\n    methods: {\r\n        calculadora() {\r\n            let propsData = {\r\n                title: \"Called from basic js\",\r\n                noteProp: [\"Note number 1\", \"Note number 2\"]\r\n            };\r\n            let component = \"example-component\";\r\n            funciones.VueSweetAlert2(component, propsData);\r\n        },\r\n        agregarBruta() {\r\n            this.venta = this.utilidad_bruta.venta;\r\n            this.costo_venta = this.utilidad_bruta.costo_venta;\r\n            toastr.info(\"Datos agregados\", \"SmartLearn\", {\r\n                timeOut: \"3000\"\r\n            });\r\n\r\n            let suma_ventas = Number(this.venta - this.costo_venta);\r\n            this.totales.utilidad_bruta_ventas = suma_ventas;\r\n            console.log(suma_ventas);\r\n            this.totale();\r\n        },\r\n        subtotal() {\r\n            let total =\r\n                Number(this.totales.ingreso) +\r\n                Number(this.totales.utilidad_bruta_ventas);\r\n            console.log(total);\r\n            this.totales.utilidad_neta_o = Number(total).toFixed(2);\r\n        },\r\n        warningEliminarIngreso(id) {\r\n            let nombre = this.ingresos[id].cuenta;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.ingresos.splice(id, 1);\r\n                    this.totale();\r\n                    this.subtotal();\r\n                }\r\n            });\r\n        },\r\n        warningEliminarGastos(id) {\r\n            let nombre = this.gastos[id].cuenta;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.gastos.splice(id, 1);\r\n                    this.totale();\r\n                    this.subtotal();\r\n                }\r\n            });\r\n        },\r\n        warningEliminarUtilidad(id) {\r\n            let nombre = this.utilidades[id].cuenta;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.utilidades.splice(id, 1);\r\n                }\r\n            });\r\n        },\r\n        VueSweetAlert2(component, propsData) {\r\n            Swal.fire({\r\n                html: '<div id=\"VueSweetAlert2\"></div>',\r\n                showConfirmButton: false,\r\n                showCloseButton: true,\r\n                willOpen: () => {\r\n                    let ComponentClass = Vue.extend(Vue.component(component));\r\n                    let instance = new ComponentClass({\r\n                        propsData: propsData\r\n                    });\r\n                    instance.$mount();\r\n                    document\r\n                        .getElementById(\"VueSweetAlert2\")\r\n                        .appendChild(instance.$el);\r\n                }\r\n            });\r\n        },\r\n        totale: function () {\r\n            this.totales.ingreso = 0;\r\n            this.totales.gastos = 0;\r\n            let ingreso = this.ingresos;\r\n            let gasto = this.gastos;\r\n            let total1 = 0;\r\n            let total2 = 0;\r\n\r\n            ingreso.forEach(function (obj, index) {\r\n                total1 += Number(obj.saldo);\r\n            });\r\n\r\n            gasto.forEach(function (obj, index) {\r\n                total2 += Number(obj.saldo);\r\n            });\r\n            this.totales.ingreso = total1.toFixed(2);\r\n            this.totales.gastos = total2.toFixed(2);\r\n\r\n            console.log(total1);\r\n            console.log(total2);\r\n            this.subtotal();\r\n        },\r\n        selectUtilidad() {\r\n            if (this.utilidad == \"perdida\") {\r\n            } else if (this.utilidad == \"ganancia\") {\r\n            }\r\n        },\r\n        obtenerHojita: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/hoja-obtener-trabajo\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        this.hojatrabajo = response.data.hojatrabajo;\r\n                        this.nombre_hoja = response.data.nombre;\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        },\r\n        verificarCuentaIngreso(id) {\r\n            if (Number(this.ingreso.const_id) === id) {\r\n                return false;\r\n            }\r\n            let ac = this.ingresos.filter(x => x.cuenta_id == id);\r\n            let ga = this.gastos.filter(x => x.cuenta_id == id);\r\n            let u = this.utilidades.filter(x => x.cuenta_id == id);\r\n\r\n            if (ac.length > 0) {\r\n                return true;\r\n            } else if (ga.length > 0) {\r\n                return true;\r\n            } else if (u.length > 0) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n        verificarCuentaGasto(id) {\r\n            if (Number(this.gasto.const_id) === id) {\r\n                return false;\r\n            }\r\n            let ac = this.ingresos.filter(x => x.cuenta_id == id);\r\n            let ga = this.gastos.filter(x => x.cuenta_id == id);\r\n            let u = this.utilidades.filter(x => x.cuenta_id == id);\r\n\r\n            if (ac.length > 0) {\r\n                return true;\r\n            } else if (ga.length > 0) {\r\n                return true;\r\n            } else if (u.length > 0) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n        verificarCuentaUtilidad(id) {\r\n            if (Number(this.utilida.const_id) === id) {\r\n                return false;\r\n            }\r\n            let ac = this.ingresos.filter(x => x.cuenta_id == id);\r\n            let ga = this.gastos.filter(x => x.cuenta_id == id);\r\n            let u = this.utilidades.filter(x => x.cuenta_id == id);\r\n\r\n            if (ac.length > 0) {\r\n                return true;\r\n            } else if (ga.length > 0) {\r\n                return true;\r\n            } else if (u.length > 0) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n        decimales(saldo) {\r\n            if (saldo !== null && saldo !== \"\" && saldo !== 0) {\r\n                let total = Number(saldo).toFixed(2);\r\n                return total;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        formatoFecha(fecha) {\r\n            if (fecha !== null) {\r\n                let date = fecha\r\n                    .split(\"-\")\r\n                    .reverse()\r\n                    .join(\"-\");\r\n                return date;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        abrirIngreso() {\r\n            $(\"#er-ingreso\").modal(\"show\");\r\n            $(\"#nav-er-ingreso-tab\").tab(\"show\");\r\n        },\r\n        abrirGastos() {\r\n            $(\"#er-ingreso\").modal(\"show\");\r\n            $(\"#nav-er-gastos-tab\").tab(\"show\");\r\n        },\r\n        abrirUtilidades() {\r\n            $(\"#er-ingreso\").modal(\"show\");\r\n            $(\"#nav-er-utilidad-tab\").tab(\"show\");\r\n        },\r\n        mostrarUtilidades() {\r\n            this.utilida.create = true;\r\n        },\r\n        cerrarUtilidades() {\r\n            this.utilida.create = false;\r\n            this.utilida.cuenta_id = \"\";\r\n            this.utilida.saldo = \"\";\r\n            this.utilida.edit = false;\r\n            this.utilida.create = false;\r\n            this.const_id = \"\";\r\n        },\r\n        agregarIngreso() {\r\n            if (this.ingreso.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.ingreso.cuenta_id;\r\n                let verificar = this.verificarCuentaIngreso(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    var ingreso = {\r\n                        cuenta_id: this.ingreso.cuenta_id,\r\n                        cuenta: nombre,\r\n                        saldo: this.ingreso.saldo\r\n                    };\r\n                    this.ingresos.push(ingreso);\r\n                    toastr.success(\r\n                        \"Ingreso agregado correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.ingreso.cuenta_id = \"\";\r\n                    this.ingreso.saldo = \"\";\r\n                    this.totale();\r\n                    this.subtotal();\r\n                }\r\n            }\r\n        },\r\n        agregarGasto() {\r\n            if (this.gasto.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.gasto.cuenta_id;\r\n                let verificar = this.verificarCuentaGasto(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    var gasto = {\r\n                        cuenta_id: this.gasto.cuenta_id,\r\n                        cuenta: nombre,\r\n                        saldo: this.gasto.saldo\r\n                    };\r\n                    this.gastos.push(gasto);\r\n                    toastr.success(\r\n                        \"Gasto agregado correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.gasto.cuenta_id = \"\";\r\n                    this.gasto.saldo = \"\";\r\n                    this.totale();\r\n                    this.subtotal();\r\n                }\r\n            }\r\n        },\r\n        agregarUtilidad() {\r\n            if (this.utilida.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.utilida.cuenta_id;\r\n                let verificar = this.verificarCuentaUtilidad(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    var utilida = {\r\n                        cuenta_id: this.utilida.cuenta_id,\r\n                        cuenta: nombre,\r\n                        saldo: this.utilida.saldo\r\n                    };\r\n                    this.utilidades.push(utilida);\r\n                    toastr.success(\r\n                        \"Cuenta agregada correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.utilida.cuenta_id = \"\";\r\n                    this.utilida.saldo = \"\";\r\n                    this.totale();\r\n                    this.subtotal();\r\n                }\r\n            }\r\n        },\r\n\r\n        editIngreso(index) {\r\n            this.ingreso.edit = true;\r\n            this.registro.ingreso = index;\r\n            this.ingreso.const_id = this.ingresos[index].cuenta_id;\r\n            this.ingreso.cuenta_id = this.ingresos[index].cuenta_id;\r\n            this.ingreso.saldo = this.ingresos[index].saldo;\r\n        },\r\n\r\n        editIngresoFuera(index) {\r\n            this.ingreso.edit = true;\r\n            this.registro.ingreso = index;\r\n            this.ingreso.const_id = this.ingresos[index].cuenta_id;\r\n            this.ingreso.cuenta_id = this.ingresos[index].cuenta_id;\r\n            this.ingreso.saldo = this.ingresos[index].saldo;\r\n            $(\"#er-ingreso\").modal(\"show\");\r\n            $(\"#nav-er-ingreso-tab\").tab(\"show\");\r\n        },\r\n\r\n        cancelarEdicionIngreso() {\r\n            this.ingreso.cuenta_id = \"\";\r\n            this.ingreso.saldo = \"\";\r\n            this.ingreso.edit = false;\r\n        },\r\n        actualizarIngreso() {\r\n            if (this.ingreso.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.ingreso.cuenta_id;\r\n                let verificar = this.verificarCuentaIngreso(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    let index = this.registro.ingreso;\r\n                    this.ingresos[index].cuenta_id = this.ingreso.cuenta_id;\r\n                    this.ingresos[index].cuenta = nombre;\r\n                    this.ingresos[index].saldo = this.ingreso.saldo;\r\n                    this.ingreso.cuenta_id = \"\";\r\n                    this.ingreso.saldo = \"\";\r\n                    this.ingreso.edit = false;\r\n                    this.registro.ingreso = \"\";\r\n                    this.totale();\r\n                    this.subtotal();\r\n                }\r\n            }\r\n        },\r\n\r\n        editGasto(index) {\r\n            this.gasto.edit = true;\r\n            this.registro.gasto = index;\r\n            this.gasto.const_id = this.gastos[index].cuenta_id;\r\n            this.gasto.cuenta_id = this.gastos[index].cuenta_id;\r\n            this.gasto.saldo = this.gastos[index].saldo;\r\n        },\r\n\r\n        editGastoFuera(index) {\r\n            this.gasto.edit = true;\r\n            this.registro.gasto = index;\r\n            this.gasto.const_id = this.gastos[index].cuenta_id;\r\n            this.gasto.cuenta_id = this.gastos[index].cuenta_id;\r\n            this.gasto.saldo = this.gastos[index].saldo;\r\n            $(\"#er-ingreso\").modal(\"show\");\r\n            $(\"#nav-er-gastos-tab\").tab(\"show\");\r\n        },\r\n\r\n        cancelarEdicionGasto() {\r\n            this.gasto.cuenta_id = \"\";\r\n            this.gasto.saldo = \"\";\r\n            this.gasto.edit = false;\r\n        },\r\n        actualizarGasto() {\r\n            if (this.gasto.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.gasto.cuenta_id;\r\n                let verificar = this.verificarCuentaGasto(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    let index = this.registro.gasto;\r\n                    this.gastos[index].cuenta_id = this.gasto.cuenta_id;\r\n                    this.gastos[index].cuenta = nombre;\r\n                    this.gastos[index].saldo = this.gasto.saldo;\r\n                    this.gasto.cuenta_id = \"\";\r\n                    this.gasto.saldo = \"\";\r\n                    this.gasto.edit = false;\r\n                    this.registro.gasto = \"\";\r\n\r\n                    this.totales();\r\n                    this.subtotal();\r\n                }\r\n            }\r\n        },\r\n        editUtilidad(index) {\r\n            this.utilida.create = true;\r\n            this.utilida.edit = true;\r\n            this.registro.utilida = index;\r\n            this.utilida.const_id = this.utilidades[index].cuenta_id;\r\n            this.utilida.cuenta_id = this.utilidades[index].cuenta_id;\r\n            this.utilida.saldo = this.utilidades[index].saldo;\r\n        },\r\n\r\n        editUtilidadFuera(index) {\r\n            this.utilida.edit = true;\r\n            this.registro.utilida = index;\r\n            this.utilida.const_id = this.utilidades[index].cuenta_id;\r\n            this.utilida.cuenta_id = this.utilidades[index].cuenta_id;\r\n            this.utilida.saldo = this.utilidades[index].saldo;\r\n            $(\"#er-ingreso\").modal(\"show\");\r\n            $(\"#nav-er-utilidad-tab\").tab(\"show\");\r\n        },\r\n\r\n        cancelarEdicionUtilidad() {\r\n            this.utilida.cuenta_id = \"\";\r\n            this.utilida.saldo = \"\";\r\n            this.utilida.edit = false;\r\n        },\r\n        actualizarUtilidad() {\r\n            if (this.utilida.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.utilida.cuenta_id;\r\n                let verificar = this.verificarCuentaUtilidad(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    let index = this.registro.utilida;\r\n                    this.utilidades[index].cuenta_id = this.utilida.cuenta_id;\r\n                    this.utilidades[index].cuenta = nombre;\r\n                    this.utilidades[index].saldo = this.utilida.saldo;\r\n                    this.utilida.cuenta_id = \"\";\r\n                    this.utilida.saldo = \"\";\r\n                    this.utilida.edit = false;\r\n                    this.utilida.create = false;\r\n                    this.registro.utilidad = \"\";\r\n                    this.totale();\r\n                    this.subtotal();\r\n                }\r\n            }\r\n        },\r\n        guardarEstadoResultado: function () {\r\n            if (this.nombre.trim() === \"\") {\r\n                toastr.error(\"Campo Nombre es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.fecha.trim() === \"\") {\r\n                toastr.error(\"Campo Fecha es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let _this = this;\r\n                let url = \"/sistema/admin/taller/estado-resultado\";\r\n                axios\r\n                    .post(url, {\r\n                        id: _this.id_taller,\r\n                        nombre: _this.nombre,\r\n                        fecha: _this.fecha,\r\n                        ingresos: _this.ingresos,\r\n                        gastos: _this.gastos,\r\n                        utilidades: _this.utilidades,\r\n                        utilidad: _this.utilidad,\r\n                        totales: _this.totales,\r\n                        venta: _this.venta,\r\n                        costo_venta: _this.costo_venta\r\n                    })\r\n                    .then(response => {\r\n                        if (response.data.success == \"actualizado\") {\r\n                            toastr.success(\r\n                                response.data.message,\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            balance_general.obtenerEstadoResultado();\r\n                            asientos_cierre.obtenerEstadoResultado();\r\n                        } else {\r\n                            toastr.success(\r\n                                response.data.message,\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            balance_general.obtenerEstadoResultado();\r\n                            asientos_cierre.obtenerEstadoResultado();\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        toastr.error(\r\n                            error.response.data.message,\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                    });\r\n            }\r\n        },\r\n        obtenerEstadoResultado: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/estado-obtener-resultado\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        _this.nombre = response.data.estadoresultado.nombre;\r\n                        _this.fecha = response.data.estadoresultado.fecha;\r\n                        _this.ingresos = response.data.ingresos;\r\n                        _this.gastos = response.data.gastos;\r\n                        _this.utilidades = response.data.utilidades;\r\n                        _this.utilidad = response.data.estadoresultado.utilidad;\r\n                        _this.venta = response.data.estadoresultado.venta;\r\n                        _this.costo_venta =\r\n                            response.data.estadoresultado.costo_venta;\r\n                        _this.totales.utilidad_bruta_ventas =\r\n                            response.data.estadoresultado.utilidad_bruta_ventas;\r\n                        _this.utilidad_bruta.venta =\r\n                            response.data.estadoresultado.venta;\r\n                        _this.utilidad_bruta.costo_venta =\r\n                            response.data.estadoresultado.costo_venta;\r\n                        _this.totales.utilidad_ejercicio =\r\n                            response.data.estadoresultado.utilidad_ejercicio;\r\n                        _this.totales.utilidad_liquida =\r\n                            response.data.estadoresultado.utilidad_liquida;\r\n                        console.log(response.data.estadoresultado);\r\n                        this.totale();\r\n                        this.subtotal();\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        }\r\n    }\r\n});\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////BALANCE GENERAL ///////////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst balance_general = new Vue({\r\n    el: \"#balance_general\",\r\n    data: {\r\n        nombre: \"\",\r\n        fecha: \"\",\r\n        id_taller: taller,\r\n        hojatrabajo: [],\r\n        nombre_hoja: \"\",\r\n        estadoresultado: {\r\n            nombre_e_resultado: \"\",\r\n            fecha_e_resultado: \"\",\r\n            ingresos: [],\r\n            gastos: [],\r\n            utilidades: [],\r\n            utilidad: \"\",\r\n            venta_e_resultado: \"\",\r\n            costo_venta_e_resultado: \"\",\r\n            totales: {\r\n                ingreso: \"\",\r\n                gasto: \"\",\r\n                utilidad_bruta_ventas_e_resultado: \"\",\r\n                utilidad_ejercicio_e_resultado: \"\",\r\n                utilidad_liquida_e_resultado: \"\"\r\n            }\r\n        },\r\n        //diarios:[],\r\n        update: 0,\r\n        balance_general: {\r\n            //Nombre y fecha del balance inicial\r\n            nombre: \"\",\r\n            fecha: \"\"\r\n        },\r\n        patrimonio: {\r\n            //Asignar Patrimonio\r\n            cuenta_id: \"\",\r\n            edit: false,\r\n            saldo: \"\"\r\n        },\r\n        bi: {\r\n            const_id: \"\",\r\n            const_id2: \"\"\r\n        },\r\n        options: objeto,\r\n        cuentas: cuentas,\r\n        //diarios2:[],\r\n        total_balance_inicial: {\r\n            //Totales de activo, pasivo y patrimonio\r\n            t_activo: \"\",\r\n            t_pasivo: \"\",\r\n            t_patrimonio_pasivo: \"\"\r\n        },\r\n        registro: {\r\n            activo_corriente: \"\",\r\n            activo_nocorriente: \"\",\r\n            pasivo_corriente: \"\",\r\n            pasivo_nocorriente: \"\",\r\n            patrimonio: \"\"\r\n        },\r\n        b_initotal: {\r\n            t_a_corriente: \"\", //Total de activo corriente\r\n            t_a_nocorriente: \"\", //Total de activo no corriente\r\n            t_p_corriente: \"\", //Total de pasivo corriente\r\n            t_p_no_corriente: \"\", //Total de pasivo no corriente\r\n            t_patrimonio: \"\" //Total de patrimonio\r\n        },\r\n        a_corrientes: [], //Array de activos corrientes\r\n        a_nocorrientes: [], //Array de activos no corrientes\r\n        p_corrientes: [], //Array de pasivos corrientes\r\n        p_nocorrientes: [], //Array de pasivos no corrientes\r\n        patrimonios: [], //Array de patrimonios\r\n        activo: {\r\n            a_corriente: {\r\n                //Agregar un nuevo activo corriente al array\r\n                cuenta_id: \"\",\r\n                saldo: \"\",\r\n                cuenta_id2: \"\",\r\n                total_saldo: \"\",\r\n                total_saldo2: \"\",\r\n                saldo2: \"\",\r\n                edit: false,\r\n                double: false\r\n            },\r\n            a_nocorriente: {\r\n                //Agregar un nuevo activo no corriente al array\r\n                cuenta_id: \"\",\r\n                saldo: \"\",\r\n                cuenta_id2: \"\",\r\n                total_saldo: \"\",\r\n                total_saldo2: \"\",\r\n                saldo2: \"\",\r\n                edit: false,\r\n                double: false\r\n            }\r\n        },\r\n        pasivo: {\r\n            p_corriente: {\r\n                cuenta_id: \"\",\r\n                saldo: \"\",\r\n                total: \"\",\r\n                edit: false\r\n            },\r\n            p_nocorriente: {\r\n                cuenta_id: \"\",\r\n                saldo: \"\",\r\n                total: \"\",\r\n                edit: false\r\n            }\r\n        }\r\n    },\r\n    mounted: function () {\r\n        this.obtenerHojita();\r\n        this.cambioActivo();\r\n        this.cambioActivoNo();\r\n        this.cambioPasivo();\r\n        this.cambioPasivoNo();\r\n        this.cambioPatrimonio();\r\n        this.TotalActivo();\r\n        this.TotalPasivo();\r\n        this.obtenerBalance();\r\n        this.obtenerEstadoResultado();\r\n    },\r\n    methods: {\r\n        calculadora() {\r\n            let propsData = {\r\n                title: \"Called from basic js\",\r\n                noteProp: [\"Note number 1\", \"Note number 2\"]\r\n            };\r\n            let component = \"example-component\";\r\n            funciones.VueSweetAlert2(component, propsData);\r\n        },\r\n        obtenerEstadoResultado: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/estado-obtener-resultado\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        _this.estadoresultado.nombre_e_resultado =\r\n                            response.data.estadoresultado.nombre;\r\n                        _this.estadoresultado.fecha_e_resultado =\r\n                            response.data.estadoresultado.fecha;\r\n                        _this.estadoresultado.ingresos = response.data.ingresos;\r\n                        _this.estadoresultado.totales.ingreso =\r\n                            response.data.estadoresultado.total_ingresos;\r\n                        _this.estadoresultado.totales.gasto =\r\n                            response.data.estadoresultado.total_gastos;\r\n                        _this.estadoresultado.gastos = response.data.gastos;\r\n                        _this.estadoresultado.utilidades =\r\n                            response.data.utilidades;\r\n                        _this.estadoresultado.utilidad =\r\n                            response.data.estadoresultado.utilidad;\r\n                        _this.estadoresultado.venta_e_resultado =\r\n                            response.data.estadoresultado.venta;\r\n                        _this.estadoresultado.costo_venta_e_resultado =\r\n                            response.data.estadoresultado.costo_venta;\r\n                        _this.estadoresultado.totales.utilidad_bruta_ventas_e_resultado =\r\n                            response.data.estadoresultado.utilidad_bruta_ventas;\r\n                        _this.estadoresultado.totales.utilidad_ejercicio_e_resultado =\r\n                            response.data.estadoresultado.utilidad_ejercicio;\r\n                        _this.estadoresultado.totales.utilidad_liquida_e_resultado =\r\n                            response.data.estadoresultado.utilidad_liquida;\r\n                        _this.estadoresultado.totales.utilidad_neta_o =\r\n                            response.data.estadoresultado.utilidad_neta_o;\r\n                        console.log(response.data.estadoresultado);\r\n                        this.totale();\r\n                        this.subtotal();\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        },\r\n        decimales(saldo) {\r\n            if (saldo !== null && saldo !== \"\" && saldo !== 0) {\r\n                let total = Number(saldo).toFixed(2);\r\n                return total;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        obtenerHojita: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/hoja-obtener-trabajo\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        this.hojatrabajo = response.data.hojatrabajo;\r\n                        this.nombre_hoja = response.data.nombre;\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        },\r\n        abrirActivoC() {\r\n            this.limpiar();\r\n            $(\"#bg-transaccion\").modal(\"show\");\r\n            $(\"#nav-bg-activo-corriente-tab\").tab(\"show\");\r\n            // $('#kardex-promedio-ingreso-edit-tab').tab('show')\r\n        },\r\n        abrirActivoNoC() {\r\n            this.limpiar();\r\n            $(\"#bg-transaccion\").modal(\"show\");\r\n\r\n            $(\"#nav-bg-activo-no-corriente-tab\").tab(\"show\");\r\n        },\r\n        abrirPasivoC() {\r\n            this.limpiar();\r\n            $(\"#bg-transaccion\").modal(\"show\");\r\n\r\n            $(\"#nav-bg-pasivo-corriente-tab\").tab(\"show\");\r\n        },\r\n        abrirPasivoNoC() {\r\n            this.limpiar();\r\n            $(\"#bg-transaccion\").modal(\"show\");\r\n\r\n            $(\"#nav-bg-pasivo-no-corriente-tab\").tab(\"show\");\r\n        },\r\n        abrirPatrimonio() {\r\n            this.limpiar();\r\n            $(\"#bg-transaccion\").modal(\"show\");\r\n\r\n            $(\"#nav-bg-patrimonio-tab\").tab(\"show\");\r\n        },\r\n\r\n        //ELIMINAR ELEMENTOS DE UN ARRAY /////////\r\n        deleteAcCooriente(index) {\r\n            let nombre = this.a_corrientes[index].cuenta;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.a_corrientes.splice(index, 1);\r\n                    this.cambioActivo();\r\n                    this.TotalActivo();\r\n                    this.limpiar();\r\n                }\r\n            });\r\n        },\r\n\r\n        deletePaCooriente(index) {\r\n            let nombre = this.p_corrientes[index].cuenta;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n\r\n                    this.p_corrientes.splice(index, 1);\r\n                    this.cambioPasivo();\r\n                    this.TotalPasivo();\r\n                    this.limpiar();\r\n                }\r\n            });\r\n        },\r\n        deleteAcNoCooriente(index) {\r\n            let nombre = this.a_nocorrientes[index].cuenta;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.a_nocorrientes.splice(index, 1);\r\n                    this.cambioActivoNo();\r\n                    this.TotalActivo();\r\n                    this.limpiar();\r\n                }\r\n            });\r\n        },\r\n        deletePaNoCooriente(index) {\r\n            let nombre = this.p_nocorrientes[index].cuenta;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.p_nocorrientes.splice(index, 1);\r\n                    this.cambioPasivoNo();\r\n                    this.TotalPasivo();\r\n                    this.limpiar();\r\n                }\r\n            });\r\n        },\r\n        deletePatrimonio(index) {\r\n            let nombre = this.patrimonios[index].cuenta;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.patrimonios.splice(index, 1);\r\n                    this.cambioPatrimonio();\r\n                    this.limpiar();\r\n                }\r\n            });\r\n        },\r\n        limpiar() {\r\n            //LIMPIAR TODOS LOS CAMPOS DE ACTIVOS PASIVOS Y PATRIMONIOS\r\n            this.pasivo.p_corriente.cuenta_id = \"\";\r\n            this.pasivo.p_corriente.saldo = \"\";\r\n            this.pasivo.p_nocorriente.cuenta_id = \"\";\r\n            this.pasivo.p_nocorriente.saldo = \"\";\r\n\r\n            this.activo.a_corriente.cuenta_id = \"\";\r\n            this.activo.a_corriente.saldo = \"\";\r\n            this.activo.a_corriente.cuenta_id2 = \"\";\r\n            this.activo.a_corriente.saldo2 = \"\";\r\n            this.activo.a_corriente.double = \"\";\r\n\r\n            this.activo.a_nocorriente.cuenta_id = \"\";\r\n            this.activo.a_nocorriente.saldo = \"\";\r\n            this.activo.a_nocorriente.cuenta_id2 = \"\";\r\n            this.activo.a_nocorriente.saldo2 = \"\";\r\n            this.activo.a_nocorriente.double = \"\";\r\n\r\n            this.bi.const_id = \"\";\r\n            this.activo.a_corriente.edit = false;\r\n            this.activo.a_nocorriente.edit = false;\r\n            this.pasivo.p_corriente.edit = false;\r\n            this.pasivo.p_nocorriente.edit = false;\r\n            this.patrimonio.edit = false;\r\n        },\r\n        agregarActivoCorriente() {\r\n            //    if(this.activo.a_corriente.cuenta_id  ==''){\r\n            //     toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n            //       \"timeOut\": \"3000\"\r\n            //   });\r\n            // }else {\r\n            //      let id = this.activo.a_corriente.cuenta_id;\r\n            //        let verificar = this.verificarCuenta(id);\r\n            //            if (verificar == true) {\r\n            //              toastr.error(\"No puedes agregar una cuenta repetida\", \"SmartLearn\", {\r\n            //               \"timeOut\": \"3000\"\r\n            //               });\r\n            //            }else{\r\n            //     let nombre   = funciones.obtenerNombre(id);\r\n            //     var a_corriente ={resta:'', cuenta_id2:'', cuenta2:'', total_saldo2:'', saldo2:'', total_saldo:'', cuenta_id:this.activo.a_corriente.cuenta_id, cuenta:nombre, saldo:this.activo.a_corriente.saldo}\r\n            //     this.a_corrientes.push(a_corriente);\r\n            //     toastr.success(\"Cuenta agregada correctamente\", \"SmartLearn\", {\r\n            //       \"timeOut\": \"3000\"\r\n            //     });\r\n            //    this.activo.a_corriente.cuenta_id =''\r\n            //    this.activo.a_corriente.saldo     =''\r\n            //    this.cambioActivo();\r\n            //  }\r\n            //    }\r\n            //\r\n            if (this.activo.a_corriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.activo.a_corriente.cuenta_id;\r\n                let id2 = this.activo.a_corriente.cuenta_id2;\r\n                if (id == id2) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    return;\r\n                }\r\n                if (id2 !== \"\") {\r\n                    let verificar2 = this.verificarCuenta(id2);\r\n                    if (verificar2 == true) {\r\n                        toastr.error(\r\n                            \"No puedes agregar una cuenta repetida\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                        return;\r\n                    }\r\n                }\r\n                let verificar = this.verificarCuenta(id);\r\n\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n\r\n                    if (id2 != \"\" && id2 != undefined) {\r\n                        this.activo.a_corriente.nombre1 = funciones.obtenerNombre(\r\n                            id2\r\n                        );\r\n                        console.log(\"HAS ENTRADO AQUI\");\r\n                        let resta =\r\n                            Number(this.activo.a_corriente.saldo) -\r\n                            Number(this.activo.a_corriente.saldo2);\r\n                        this.activo.a_corriente.total_saldo2 = resta;\r\n\r\n                        let a_corriente = {\r\n                            resta: \"si\",\r\n                            cuenta_id: this.activo.a_corriente.cuenta_id,\r\n                            cuenta: nombre,\r\n                            saldo: this.activo.a_corriente.saldo,\r\n                            cuenta2: this.activo.a_corriente.nombre1,\r\n                            total_saldo: this.activo.a_corriente.total_saldo,\r\n                            cuenta_id2: this.activo.a_corriente.cuenta_id2,\r\n                            saldo2: this.activo.a_corriente.saldo2,\r\n                            total_saldo2: this.activo.a_corriente.total_saldo2\r\n                        };\r\n                        this.a_corrientes.push(a_corriente);\r\n                        toastr.success(\r\n                            \"Cuenta agregada correctamente\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                    } else {\r\n                        let a_corriente = {\r\n                            resta: \"no\",\r\n                            cuenta_id: this.activo.a_corriente.cuenta_id,\r\n                            cuenta: nombre,\r\n                            saldo: \"\",\r\n                            cuenta2: \"\",\r\n                            saldo2: \"\",\r\n                            total_saldo: this.activo.a_corriente.saldo,\r\n                            cuenta_id2: this.activo.a_corriente.cuenta_id2,\r\n                            total_saldo2: this.activo.a_corriente.total_saldo2\r\n                        };\r\n                        this.a_corrientes.push(a_corriente);\r\n                        toastr.success(\r\n                            \"Cuenta agregada correctamente\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                    }\r\n                    this.activo.a_corriente.cuenta_id = \"\";\r\n                    this.activo.a_corriente.saldo = \"\";\r\n                    this.activo.a_corriente.cuenta_id2 = \"\";\r\n                    this.activo.a_corriente.saldo2 = \"\";\r\n                    this.activo.a_corriente.total_saldo = \"\";\r\n                    this.activo.a_corriente.total_saldo2 = \"\";\r\n                    this.activo.a_corriente.double = false;\r\n\r\n                    this.cambioActivo();\r\n                }\r\n            }\r\n        },\r\n\r\n        //EDITAR ELEMENTOS DE UN ARRAY\r\n        editAcorriente(index) {\r\n            this.activo.a_corriente.edit = true;\r\n            this.registro.a_corriente = index;\r\n            this.bi.const_id = this.a_corrientes[index].cuenta_id;\r\n            this.bi.const_id2 = this.a_corrientes[index].cuenta_id2;\r\n            this.activo.a_corriente.cuenta_id = this.a_corrientes[\r\n                index\r\n            ].cuenta_id;\r\n            if (\r\n                this.a_corrientes[index].saldo != \"\" &&\r\n                this.a_corrientes[index].saldo != undefined\r\n            ) {\r\n                this.activo.a_corriente.saldo = this.a_corrientes[index].saldo;\r\n            } else {\r\n                this.activo.a_corriente.saldo = this.a_corrientes[\r\n                    index\r\n                ].total_saldo;\r\n            }\r\n            this.activo.a_corriente.cuenta_id2 = this.a_corrientes[\r\n                index\r\n            ].cuenta_id2;\r\n            this.activo.a_corriente.saldo2 = this.a_corrientes[index].saldo2;\r\n            if (this.a_corrientes[index].resta == \"si\") {\r\n                this.activo.a_corriente.double = true;\r\n            }\r\n            // this.activo.a_corriente.edit      = true;\r\n            // this.registro.a_corriente    = index;\r\n            // this.bi.const_id                  = this.a_corrientes[index].cuenta_id;\r\n            // this.activo.a_corriente.cuenta_id = this.a_corrientes[index].cuenta_id;\r\n            // this.activo.a_corriente.saldo     = this.a_corrientes[index].saldo;\r\n            $(\"#bg-transaccion\").modal(\"show\");\r\n            $(\"#nav-bg-activo-corriente-tab\").tab(\"show\");\r\n        },\r\n        actualizarActivoC() {\r\n            if (this.activo.a_corriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.activo.a_corriente.cuenta_id;\r\n                let id2 = this.activo.a_corriente.cuenta_id2;\r\n                if (id == id2) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    return;\r\n                }\r\n\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    let index = this.registro.a_corriente;\r\n                    this.a_corrientes[\r\n                        index\r\n                    ].cuenta_id = this.activo.a_corriente.cuenta_id;\r\n                    this.a_corrientes[index].cuenta = nombre;\r\n                    if (id2 !== \"\" && id2 !== undefined) {\r\n                        let verificar2 = this.verificarCuentaAct(id2);\r\n                        if (verificar2 == true) {\r\n                            toastr.error(\r\n                                \"No puedes agregar una cuenta repetida\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            return;\r\n                        }\r\n                        let nombre2 = funciones.obtenerNombre(id2);\r\n                        this.a_corrientes[\r\n                            index\r\n                        ].cuenta_id2 = this.activo.a_corriente.cuenta_id2;\r\n                        this.a_corrientes[index].cuenta2 = nombre2;\r\n                        this.a_corrientes[\r\n                            index\r\n                        ].saldo = this.activo.a_corriente.saldo;\r\n\r\n                        this.a_corrientes[\r\n                            index\r\n                        ].saldo2 = this.activo.a_corriente.saldo2;\r\n                        this.a_corrientes[index].total_saldo = \"\";\r\n                        let resta =\r\n                            Number(this.activo.a_corriente.saldo) -\r\n                            Number(this.activo.a_corriente.saldo2);\r\n                        this.a_corrientes[index].total_saldo2 = resta;\r\n                        this.a_corrientes[index].resta = \"si\";\r\n                        console.log(resta);\r\n                    } else {\r\n                        this.a_corrientes[index].saldo = \"\";\r\n                        this.a_corrientes[index].cuenta_id2 = \"\";\r\n                        this.a_corrientes[index].cuenta2 = \"\";\r\n                        this.a_corrientes[index].saldo2 = \"\";\r\n                        this.a_corrientes[index].total_saldo2 = \"\";\r\n                        this.a_corrientes[\r\n                            index\r\n                        ].total_saldo = this.activo.a_corriente.saldo;\r\n                        this.a_corrientes[index].resta = \"no\";\r\n                    }\r\n                    this.activo.a_corriente.cuenta_id = \"\";\r\n                    this.activo.a_corriente.saldo = \"\";\r\n                    this.activo.a_corriente.edit = false;\r\n                    this.registro.a_corriente = \"\";\r\n                    this.activo.a_corriente.cuenta_id2 = \"\";\r\n                    this.activo.a_corriente.saldo2 = \"\";\r\n                    this.activo.a_corriente.double = false;\r\n                    this.cambioActivo();\r\n                }\r\n            }\r\n            //     if(this.activo.a_corriente.cuenta_id ==''){\r\n            //     toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n            //       \"timeOut\": \"3000\"\r\n            //   });\r\n            //   }else {\r\n            //     let id = this.activo.a_corriente.cuenta_id;\r\n            //    let verificar = this.verificarCuenta(id);\r\n            //        if (verificar == true) {\r\n            //          toastr.error(\"No puedes agregar una cuenta repetida\", \"SmartLearn\", {\r\n            //           \"timeOut\": \"3000\"\r\n            //           });\r\n            //        }else{\r\n            //       let nombre                         = funciones.obtenerNombre(id);\r\n            //       let index                          = this.registro.a_corriente;\r\n            //       this.a_corrientes[index].cuenta_id = this.activo.a_corriente.cuenta_id;\r\n            //       this.a_corrientes[index].cuenta    = nombre;\r\n            //       this.a_corrientes[index].saldo     = this.activo.a_corriente.saldo;\r\n            //       this.activo.a_corriente.cuenta_id  =''\r\n            //       this.activo.a_corriente.saldo      =''\r\n            //       this.activo.a_corriente.edit       = false;\r\n            //       this.registro.a_corriente          = '';\r\n            //     this.cambioActivo();\r\n            //     }\r\n            // }\r\n        },\r\n        cancelarEdicionActivoC() {\r\n            this.activo.a_corriente.cuenta_id = \"\";\r\n            this.activo.a_corriente.saldo = \"\";\r\n            this.activo.a_corriente.edit = false;\r\n            this.activo.a_corriente.double = false;\r\n            this.activo.a_corriente.cuenta_id2 = \"\";\r\n            this.activo.a_corriente.saldo2 = \"\";\r\n        },\r\n        DoubleCouenta() {\r\n            this.activo.a_nocorriente.double = true;\r\n        },\r\n        DoubleCouentaC() {\r\n            this.activo.a_nocorriente.double = false;\r\n        },\r\n        DoubleAcorriente() {\r\n            this.activo.a_corriente.double = true;\r\n        },\r\n        DoubleAcorrienteC() {\r\n            this.activo.a_corriente.double = false;\r\n        },\r\n        agregarActivoNoCorriente() {\r\n            if (this.activo.a_nocorriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.activo.a_nocorriente.cuenta_id;\r\n                let id2 = this.activo.a_nocorriente.cuenta_id2;\r\n                if (id2 !== \"\") {\r\n                    let verificar2 = this.verificarCuenta(id2);\r\n                    if (verificar2 == true) {\r\n                        toastr.error(\r\n                            \"No puedes agregar una cuenta repetida\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                        return;\r\n                    }\r\n                }\r\n                let verificar = this.verificarCuenta(id);\r\n\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n\r\n                    if (id2 != \"\" && id2 != undefined) {\r\n                        this.activo.a_nocorriente.nombre1 = funciones.obtenerNombre(\r\n                            id2\r\n                        );\r\n                        console.log(\"HAS ENTRADO AQUI\");\r\n                        let resta =\r\n                            Number(this.activo.a_nocorriente.saldo) -\r\n                            Number(this.activo.a_nocorriente.saldo2);\r\n                        this.activo.a_nocorriente.total_saldo2 = resta;\r\n\r\n                        let a_nocorriente = {\r\n                            resta: \"si\",\r\n                            cuenta_id: this.activo.a_nocorriente.cuenta_id,\r\n                            cuenta: nombre,\r\n                            saldo: this.activo.a_nocorriente.saldo,\r\n                            cuenta2: this.activo.a_nocorriente.nombre1,\r\n                            total_saldo: this.activo.a_nocorriente.total_saldo,\r\n                            cuenta_id2: this.activo.a_nocorriente.cuenta_id2,\r\n                            saldo2: this.activo.a_nocorriente.saldo2,\r\n                            total_saldo2: this.activo.a_nocorriente.total_saldo2\r\n                        };\r\n                        this.a_nocorrientes.push(a_nocorriente);\r\n                        toastr.success(\r\n                            \"Cuenta agregada correctamente\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                    } else {\r\n                        let a_nocorriente = {\r\n                            resta: \"no\",\r\n                            cuenta_id: this.activo.a_nocorriente.cuenta_id,\r\n                            cuenta: nombre,\r\n                            saldo: \"\",\r\n                            cuenta2: \"\",\r\n                            saldo2: \"\",\r\n                            total_saldo: this.activo.a_nocorriente.saldo,\r\n                            cuenta_id2: this.activo.a_nocorriente.cuenta_id2,\r\n                            total_saldo2: this.activo.a_nocorriente.total_saldo2\r\n                        };\r\n                        this.a_nocorrientes.push(a_nocorriente);\r\n                        toastr.success(\r\n                            \"Cuenta agregada correctamente\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                    }\r\n                    this.activo.a_nocorriente.cuenta_id = \"\";\r\n                    this.activo.a_nocorriente.saldo = \"\";\r\n                    this.activo.a_nocorriente.cuenta_id2 = \"\";\r\n                    this.activo.a_nocorriente.saldo2 = \"\";\r\n                    this.activo.a_nocorriente.total_saldo = \"\";\r\n                    this.activo.a_nocorriente.total_saldo2 = \"\";\r\n                    this.activo.a_nocorriente.double = false;\r\n\r\n                    this.cambioActivoNo();\r\n                }\r\n            }\r\n        },\r\n\r\n        //EDITAR ELEMENTOS DE UN ARRAY\r\n        editNoAcorriente(index) {\r\n            this.activo.a_nocorriente.edit = true;\r\n            this.registro.a_nocorriente = index;\r\n            this.bi.const_id = this.a_nocorrientes[index].cuenta_id;\r\n            this.bi.const_id2 = this.a_nocorrientes[index].cuenta_id2;\r\n            this.activo.a_nocorriente.cuenta_id = this.a_nocorrientes[\r\n                index\r\n            ].cuenta_id;\r\n\r\n            if (\r\n                this.a_nocorrientes[index].saldo != \"\" &&\r\n                this.a_nocorrientes[index].saldo != undefined\r\n            ) {\r\n                this.activo.a_nocorriente.saldo = this.a_nocorrientes[\r\n                    index\r\n                ].saldo;\r\n            } else {\r\n                this.activo.a_nocorriente.saldo = this.a_nocorrientes[\r\n                    index\r\n                ].total_saldo;\r\n            }\r\n\r\n            // this.activo.a_nocorriente.saldo      = this.a_nocorrientes[index].saldo;\r\n            this.activo.a_nocorriente.cuenta_id2 = this.a_nocorrientes[\r\n                index\r\n            ].cuenta_id2;\r\n            this.activo.a_nocorriente.saldo2 = this.a_nocorrientes[\r\n                index\r\n            ].saldo2;\r\n            if (this.a_nocorrientes[index].resta == \"si\") {\r\n                this.activo.a_nocorriente.double = true;\r\n            }\r\n            $(\"#bg-transaccion\").modal(\"show\");\r\n            $(\"#nav-bg-activo-no-corriente-tab\").tab(\"show\");\r\n        },\r\n        actualizarActivoNC() {\r\n            if (this.activo.a_nocorriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.activo.a_nocorriente.cuenta_id;\r\n                let id2 = this.activo.a_nocorriente.cuenta_id2;\r\n\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    let index = this.registro.a_nocorriente;\r\n                    this.a_nocorrientes[\r\n                        index\r\n                    ].cuenta_id = this.activo.a_nocorriente.cuenta_id;\r\n                    this.a_nocorrientes[index].cuenta = nombre;\r\n                    if (id2 !== \"\" && id2 !== undefined) {\r\n                        let verificar2 = this.verificarCuentaAct(id2);\r\n                        if (verificar2 == true) {\r\n                            toastr.error(\r\n                                \"No puedes agregar una cuenta repetida\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            return;\r\n                        }\r\n                        let nombre2 = funciones.obtenerNombre(id2);\r\n                        this.a_nocorrientes[\r\n                            index\r\n                        ].cuenta_id2 = this.activo.a_nocorriente.cuenta_id2;\r\n                        this.a_nocorrientes[index].cuenta2 = nombre2;\r\n                        this.a_nocorrientes[\r\n                            index\r\n                        ].saldo = this.activo.a_nocorriente.saldo;\r\n\r\n                        this.a_nocorrientes[\r\n                            index\r\n                        ].saldo2 = this.activo.a_nocorriente.saldo2;\r\n                        this.a_nocorrientes[index].total_saldo = \"\";\r\n                        this.a_nocorrientes[index].resta = \"si\";\r\n\r\n                        let resta =\r\n                            Number(this.activo.a_nocorriente.saldo) -\r\n                            Number(this.activo.a_nocorriente.saldo2);\r\n\r\n                        this.a_nocorrientes[index].total_saldo2 = resta;\r\n\r\n                        console.log(resta);\r\n                    } else {\r\n                        this.a_nocorrientes[index].cuenta_id2 = \"\";\r\n                        this.a_nocorrientes[index].cuenta2 = \"\";\r\n                        this.a_nocorrientes[index].saldo2 = \"\";\r\n                        this.a_nocorrientes[index].resta = \"no\";\r\n\r\n                        this.a_nocorrientes[index].total_saldo2 = \"\";\r\n                        this.a_nocorrientes[index].saldo = \"\";\r\n                        this.a_nocorrientes[\r\n                            index\r\n                        ].total_saldo = this.activo.a_nocorriente.saldo;\r\n                    }\r\n                    this.activo.a_nocorriente.cuenta_id = \"\";\r\n                    this.activo.a_nocorriente.saldo = \"\";\r\n                    this.activo.a_nocorriente.edit = false;\r\n                    this.registro.a_nocorriente = \"\";\r\n                    this.activo.a_nocorriente.cuenta_id2 = \"\";\r\n                    this.activo.a_nocorriente.saldo2 = \"\";\r\n                    this.activo.a_nocorriente.double = false;\r\n\r\n                    this.cambioActivoNo();\r\n                }\r\n            }\r\n        },\r\n        cancelarEdicionActivoNC() {\r\n            this.activo.a_nocorriente.cuenta_id = \"\";\r\n            this.activo.a_nocorriente.saldo = \"\";\r\n            this.activo.a_nocorriente.edit = false;\r\n            this.activo.a_nocorriente.double = false;\r\n            this.activo.a_nocorriente.cuenta_id2 = \"\";\r\n            this.activo.a_nocorriente.saldo2 = \"\";\r\n        },\r\n\r\n        agregarPasivoCorriente() {\r\n            if (this.pasivo.p_corriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.pasivo.p_corriente.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    var p_corriente = {\r\n                        cuenta_id: this.pasivo.p_corriente.cuenta_id,\r\n                        cuenta: nombre,\r\n                        saldo: this.pasivo.p_corriente.saldo\r\n                    };\r\n                    this.p_corrientes.push(p_corriente);\r\n                    toastr.success(\r\n                        \"Cuenta agregada correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.pasivo.p_corriente.cuenta_id = \"\";\r\n                    this.pasivo.p_corriente.saldo = \"\";\r\n                    this.cambioPasivo();\r\n                }\r\n            }\r\n        },\r\n\r\n        //EDITAR ELEMENTOS DE UN ARRAY\r\n        editPcorriente(index) {\r\n            this.pasivo.p_corriente.edit = true;\r\n            this.registro.p_corriente = index;\r\n            this.bi.const_id = this.p_corrientes[index].cuenta_id;\r\n            this.pasivo.p_corriente.cuenta_id = this.p_corrientes[\r\n                index\r\n            ].cuenta_id;\r\n            this.pasivo.p_corriente.saldo = this.p_corrientes[index].saldo;\r\n            $(\"#bg-transaccion\").modal(\"show\");\r\n            $(\"#nav-bg-pasivo-corriente-tab\").tab(\"show\");\r\n        },\r\n        actualizarPasivoC() {\r\n            if (this.pasivo.p_corriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.pasivo.p_corriente.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    let index = this.registro.p_corriente;\r\n                    this.p_corrientes[\r\n                        index\r\n                    ].cuenta_id = this.pasivo.p_corriente.cuenta_id;\r\n                    this.p_corrientes[index].cuenta = nombre;\r\n                    this.p_corrientes[\r\n                        index\r\n                    ].saldo = this.pasivo.p_corriente.saldo;\r\n                    this.pasivo.p_corriente.cuenta_id = \"\";\r\n                    this.pasivo.p_corriente.saldo = \"\";\r\n                    this.pasivo.p_corriente.edit = false;\r\n                    this.registro.p_corriente = \"\";\r\n                    this.cambioPasivo();\r\n                }\r\n            }\r\n        },\r\n        cancelarEdicionPcorriente() {\r\n            this.pasivo.p_corriente.cuenta_id = \"\";\r\n            this.pasivo.p_corriente.saldo = \"\";\r\n            this.pasivo.p_corriente.edit = false;\r\n        },\r\n\r\n        agregarPasivoNoCorriente() {\r\n            if (this.pasivo.p_nocorriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.pasivo.p_nocorriente.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    var p_nocorriente = {\r\n                        cuenta_id: this.pasivo.p_nocorriente.cuenta_id,\r\n                        cuenta: nombre,\r\n                        saldo: this.pasivo.p_nocorriente.saldo\r\n                    };\r\n                    this.p_nocorrientes.push(p_nocorriente);\r\n                    toastr.success(\r\n                        \"Cuenta agregada correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.pasivo.p_nocorriente.cuenta_id = \"\";\r\n                    this.pasivo.p_nocorriente.saldo = \"\";\r\n                    this.cambioPasivoNo();\r\n                }\r\n            }\r\n        },\r\n\r\n        //EDITAR ELEMENTOS DE UN ARRAY\r\n        editPNocorriente(index) {\r\n            this.pasivo.p_nocorriente.edit = true;\r\n            this.registro.p_nocorriente = index;\r\n            this.bi.const_id = this.p_nocorrientes[index].cuenta_id;\r\n            this.pasivo.p_nocorriente.cuenta_id = this.p_nocorrientes[\r\n                index\r\n            ].cuenta_id;\r\n            this.pasivo.p_nocorriente.saldo = this.p_nocorrientes[index].saldo;\r\n            $(\"#bg-transaccion\").modal(\"show\");\r\n            $(\"#nav-bg-pasivo-no-corriente-tab\").tab(\"show\");\r\n        },\r\n        actualizarPasivoNC() {\r\n            if (this.pasivo.p_nocorriente.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.pasivo.p_nocorriente.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    let index = this.registro.p_nocorriente;\r\n                    this.p_nocorrientes[\r\n                        index\r\n                    ].cuenta_id = this.pasivo.p_nocorriente.cuenta_id;\r\n                    this.p_nocorrientes[index].cuenta = nombre;\r\n                    this.p_nocorrientes[\r\n                        index\r\n                    ].saldo = this.pasivo.p_nocorriente.saldo;\r\n                    this.pasivo.p_nocorriente.cuenta_id = \"\";\r\n                    this.pasivo.p_nocorriente.saldo = \"\";\r\n                    this.pasivo.p_nocorriente.edit = false;\r\n                    this.registro.p_nocorriente = \"\";\r\n                    this.cambioPasivoNo();\r\n                }\r\n            }\r\n        },\r\n        cancelarEdicionPNocorriente() {\r\n            this.pasivo.p_nocorriente.cuenta_id = \"\";\r\n            this.pasivo.p_nocorriente.saldo = \"\";\r\n            this.pasivo.p_nocorriente.edit = false;\r\n        },\r\n        agregarPatrimonio() {\r\n            if (this.patrimonio.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.patrimonio.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    var patrimonio = {\r\n                        cuenta_id: this.patrimonio.cuenta_id,\r\n                        cuenta: nombre,\r\n                        saldo: this.patrimonio.saldo\r\n                    };\r\n                    this.patrimonios.push(patrimonio);\r\n                    toastr.success(\r\n                        \"Cuenta agregada correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.patrimonio.cuenta_id = \"\";\r\n                    this.patrimonio.saldo = \"\";\r\n                    this.cambioPatrimonio();\r\n                }\r\n            }\r\n        },\r\n\r\n        //EDITAR ELEMENTOS DE UN ARRAY\r\n        editPatrimonio(index) {\r\n            this.patrimonio.edit = true;\r\n            this.registro.patrimonio = index;\r\n            this.bi.const_id = this.patrimonios[index].cuenta_id;\r\n            this.patrimonio.cuenta_id = this.patrimonios[index].cuenta_id;\r\n            this.patrimonio.saldo = this.patrimonios[index].saldo;\r\n            $(\"#bg-transaccion\").modal(\"show\");\r\n            $(\"#nav-bg-patrimonio-tab\").tab(\"show\");\r\n        },\r\n        actualizarPatrimonio() {\r\n            if (this.patrimonio.cuenta_id == \"\") {\r\n                toastr.error(\"El campo Cuenta es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.patrimonio.cuenta_id;\r\n                let verificar = this.verificarCuenta(id);\r\n                if (verificar == true) {\r\n                    toastr.error(\r\n                        \"No puedes agregar una cuenta repetida\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let nombre = funciones.obtenerNombre(id);\r\n                    let index = this.registro.patrimonio;\r\n                    this.patrimonios[\r\n                        index\r\n                    ].cuenta_id = this.patrimonio.cuenta_id;\r\n                    this.patrimonios[index].cuenta = nombre;\r\n                    this.patrimonios[index].saldo = this.patrimonio.saldo;\r\n                    this.patrimonio.cuenta_id = \"\";\r\n                    this.patrimonio.saldo = \"\";\r\n                    this.patrimonio.edit = false;\r\n                    this.registro.patrimonio = \"\";\r\n                    this.cambioPatrimonio();\r\n                }\r\n            }\r\n        },\r\n        cancelarEdicionPatrimonio() {\r\n            this.patrimonio.cuenta_id = \"\";\r\n            this.patrimonio.saldo = \"\";\r\n            this.patrimonio.edit = false;\r\n        },\r\n\r\n        verificarCuenta(id) {\r\n            if (Number(this.bi.const_id) === id) {\r\n                return false;\r\n            } else if (Number(this.bi.const_id2) === id) {\r\n                return false;\r\n            }\r\n            let ac = this.a_corrientes.filter(\r\n                x => x.cuenta_id == id || x.cuenta_id2 == id\r\n            );\r\n            let anc = this.a_nocorrientes.filter(\r\n                x => x.cuenta_id == id || x.cuenta_id2 == id\r\n            );\r\n            let pc = this.p_corrientes.filter(\r\n                x => x.cuenta_id == id || x.cuenta_id2 == id\r\n            );\r\n            let pnc = this.a_nocorrientes.filter(\r\n                x => x.cuenta_id == id || x.cuenta_id2 == id\r\n            );\r\n            let p = this.patrimonios.filter(\r\n                x => x.cuenta_id == id || x.cuenta_id2 == id\r\n            );\r\n            if (ac.length > 0) {\r\n                return true;\r\n            } else if (anc.length > 0) {\r\n                return true;\r\n            } else if (pc.length > 0) {\r\n                return true;\r\n            } else if (pnc.length > 0) {\r\n                return true;\r\n            } else if (p.length > 0) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n        verificarCuentaAct(id) {\r\n            if (this.bi.const_id == this.bi.const_id2) {\r\n                return true;\r\n            }\r\n            if (Number(this.bi.const_id) === id) {\r\n                return false;\r\n            } else if (Number(this.bi.const_id2) === id) {\r\n                return false;\r\n            }\r\n            let ac = this.a_corrientes.filter(\r\n                x => x.cuenta_id == id || x.cuenta_id2 == id\r\n            );\r\n            let anc = this.a_nocorrientes.filter(\r\n                x => x.cuenta_id == id || x.cuenta_id2 == id\r\n            );\r\n            let pc = this.p_corrientes.filter(\r\n                x => x.cuenta_id == id || x.cuenta_id2 == id\r\n            );\r\n            let pnc = this.a_nocorrientes.filter(\r\n                x => x.cuenta_id == id || x.cuenta_id2 == id\r\n            );\r\n            let p = this.patrimonios.filter(\r\n                x => x.cuenta_id == id || x.cuenta_id2 == id\r\n            );\r\n            if (ac.length > 0) {\r\n                return true;\r\n            } else if (anc.length > 0) {\r\n                return true;\r\n            } else if (pc.length > 0) {\r\n                return true;\r\n            } else if (pnc.length > 0) {\r\n                return true;\r\n            } else if (p.length > 0) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n\r\n        //ACTUALIZAR SUMAS DE PASIVOS, ACTIVOS Y PATRIMONIO\r\n        cambioActivo() {\r\n            this.b_initotal.t_a_corriente = 0;\r\n            var t_activo = this.a_corrientes; //CARGAR EL ARRAY DE LOS ACTIVOS\r\n            //console.log(t_activo)\r\n            var total = 0;\r\n            t_activo.forEach(function (obj) {\r\n                //RECORRER ESE ARRAY\r\n                total += Number(obj.total_saldo); //SUMAR EL SALDO DE CADA CUENTA EN EL ARRAY UNA Y OTRA VEZ\r\n            });\r\n            t_activo.forEach(function (obj2) {\r\n                total += Number(obj2.total_saldo2);\r\n            });\r\n            //console.log(total);\r\n            this.b_initotal.t_a_corriente = total; //IGUALAR LA VARIABLE QUE CONTIENE LA SUMA TOTAL CON LA SUMA REALIZADA\r\n            this.TotalActivo();\r\n        },\r\n        cambioActivoNo() {\r\n            this.b_initotal.t_a_nocorriente = 0;\r\n            var t_noactivo = this.a_nocorrientes;\r\n            //console.log(t_noactivo)\r\n            var total = 0;\r\n\r\n            t_noactivo.forEach(function (obj) {\r\n                total += Number(obj.total_saldo);\r\n            });\r\n\r\n            t_noactivo.forEach(function (obj2) {\r\n                total += Number(obj2.total_saldo2);\r\n            });\r\n            console.log(total);\r\n            this.b_initotal.t_a_nocorriente = total;\r\n            this.TotalActivo();\r\n        },\r\n        cambioPasivo() {\r\n            this.b_initotal.t_p_corriente = 0;\r\n            var t_pasivo = this.p_corrientes;\r\n            //console.log(t_pasivo)\r\n            var total = 0;\r\n            t_pasivo.forEach(function (obj) {\r\n                total += Number(obj.saldo);\r\n            });\r\n            //console.log(total);\r\n            this.b_initotal.t_p_corriente = total;\r\n            this.TotalPasivo();\r\n        },\r\n        cambioPasivoNo() {\r\n            this.b_initotal.t_p_no_corriente = 0;\r\n            var t_nopasivo = this.p_nocorrientes;\r\n            //console.log(t_nopasivo)\r\n            var total = 0;\r\n            t_nopasivo.forEach(function (obj) {\r\n                total += Number(obj.saldo);\r\n            });\r\n            //console.log(total);\r\n            this.b_initotal.t_p_no_corriente = total;\r\n            this.TotalPasivo();\r\n        },\r\n        cambioPatrimonio() {\r\n            this.b_initotal.t_patrimonio = 0;\r\n            var t_patrimo = this.patrimonios;\r\n            //console.log(t_patrimo)\r\n            var total = 0;\r\n            t_patrimo.forEach(function (obj) {\r\n                total += Number(obj.saldo);\r\n            });\r\n            //console.log(total);\r\n            this.b_initotal.t_patrimonio = total;\r\n        },\r\n\r\n        //TOTAL GENERAL DE ACTIVO, PASIVO Y PATRIMONIO\r\n        TotalActivo() {\r\n            var activo =\r\n                this.b_initotal.t_a_corriente + this.b_initotal.t_a_nocorriente;\r\n            //console.log(activo);\r\n            this.total_balance_inicial.t_activo = activo;\r\n        },\r\n        TotalPasivo() {\r\n            var pasivo =\r\n                this.b_initotal.t_p_corriente +\r\n                this.b_initotal.t_p_no_corriente;\r\n            //onsole.log(pasivo);\r\n            this.total_balance_inicial.t_pasivo = pasivo;\r\n        },\r\n        totalPasivoPatrimonio() {\r\n            $(\"#pasivo_patrimonio\").modal(\"hide\");\r\n            toastr.success(\"Total Agregado Correctamente\", \"SmartLearn\", {\r\n                timeOut: \"3000\"\r\n            });\r\n        },\r\n        //GUARDAR BALANCE INICIAL\r\n        guardarBalanceGeneral: function () {\r\n            if (this.balance_general.nombre.trim() === \"\") {\r\n                toastr.error(\"Campo Nombre es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.balance_general.fecha.trim() === \"\") {\r\n                toastr.error(\"Campo Fecha es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.a_corrientes.length == 0) {\r\n                toastr.error(\r\n                    \"Debe haber al menos un Activo Corriente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.a_nocorrientes.length == 0) {\r\n                toastr.error(\r\n                    \"Debe haber al menos un Activo No Corriente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.p_corrientes.length == 0) {\r\n                toastr.error(\r\n                    \"Debe haber al menos un Pasivo Corriente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.p_nocorrientes.length == 0) {\r\n                toastr.error(\r\n                    \"Debe haber al menos un Pasivo No Corriente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.patrimonios.length == 0) {\r\n                toastr.error(\r\n                    \"Debe haber al menos un Patrimonio\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (\r\n                this.total_balance_inicial.t_patrimonio_pasivo.trim() === \"\"\r\n            ) {\r\n                toastr.error(\r\n                    \"Debes calcular el Total del Pasivo + Patrimonio\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                var _this = this;\r\n                var url = \"/sistema/admin/taller/balance-general\";\r\n                axios\r\n                    .post(url, {\r\n                        id: _this.id_taller,\r\n                        nombre: _this.balance_general.nombre,\r\n                        fecha: _this.balance_general.fecha,\r\n                        a_corriente: _this.a_corrientes,\r\n                        a_nocorriente: _this.a_nocorrientes,\r\n                        p_corriente: _this.p_corrientes,\r\n                        p_nocorriente: _this.p_nocorrientes,\r\n                        patrimonio: _this.patrimonios,\r\n                        totales: _this.b_initotal,\r\n                        total_balance_inicial: _this.total_balance_inicial,\r\n                        t_patrimonio:\r\n                            _this.total_balance_inicial.t_patrimonio_pasivo\r\n                    })\r\n                    .then(response => {\r\n                        if (response.data.success == true) {\r\n                            toastr.success(\r\n                                response.data.message,\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            _this.cambioActivo();\r\n                            _this.cambioActivoNo();\r\n                            _this.cambioPasivo();\r\n                            _this.cambioPasivoNo();\r\n                            _this.cambioPatrimonio();\r\n                            console.log(response.data);\r\n                            asientos_cierre.obtenerBalance();\r\n                        } else {\r\n                            toastr.success(\r\n                                response.data.message,\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            _this.cambioActivo();\r\n                            _this.cambioActivoNo();\r\n                            _this.cambioPasivo();\r\n                            _this.cambioPasivoNo();\r\n                            _this.cambioPatrimonio();\r\n                            asientos_cierre.obtenerBalance();\r\n                            // diario.obtenerBalanceInicial();\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error.response.data.message);\r\n                    });\r\n            }\r\n        },\r\n        obtenerBalance: function () {\r\n            var _this = this;\r\n            var url = \"/sistema/admin/taller/obtener-balance-general\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        toastr.success(response.data.message, \"SmartLearn\", {\r\n                            timeOut: \"3000\"\r\n                        });\r\n                        _this.balance_general.nombre = response.data.nombre;\r\n                        _this.balance_general.fecha = response.data.fecha;\r\n                        _this.a_corrientes = response.data.a_corriente;\r\n                        _this.a_nocorrientes = response.data.a_nocorriente;\r\n                        _this.p_corrientes = response.data.p_corriente;\r\n                        _this.p_nocorrientes = response.data.p_nocorriente;\r\n                        _this.patrimonios = response.data.patrimonios;\r\n                        _this.total_balance_inicial.t_patrimonio_pasivo =\r\n                            response.data.total_pasivo_patrimonio;\r\n                        _this.cambioActivo();\r\n                        _this.cambioActivoNo();\r\n                        _this.cambioPasivo();\r\n                        _this.cambioPasivoNo();\r\n                        _this.cambioPatrimonio();\r\n                        //diario.obtenerBalanceInicial();\r\n                        console.log(response.data);\r\n                    } else {\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        }\r\n    }\r\n});\r\n\r\nconst asientos_cierre = new Vue({\r\n    el: \"#asientos_cierre\",\r\n    data: {\r\n        id_taller: taller,\r\n        producto_id: 1,\r\n        nombre: \"\",\r\n        fechabalance: \"\",\r\n        complete: false,\r\n        options: objeto,\r\n        cuentas: cuentas,\r\n        balanceInicial: {\r\n            debe: [],\r\n            haber: [],\r\n            totaldebe: 0,\r\n            totalhaber: 0\r\n        },\r\n        kardex: [],\r\n        nombre_kardex: \"\",\r\n        producto_kardex: \"\",\r\n        registros: [],\r\n        eliminar: {\r\n            index: \"\"\r\n        },\r\n        porcentajes: {\r\n            porcentaje: 0,\r\n            index_cuenta: \"\",\r\n            tipo: \"\",\r\n            cantidad: 0\r\n        },\r\n        registerindex: 0,\r\n        cuentaindex: 0,\r\n        diarios: {\r\n            debe: [],\r\n            haber: [],\r\n            comentario: \"\",\r\n            fecha: \"\",\r\n            tipo: \"\"\r\n        },\r\n        edit: {\r\n            debe: [],\r\n            haber: [],\r\n            comentario: \"\"\r\n        },\r\n        diario: {\r\n            debe: {\r\n                edit: false,\r\n                index: \"\",\r\n                fecha: \"\",\r\n                nom_cuenta: \"\",\r\n                saldo: \"\"\r\n            },\r\n            haber: {\r\n                edit: false,\r\n                index: \"\",\r\n                fecha: \"\",\r\n                nom_cuenta: \"\",\r\n                saldo: \"\"\r\n            },\r\n            comentario: \"\"\r\n        },\r\n        pasan: {\r\n            debe: 0,\r\n            haber: 0\r\n        },\r\n        total: {\r\n            debe: 0,\r\n            haber: 0\r\n        },\r\n        update: false,\r\n        dato: [],\r\n\r\n        estadoresultado: {\r\n            nombre_e_resultado: \"\",\r\n            fecha_e_resultado: \"\",\r\n            ingresos: [],\r\n            gastos: [],\r\n            utilidades: [],\r\n            utilidad: \"\",\r\n            venta_e_resultado: \"\",\r\n            costo_venta_e_resultado: \"\",\r\n            totales: {\r\n                ingreso: \"\",\r\n                gasto: \"\",\r\n                utilidad_bruta_ventas_e_resultado: \"\",\r\n                utilidad_ejercicio_e_resultado: \"\",\r\n                utilidad_liquida_e_resultado: \"\"\r\n            }\r\n        },\r\n        balance_general: {\r\n            a_corrientes: [],\r\n            a_nocorrientes: [],\r\n            p_corrientes: [],\r\n            p_nocorrientes: [],\r\n            patrimonios: [],\r\n            total_balance_inicial: {\r\n                t_activo: \"\",\r\n                t_pasivo: \"\",\r\n                t_patrimonio: \"\",\r\n                t_patrimonio_pasivo: \"\"\r\n            }\r\n        },\r\n        hojatrabajo: [],\r\n        nombre_hoja: \"\",\r\n        b_initotal: {\r\n            t_a_corriente: \"\", //Total de activo corriente\r\n            t_a_nocorriente: \"\", //Total de activo no corriente\r\n            t_p_corriente: \"\", //Total de pasivo corriente\r\n            t_p_no_corriente: \"\", //Total de pasivo no corriente\r\n            t_patrimonio: \"\" //Total de patrimonio\r\n        }\r\n    },\r\n    mounted: function () {\r\n        this.obtenerAsientoCierre();\r\n        this.obtenerHojita();\r\n        // this.obtenerBalance();\r\n    },\r\n\r\n    methods: {\r\n        obtenerHojita: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/hoja-obtener-trabajo\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        this.hojatrabajo = response.data.hojatrabajo;\r\n                        this.nombre_hoja = response.data.nombre;\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        },\r\n        calculadora() {\r\n            let propsData = {\r\n                title: \"Called from basic js\",\r\n                noteProp: [\"Note number 1\", \"Note number 2\"]\r\n            };\r\n            let component = \"example-component\";\r\n            funciones.VueSweetAlert2(component, propsData);\r\n        },\r\n        obtenerEstadoResultado: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/estado-obtener-resultado\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        _this.estadoresultado.nombre_e_resultado =\r\n                            response.data.estadoresultado.nombre;\r\n                        _this.estadoresultado.fecha_e_resultado =\r\n                            response.data.estadoresultado.fecha;\r\n                        _this.estadoresultado.ingresos = response.data.ingresos;\r\n                        _this.estadoresultado.totales.ingreso =\r\n                            response.data.estadoresultado.total_ingresos;\r\n                        _this.estadoresultado.totales.gasto =\r\n                            response.data.estadoresultado.total_gastos;\r\n                        _this.estadoresultado.gastos = response.data.gastos;\r\n                        _this.estadoresultado.utilidades =\r\n                            response.data.utilidades;\r\n                        _this.estadoresultado.utilidad =\r\n                            response.data.estadoresultado.utilidad;\r\n                        _this.estadoresultado.venta_e_resultado =\r\n                            response.data.estadoresultado.venta;\r\n                        _this.estadoresultado.costo_venta_e_resultado =\r\n                            response.data.estadoresultado.costo_venta;\r\n                        _this.estadoresultado.totales.utilidad_bruta_ventas_e_resultado =\r\n                            response.data.estadoresultado.utilidad_bruta_ventas;\r\n                        _this.estadoresultado.totales.utilidad_ejercicio_e_resultado =\r\n                            response.data.estadoresultado.utilidad_ejercicio;\r\n                        _this.estadoresultado.totales.utilidad_liquida_e_resultado =\r\n                            response.data.estadoresultado.utilidad_liquida;\r\n                        _this.estadoresultado.totales.utilidad_neta_o =\r\n                            response.data.estadoresultado.utilidad_neta_o;\r\n\r\n                        console.log(response.data.estadoresultado);\r\n                        //   this.totale();\r\n                        // this.subtotal();\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        },\r\n        limpiar() {\r\n            this.update = false;\r\n            this.diarios.debe = [];\r\n            this.diarios.haber = [];\r\n            this.diarios.fecha = [];\r\n            this.diarios.comentario = [];\r\n            this.diarios.ajustado = false;\r\n            this.diario.haber.fecha = \"\";\r\n            this.diario.haber.nom_cuenta = \"\";\r\n            this.diario.haber.saldo = \"\";\r\n            this.diario.haber.edit = false;\r\n            this.diario.debe.fecha = \"\";\r\n            this.diario.debe.nom_cuenta = \"\";\r\n            this.diario.debe.saldo = \"\";\r\n            this.diario.debe.edit = false;\r\n        },\r\n        obtenerBalance: function () {\r\n            var _this = this;\r\n            var url = \"/sistema/admin/taller/obtener-balance-general\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        toastr.success(response.data.message, \"SmartLearn\", {\r\n                            timeOut: \"3000\"\r\n                        });\r\n                        _this.balance_general.nombre = response.data.nombre;\r\n                        _this.balance_general.fecha = response.data.fecha;\r\n                        _this.balance_general.a_corrientes =\r\n                            response.data.a_corriente;\r\n                        _this.balance_general.a_nocorrientes =\r\n                            response.data.a_nocorriente;\r\n                        _this.balance_general.p_corrientes =\r\n                            response.data.p_corriente;\r\n                        _this.balance_general.p_nocorrientes =\r\n                            response.data.p_nocorriente;\r\n                        _this.balance_general.patrimonios =\r\n                            response.data.patrimonios;\r\n                        _this.balance_general.total_balance_inicial.t_patrimonio_pasivo =\r\n                            response.data.total_pasivo_patrimonio;\r\n                        _this.balance_general.total_balance_inicial.t_pasivo =\r\n                            response.data.bgneral.t_pasivo;\r\n                        _this.balance_general.total_balance_inicial.t_activo =\r\n                            response.data.bgneral.t_activo;\r\n                        _this.balance_general.total_balance_inicial.t_patrimonio =\r\n                            response.data.bgneral.t_patrimonio;\r\n                        _this.b_initotal.t_a_corriente =\r\n                            response.data.bgneral.t_a_corriente;\r\n                        _this.b_initotal.t_a_nocorriente =\r\n                            response.data.bgneral.t_a_nocorriente;\r\n                        _this.b_initotal.t_p_corriente =\r\n                            response.data.bgneral.t_p_corriente;\r\n                        _this.b_initotal.t_p_no_corriente =\r\n                            response.data.bgneral.t_p_no_corriente;\r\n                        _this.b_initotal.t_patrimonio =\r\n                            response.data.bgneral.t_patrimonio;\r\n                    } else {\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        },\r\n        formatoFecha(fecha) {\r\n            if (fecha !== null) {\r\n                let date = fecha\r\n                    .split(\"-\")\r\n                    .reverse()\r\n                    .join(\"-\");\r\n                return date;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        decimales(saldo) {\r\n            if (saldo !== null) {\r\n                let total = Number(saldo).toFixed(2);\r\n                return total;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        abrirTransaccion() {\r\n            this.update = false;\r\n            this.diarios.debe = [];\r\n            this.diarios.haber = [];\r\n            this.diarios.fecha = [];\r\n            this.diarios.comentario = [];\r\n            this.diarios.ajustado = false;\r\n            this.diario.haber.fecha = \"\";\r\n            this.diario.haber.nom_cuenta = \"\";\r\n            this.diario.haber.saldo = \"\";\r\n            this.diario.haber.edit = false;\r\n            this.diario.debe.fecha = \"\";\r\n            this.diario.debe.nom_cuenta = \"\";\r\n            this.diario.debe.saldo = \"\";\r\n            this.diario.debe.edit = false;\r\n\r\n            this.limpiar();\r\n            $(\"#as-transaccion\").modal(\"show\");\r\n            $(\"#comentario-asiento-tab\").tab(\"show\");\r\n        },\r\n        llamarDiario() {\r\n            $(\"#list-mayor-general-list\").tab(\"show\");\r\n            $(\"#mg-transaccion\").modal(\"show\");\r\n        },\r\n        valorPorcentual(porcentaje, valor) {\r\n            // let porcentaje = this.cuentas[index].porcentaje;\r\n            let total = Number((valor * porcentaje) / 100);\r\n            return total.toFixed(2);\r\n        },\r\n\r\n        agregarHaber() {\r\n            if (this.diario.haber.nom_cuenta === \"\") {\r\n                toastr.error(\"No has registrado una cuenta\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.diario.haber.nom_cuenta;\r\n                let cuenta = this.cuentas.filter(x => x.id == id);\r\n                let valor = this.diario.haber.saldo;\r\n\r\n                // if (cuenta[0].porcentual == 1) {\r\n                //       let calculo = this.valorPorcentual(cuenta[0].porcentaje, valor);\r\n                //       let haber = {cuenta_id: cuenta[0].id, fecha:this.diario.haber.fecha, nom_cuenta: cuenta[0].nombre, saldo:calculo};\r\n                //       this.diarios.haber.push(haber);//añadimos el la variable persona al array\r\n                // }else{\r\n                let haber = {\r\n                    cuenta_id: cuenta[0].id,\r\n                    fecha: this.diario.haber.fecha,\r\n                    nom_cuenta: cuenta[0].nombre,\r\n                    saldo: this.diario.haber.saldo\r\n                };\r\n                this.diarios.haber.push(haber);\r\n                // }\r\n\r\n                //Limpiamos los campos\r\n                toastr.success(\"Activo agregado correctamente\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n                this.diario.haber.fecha = \"\";\r\n                this.diario.haber.nom_cuenta = \"\";\r\n                this.diario.haber.saldo = \"\";\r\n            }\r\n        },\r\n        agregarDebe() {\r\n            let id = this.diario.debe.nom_cuenta;\r\n            let cuenta = this.cuentas.filter(x => x.id == id);\r\n            let valor = this.diario.debe.saldo;\r\n            if (this.diario.debe.nom_cuenta === \"\") {\r\n                toastr.error(\"La cuenta es obligatoria\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                // if (cuenta[0].porcentual == 1) {\r\n                //       let calculo = this.valorPorcentual(cuenta[0].porcentaje, valor);\r\n\r\n                //       let debe = {cuenta_id: cuenta[0].id, fecha:this.diario.debe.fecha, nom_cuenta: cuenta[0].nombre, saldo:calculo};\r\n                //       this.diarios.debe.push(debe);\r\n                // }else{\r\n                let debe = {\r\n                    cuenta_id: cuenta[0].id,\r\n                    fecha: this.diario.debe.fecha,\r\n                    nom_cuenta: cuenta[0].nombre,\r\n                    saldo: this.diario.debe.saldo\r\n                };\r\n                this.diarios.debe.push(debe);\r\n                // }\r\n                toastr.success(\"Activo agregado correctamente\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n                this.diario.debe.fecha = \"\";\r\n                this.diario.debe.nom_cuenta = \"\";\r\n                this.diario.debe.saldo = \"\";\r\n            }\r\n        },\r\n        agregarComentario() {\r\n            this.diarios.comentario = this.diario.comentario;\r\n            this.diario.comentario = \"\";\r\n        },\r\n        deleteHaber(index) {\r\n            this.diarios.haber.splice(index, 1);\r\n            this.diario.debe.fecha = \"\";\r\n            this.diario.debe.nom_cuenta = \"\";\r\n            this.diario.debe.saldo = \"\";\r\n            this.diario.debe.edit = false;\r\n            this.diario.haber.fecha = \"\";\r\n            this.diario.haber.nom_cuenta = \"\";\r\n            this.diario.haber.saldo = \"\";\r\n            this.diario.haber.edit = false;\r\n        },\r\n        deleteDebe(index) {\r\n            this.diarios.debe.splice(index, 1);\r\n            this.diario.debe.fecha = \"\";\r\n            this.diario.debe.nom_cuenta = \"\";\r\n            this.diario.debe.saldo = \"\";\r\n            this.diario.debe.edit = false;\r\n            this.diario.haber.fecha = \"\";\r\n            this.diario.haber.nom_cuenta = \"\";\r\n            this.diario.haber.saldo = \"\";\r\n            this.diario.haber.edit = false;\r\n        },\r\n        guardarRegistro() {\r\n            let total_debe = 0;\r\n            let total_haber = 0;\r\n\r\n            this.diarios.debe.forEach(function (debe, id) {\r\n                let saldo2 = debe.saldo;\r\n                total_debe += Number(saldo2);\r\n            });\r\n            this.diarios.haber.forEach(function (haber, id) {\r\n                let saldo = haber.saldo;\r\n                total_haber += Number(saldo);\r\n            });\r\n            console.log(total_debe);\r\n            console.log(total_haber);\r\n\r\n            if (this.diarios.debe == 0) {\r\n                toastr.error(\r\n                    \"No tienes transaccion para guardar\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.diarios.comentario == \"\") {\r\n                toastr.error(\"Debes agregar un comentario\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.diarios.fecha == \"\") {\r\n                toastr.error(\"Debes agregar la fecha\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (total_haber.toFixed(2) != total_debe.toFixed(2)) {\r\n                toastr.error(\r\n                    \"El Total de Debe y Haber no coinciden\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                this.diarios.debe[0].fecha = this.diarios.fecha;\r\n                let registro = {\r\n                    debe: this.diarios.debe,\r\n                    haber: this.diarios.haber,\r\n                    comentario: this.diarios.comentario,\r\n                    fecha: this.diarios.fecha\r\n                };\r\n                this.registros.push(registro); //añadimos el la variable persona al array\r\n                //Limpiamos los campos\r\n                toastr.success(\r\n                    \"Registro agregado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.diarios.debe = [];\r\n                this.diarios.haber = [];\r\n                this.diarios.comentario = \"\";\r\n                this.diarios.ajustado = false;\r\n                this.totalDebe();\r\n                this.totalHaber();\r\n                this.limpiar();\r\n\r\n                $(\"#as-transaccion\").modal(\"hide\");\r\n            }\r\n        },\r\n        debeEditRegister(id) {\r\n            let register = JSON.parse(JSON.stringify(this.registros));\r\n            this.update = true;\r\n            this.registerindex = id;\r\n            this.diarios.debe = [];\r\n            this.diarios.haber = [];\r\n            this.diarios.debe = register[id].debe;\r\n            this.diarios.haber = register[id].haber;\r\n            this.diarios.comentario = register[id].comentario;\r\n            this.diarios.fecha = register[id].fecha;\r\n            // this.diarios.tipo = register[id].tipo;\r\n\r\n            // console.log(this.registros[id]);\r\n            $(\"#as-transaccion\").modal(\"show\");\r\n        },\r\n\r\n        deleteRegistro(id) {\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar este registro??\",\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro se elimino\",\r\n                        \"success\"\r\n                    );\r\n                    this.registros.splice(id, 1);\r\n                    this.totalDebe();\r\n                    this.totalHaber();\r\n                }\r\n            });\r\n        },\r\n\r\n        updaterRegister() {\r\n            let id = this.registerindex;\r\n            let total_debe = 0;\r\n            let total_haber = 0;\r\n\r\n            this.diarios.debe.forEach(function (debe, id) {\r\n                let saldo = debe.saldo;\r\n                total_debe += Number(saldo);\r\n            });\r\n            this.diarios.haber.forEach(function (haber, id) {\r\n                let saldo = haber.saldo;\r\n                total_haber += Number(saldo);\r\n            });\r\n\r\n            if (this.diarios.debe == 0) {\r\n                toastr.error(\r\n                    \"No tienes transaccion para guardar\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.diarios.comentario.trim() === \"\") {\r\n                toastr.error(\"Debes agregar un comentario\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.diarios.fecha.trim() === \"\") {\r\n                toastr.error(\"Debes agregar la fecha\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (total_haber != total_debe) {\r\n                toastr.error(\r\n                    \"El Total de Debe y Haber no coinciden\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                this.diarios.debe[0].fecha = this.diarios.fecha;\r\n                this.registros[id].debe = this.diarios.debe;\r\n                this.registros[id].haber = this.diarios.haber;\r\n                this.registros[id].comentario = this.diarios.comentario;\r\n                this.registros[id].fecha = this.diarios.fecha;\r\n                this.diarios.debe = [];\r\n                this.diarios.haber = [];\r\n                this.diarios.comentario = \"\";\r\n                this.diarios.fecha = \"\";\r\n                // this.diarios.tipo             = '';\r\n                this.diarios.ajustado = false;\r\n\r\n                this.totalDebe();\r\n                this.totalHaber();\r\n                this.limpiar();\r\n\r\n                //\r\n\r\n                $(\"#as-transaccion\").modal(\"hide\");\r\n            }\r\n        },\r\n\r\n        agregarEdit() {\r\n            var haber = {\r\n                fecha: this.diario.haber.fecha,\r\n                nom_cuenta: this.diario.haber.nom_cuenta,\r\n                saldo: this.diario.haber.saldo\r\n            };\r\n            this.edit.haber.push(haber); //añadimos el la variable persona al array\r\n            //Limpiamos los campos\r\n            toastr.success(\"Activo agregado correctamente\", \"SmartLearn\", {\r\n                timeOut: \"3000\"\r\n            });\r\n            this.diario.haber.fecha = \"\";\r\n            this.diario.haber.nom_cuenta = \"\";\r\n            this.diario.haber.saldo = \"\";\r\n        },\r\n        agregarEditPasivo() {\r\n            var debe = {\r\n                fecha: \"\",\r\n                nom_cuenta: this.diario.debe.nom_cuenta,\r\n                saldo: this.diario.debe.saldo\r\n            };\r\n            this.edit.debe.push(debe); //añadimos el la variable persona al array\r\n            //Limpiamos los campos\r\n            toastr.success(\"Activo agregado correctamente\", \"SmartLearn\", {\r\n                timeOut: \"3000\"\r\n            });\r\n            this.diario.debe.fecha = \"\";\r\n            this.diario.debe.nom_cuenta = \"\";\r\n            this.diario.debe.saldo = \"\";\r\n        },\r\n        haberEdit(index) {\r\n            var edit = this.edit;\r\n            this.cuentaindex = index;\r\n            this.diario.haber.nom_cuenta = edit.haber[index].nom_cuenta;\r\n            this.diario.haber.saldo = edit.haber[index].saldo;\r\n            $(\"#haber_a\").modal(\"show\");\r\n        },\r\n        updateHaber() {\r\n            let id = this.diario.haber.nom_cuenta;\r\n            let index = this.diario.haber.index;\r\n            let cuenta = this.cuentas.filter(x => x.id == id);\r\n            console.log(cuenta);\r\n            let valor = this.diario.haber.saldo;\r\n            // if (cuenta[0].porcentual == 1) {\r\n            //   let calculo = this.valorPorcentual(cuenta[0].porcentaje, valor);\r\n            //   this.diarios.haber[index].nom_cuenta = cuenta[0].nombre;\r\n            //   this.diarios.haber[index].saldo      = calculo;\r\n            // }else{\r\n            this.diarios.haber[index].cuenta_id = id;\r\n            this.diarios.haber[index].nom_cuenta = cuenta[0].nombre;\r\n            this.diarios.haber[index].saldo = valor;\r\n            // }\r\n            this.diario.haber.nom_cuenta = \"\";\r\n            this.diario.haber.saldo = \"\";\r\n            this.diario.haber.edit = false;\r\n        },\r\n        habediarioEdit(index) {\r\n            this.diario.debe.fecha = \"\";\r\n            this.diario.debe.nom_cuenta = \"\";\r\n            this.diario.debe.saldo = \"\";\r\n            this.diario.debe.edit = false;\r\n            this.diario.haber.index = index;\r\n            let id_cuenta = this.diarios.haber[index].cuenta_id;\r\n\r\n            let cuenta = this.cuentas.filter(x => x.id == id_cuenta);\r\n            console.log(cuenta);\r\n            // if (cuenta[0].porcentual == 1){\r\n\r\n            //   this.diario.haber.nom_cuenta = id_cuenta;\r\n            //   this.diario.haber.saldo      = '';\r\n            // }else{\r\n\r\n            this.diario.haber.nom_cuenta = id_cuenta;\r\n            this.diario.haber.saldo = this.diarios.haber[index].saldo;\r\n            // }\r\n            this.diario.haber.edit = true;\r\n\r\n            $(\"#haber-asiento-tab\").tab(\"show\");\r\n        },\r\n        updateHaber1() {\r\n            var id = this.cuentaindex;\r\n            this.diarios.haber[id].nom_cuenta = this.diario.haber.nom_cuenta;\r\n            this.diarios.haber[id].saldo = this.diario.haber.saldo;\r\n            $(\"#haber_d\").modal(\"hide\");\r\n            this.diario.haber.nom_cuenta = \"\";\r\n            this.diario.haber.saldo = \"\";\r\n        },\r\n        haberDelete(index) {\r\n            this.edit.haber.splice(index, 1);\r\n        },\r\n\r\n        debediairoEdit(index) {\r\n            this.diario.haber.nom_cuenta = \"\";\r\n            this.diario.haber.saldo = \"\";\r\n            this.diario.haber.edit = false;\r\n            this.diario.debe.index = index;\r\n            // this.cuentaindex     = index;\r\n            let cuenta_id = this.diarios.debe[index].cuenta_id;\r\n\r\n            if (this.diarios.debe[index].fecha !== \"\") {\r\n                this.diario.debe.fecha = this.diarios.debe[index].fecha;\r\n            } else {\r\n                this.diario.debe.fecha = \"\";\r\n            }\r\n            let cuenta = this.cuentas.filter(x => x.id == cuenta_id);\r\n            // console.log(cuenta)\r\n            // if (cuenta[0].porcentual == 1){\r\n            //   this.diario.debe.nom_cuenta = cuenta_id;\r\n            //   this.diario.debe.saldo      = '';\r\n            // }else{\r\n            this.diario.debe.nom_cuenta = cuenta_id;\r\n            this.diario.debe.saldo = this.diarios.debe[index].saldo;\r\n            // }\r\n            this.diario.debe.edit = true;\r\n            $(\"#debe-asiento-tab\").tab(\"show\");\r\n        },\r\n        cancelarEdicion(cuenta) {\r\n            if (cuenta == \"debe\") {\r\n                this.diario.debe.fecha = \"\";\r\n                this.diario.debe.nom_cuenta = \"\";\r\n                this.diario.debe.saldo = \"\";\r\n                this.diario.debe.edit = false;\r\n            } else {\r\n                this.diario.haber.nom_cuenta = \"\";\r\n                this.diario.haber.saldo = \"\";\r\n                this.diario.haber.edit = false;\r\n            }\r\n        },\r\n        updateDebe() {\r\n            let id = this.diario.debe.nom_cuenta;\r\n            let index = this.diario.debe.index;\r\n            let cuenta = this.cuentas.filter(x => x.id == id);\r\n            console.log(cuenta);\r\n            let valor = this.diario.debe.saldo;\r\n            if (this.diario.debe.fecha !== \"\") {\r\n                this.diarios.debe[index].fecha = this.diario.debe.fecha;\r\n            }\r\n            // if (cuenta[0].porcentual == 1) {\r\n            //   let calculo = this.valorPorcentual(cuenta[0].porcentaje, valor);\r\n            //   this.diarios.debe[index].nom_cuenta = cuenta[0].nombre;\r\n            //   this.diarios.debe[index].saldo      = calculo;\r\n            // }else{\r\n            this.diarios.debe[index].nom_cuenta = cuenta[0].nombre;\r\n            this.diarios.debe[index].saldo = valor;\r\n            // }\r\n            this.diarios.debe[index].cuenta_id = id;\r\n\r\n            if (this.diario.debe.fecha !== \"\") {\r\n                this.diario.debe.fecha = \"\";\r\n            }\r\n            this.diario.debe.nom_cuenta = \"\";\r\n            this.diario.debe.saldo = \"\";\r\n            this.diario.debe.edit = false;\r\n        },\r\n        debeDelete(index) {\r\n            this.edit.debe.splice(index, 1);\r\n        },\r\n        totalDebeBi: function () {\r\n            let balan = this.balanceInicial;\r\n            let total = 0;\r\n            balan.debe.forEach(function (obj, index) {\r\n                total += Number(obj.saldo);\r\n            });\r\n            // console.log(total);\r\n            this.balanceInicial.totaldebe = total;\r\n        },\r\n        totalHaberBi: function () {\r\n            let balan = this.balanceInicial;\r\n            let total = 0;\r\n            balan.haber.forEach(function (obj, index) {\r\n                total += Number(obj.saldo);\r\n            });\r\n            // console.log(total);\r\n            this.balanceInicial.totalhaber = total;\r\n        },\r\n        totalDebe: function () {\r\n            this.pasan.debe = 0;\r\n            let regis = this.registros;\r\n            let total = 0;\r\n            regis.forEach(function (obj, index) {\r\n                obj.debe.forEach(function (sal, id) {\r\n                    total += Number(sal.saldo);\r\n                });\r\n            });\r\n            // console.log(total);\r\n            this.pasan.debe = this.balanceInicial.totaldebe + total;\r\n        },\r\n        totalHaber: function () {\r\n            this.pasan.haber = 0;\r\n            let regis = this.registros;\r\n            let total = 0;\r\n\r\n            regis.forEach(function (obj, index) {\r\n                obj.haber.forEach(function (sal, id) {\r\n                    total += Number(sal.saldo);\r\n                });\r\n            });\r\n            // console.log(total);\r\n            this.pasan.haber = this.balanceInicial.totalhaber + total;\r\n        },\r\n        guardarDiario: function () {\r\n            if (this.registros.length == 0) {\r\n                toastr.error(\"No tienes registros para guardar\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                // console.log(union)\r\n                let _this = this;\r\n                let url = \"/sistema/admin/taller/asiento-cierre\";\r\n                axios\r\n                    .post(url, {\r\n                        id: _this.id_taller,\r\n                        registro: _this.registros,\r\n                        nombre: _this.nombre,\r\n                        total_debe: _this.pasan.debe,\r\n                        total_haber: _this.pasan.haber\r\n                    })\r\n                    .then(response => {\r\n                        if (response.data.success == false) {\r\n                            toastr.error(response.data.message, \"SmartLearn\", {\r\n                                timeOut: \"3000\"\r\n                            });\r\n                        } else if (response.data.success == \"act\") {\r\n                            toastr.success(\r\n                                \"Asiento de Cierre Actualizado Correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            mayor_general.obtenerDiarioGeneral();\r\n                            mayor_general.obtenerAsientoCierre();\r\n                        } else {\r\n                            toastr.success(\r\n                                \"Asiento de Cierre Creado Correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            _this.dato = response.data;\r\n                            mayor_general.obtenerDiarioGeneral();\r\n                            mayor_general.obtenerAsientoCierre();\r\n\r\n                            //\r\n                        }\r\n                    })\r\n                    .catch(function (error) { });\r\n            }\r\n        },\r\n        obtenerAsientoCierre: function () {\r\n            var _this = this;\r\n            var url = \"/sistema/admin/taller/asiento-cierre-obtener\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        _this.registros = response.data.registros;\r\n                        _this.nombre = response.data.nombre;\r\n                        this.totalDebe();\r\n                        this.totalHaber();\r\n\r\n                        toastr.success(\r\n                            \"Diairo General cargado Correctamente\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        }\r\n    }\r\n});\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////KARDEX ///////////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst kardex = new Vue({\r\n    el: \"#kardex\",\r\n    data: {\r\n        id_taller: taller,\r\n\r\n        exis: {\r\n            cantidad: \"\",\r\n            precio: \"\",\r\n            total: \"\"\r\n        },\r\n        producto: \"\",\r\n        producto_id: \"\",\r\n        productos: [],\r\n        nombre: \"\",\r\n        suman: {\r\n            ingreso_cantidad: 0,\r\n            ingreso_total: 0,\r\n            egreso_cantidad: 0,\r\n            egreso_total: 0,\r\n            muestra: 0\r\n        },\r\n        datos_transacciones: \"\",\r\n        totales: {\r\n            cantidad: \"\",\r\n            precio: \"\",\r\n            subtotal: \"\",\r\n            total: \"\"\r\n        },\r\n        prueba: {\r\n            cantidad: {\r\n                inventario_inicial: \"\",\r\n                adquicisiones: \"\",\r\n                ventas: \"\",\r\n                inventario_final: \"\"\r\n            },\r\n            precio: {\r\n                inventario_inicial: \"\",\r\n                adquicisiones: \"\",\r\n                ventas: \"\",\r\n                inventario_final: \"\"\r\n            }\r\n        },\r\n        ejercicio: [],\r\n        actuingreso: {\r\n            estado: false,\r\n            index: \"\"\r\n        },\r\n        modales: {\r\n            modal_ingreso: [],\r\n            existencia_ingreso: false,\r\n            modal_devolucion_compra: [],\r\n            modal_egreso: [],\r\n            modal_devolucion_venta: []\r\n        },\r\n        actuegreso: {\r\n            estado: false,\r\n            index: \"\",\r\n            tipo: false\r\n        },\r\n        egresos: [],\r\n        existencias: [],\r\n        transacciones: [],\r\n        update: false,\r\n        inicial: {\r\n            fecha: \"\",\r\n            movimiento: \"\",\r\n            cantidad: \"\",\r\n            precio: \"\",\r\n            total: \"\"\r\n        },\r\n        edit: {\r\n            egreso: {\r\n                cantidad: \"\",\r\n                precio: \"\",\r\n                total: \"\",\r\n                temp: \"\"\r\n            }\r\n        },\r\n        movimientos: [],\r\n        transaccion: {\r\n            fecha: \"\",\r\n            movimiento: \"\",\r\n            ingreso: {\r\n                cantidad: \"\",\r\n                precio: \"\",\r\n                total: \"\"\r\n            },\r\n            egreso: {\r\n                cantidad: \"\",\r\n                precio: \"\",\r\n                total: \"\",\r\n                temp: \"\",\r\n                edit: false,\r\n                add: false,\r\n                active: false\r\n            },\r\n            existencia: {\r\n                cantidad: \"\",\r\n                precio: \"\",\r\n                total: \"\"\r\n            },\r\n            exis: {\r\n                cantidad: \"\",\r\n                precio: \"\"\r\n            }\r\n        }\r\n    },\r\n    mounted: function () {\r\n        this.obtenerKardexFifo();\r\n    },\r\n    methods: {\r\n        VueSweetAlert2(component, propsData) {\r\n            Swal.fire({\r\n                html: '<div id=\"VueSweetAlert2\"></div>',\r\n                showConfirmButton: false,\r\n                showCloseButton: true,\r\n                heightAuto: true,\r\n                customClass: \"swal-wide\",\r\n                willOpen: () => {\r\n                    let ComponentClass = Vue.extend(Vue.component(component));\r\n                    let instance = new ComponentClass({\r\n                        propsData: propsData\r\n                    });\r\n                    instance.$mount();\r\n                    document\r\n                        .getElementById(\"VueSweetAlert2\")\r\n                        .appendChild(instance.$el);\r\n                }\r\n            });\r\n        },\r\n        decimales(saldo) {\r\n            if (saldo !== null && saldo !== \"\" && saldo !== 0) {\r\n                let total = Number(saldo).toFixed(2);\r\n                return total;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        formatoFecha(fecha) {\r\n            if (fecha !== null) {\r\n                let date = fecha\r\n                    .split(\"-\")\r\n                    .reverse()\r\n                    .join(\"-\");\r\n                return date;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        reverseFecha(fecha) {\r\n            let date = fecha\r\n                .split(\"/\")\r\n                .reverse()\r\n                .join(\"-\");\r\n            return date;\r\n        },\r\n        sumasTotales() {\r\n            let transacciones = this.transacciones;\r\n            let in_cantidad = 0;\r\n            let in_total = 0;\r\n            let eg_cantidad = 0;\r\n            let eg_total = 0;\r\n\r\n            //INGRESO CANTIDAD\r\n            transacciones.forEach(function (transaccion, i) {\r\n                transaccion.forEach(function (ingreso_cantidad, id) {\r\n                    let temp = ingreso_cantidad.ingreso_cantidad;\r\n\r\n                    if (temp != null && temp !== \"\") {\r\n                        in_cantidad += parseInt(temp);\r\n                        // console.log(temp);\r\n                    }\r\n                });\r\n            });\r\n            this.suman.ingreso_cantidad = in_cantidad;\r\n\r\n            //INGRESO TOTAL\r\n\r\n            transacciones.forEach(function (transaccion, i) {\r\n                transaccion.forEach(function (ingreso_total, id) {\r\n                    let temp1 = ingreso_total.ingreso_total;\r\n\r\n                    if (temp1 != null && temp1 !== \"\") {\r\n                        in_total += Number(temp1);\r\n                        // console.log(temp1);\r\n                    }\r\n                });\r\n            });\r\n            this.suman.ingreso_total = in_total.toFixed(2);\r\n\r\n            console.log(in_total);\r\n\r\n            //EGRESO CANTIDAD\r\n            transacciones.forEach(function (transaccion, i) {\r\n                transaccion.forEach(function (egreso_cantidad, id) {\r\n                    let temp = egreso_cantidad.egreso_cantidad;\r\n\r\n                    if (temp != null && temp !== \"\") {\r\n                        eg_cantidad += parseInt(temp);\r\n                        // console.log(temp);\r\n                    }\r\n                });\r\n            });\r\n            this.suman.egreso_cantidad = eg_cantidad;\r\n\r\n            //EGRESO TOTAL\r\n\r\n            transacciones.forEach(function (transaccion, i) {\r\n                transaccion.forEach(function (egreso_total, id) {\r\n                    let temp1 = egreso_total.egreso_total;\r\n\r\n                    if (temp1 != null && temp1 !== \"\") {\r\n                        eg_total += Number(temp1);\r\n                        // console.log(temp1);\r\n                    }\r\n                });\r\n            });\r\n            this.suman.egreso_total = eg_total.toFixed(2);\r\n\r\n            console.log(in_total);\r\n        },\r\n        modalIngreso: function () {\r\n            if (this.transacciones.length >= 1) {\r\n                const existencias = JSON.parse(\r\n                    JSON.stringify(this.existencias)\r\n                );\r\n                const ventas = JSON.parse(JSON.stringify(this.existencias));\r\n\r\n                this.modales.modal_ingreso = existencias;\r\n                this.modales.modal_devolucion_venta = ventas;\r\n            }\r\n            $(\"#ingreso\").modal(\"show\");\r\n\r\n            $(\"#tableingreso-tab\").tab(\"show\");\r\n        },\r\n        modalInicial: function () {\r\n            this.cerrarInicial();\r\n            if (this.transacciones.length >= 1) {\r\n                let i = this.transacciones.length - 1;\r\n                console.log(this.transacciones[i]);\r\n                this.movimientos = this.transacciones[i];\r\n            }\r\n            $(\"#saldo_inicial\").modal(\"show\");\r\n        },\r\n        modalEgreso: function () {\r\n            if (this.transacciones.length >= 1) {\r\n                const existencias = JSON.parse(\r\n                    JSON.stringify(this.existencias)\r\n                );\r\n                const compras = JSON.parse(JSON.stringify(this.existencias));\r\n\r\n                this.modales.modal_egreso = existencias;\r\n                this.modales.modal_devolucion_compra = compras;\r\n            }\r\n            $(\"#egreso\").modal(\"show\");\r\n            $(\"#tablaegreso-tab\").tab(\"show\");\r\n        },\r\n\r\n        totalIng(id) {\r\n            let i = id;\r\n            let exis = this.totales.total;\r\n            let cantidad = Number(this.ejercicio[i].ingreso_cantidad);\r\n            let precio = Number(this.ejercicio[i].ingreso_precio);\r\n            let total1 = this.ejercicio[i].ingreso_total;\r\n\r\n            let multiplicacion = cantidad * precio;\r\n\r\n            this.ejercicio[i].ingreso_total = multiplicacion.toFixed(2);\r\n        },\r\n\r\n        ventaIng(id) {\r\n            let i = id;\r\n            let exis = this.totales.total;\r\n            let cantidad = Number(this.ejercicio[i].ingreso_cantidad);\r\n            let precio = Number(this.ejercicio[i].ingreso_precio);\r\n            let total1 = this.ejercicio[i].ingreso_total;\r\n\r\n            let multiplicacion = cantidad * precio;\r\n\r\n            this.ejercicio[i].ingreso_total = multiplicacion.toFixed(2);\r\n        },\r\n\r\n        actuaIng(id) {\r\n            let i = id;\r\n            let exis = this.totales.total;\r\n            let cantidad = Number(\r\n                this.modales.modal_ingreso[i].ingreso_cantidad\r\n            );\r\n            let precio = Number(this.modales.modal_ingreso[i].ingreso_precio);\r\n            let total1 = this.modales.modal_ingreso[i].ingreso_total;\r\n            let multiplicacion = cantidad * precio;\r\n\r\n            this.modales.modal_ingreso[\r\n                i\r\n            ].ingreso_total = multiplicacion.toFixed(2);\r\n\r\n            let suma = multiplicacion + exis;\r\n            this.totales.subtotal = suma;\r\n\r\n            toastr.error(\"Datos Actualizado\", \"SmartLearn\", {\r\n                timeOut: \"3000\"\r\n            });\r\n        },\r\n        actuaVenta(id) {\r\n            let i = id;\r\n            let exis = this.totales.total;\r\n            let cantidad = Number(\r\n                this.modales.modal_devolucion_venta[i].ingreso_cantidad\r\n            );\r\n            let precio = Number(\r\n                this.modales.modal_devolucion_venta[i].ingreso_precio\r\n            );\r\n            let total1 = this.modales.modal_devolucion_venta[i].ingreso_total;\r\n            let multiplicacion = cantidad * precio;\r\n\r\n            this.modales.modal_devolucion_venta[\r\n                i\r\n            ].ingreso_total = multiplicacion.toFixed(2);\r\n\r\n            let suma = multiplicacion + exis;\r\n            this.totales.subtotal = suma;\r\n\r\n            toastr.error(\"Datos Actualizado\", \"SmartLearn\", {\r\n                timeOut: \"3000\"\r\n            });\r\n        },\r\n        bajarExis(estado) {\r\n            let id = this.transacciones.length + 1;\r\n            var existencia = {\r\n                identificador: id,\r\n                fecha: \"\",\r\n                movimiento: \"\",\r\n                tipo: \"existencia\",\r\n                ingreso_cantidad: \"\",\r\n                ingreso_precio: \"\",\r\n                ingreso_total: \"\",\r\n                egreso_cantidad: \"\",\r\n                egreso_precio: \"\",\r\n                egreso_total: \"\",\r\n                existencia_cantidad: this.exis.cantidad,\r\n                existencia_precio: this.exis.precio,\r\n                existencia_total: \"\"\r\n            };\r\n            this.modales.modal_ingreso.unshift(existencia);\r\n            toastr.success(\"Agregado\", \"SmartLearn\", {\r\n                timeOut: \"3000\"\r\n            });\r\n            this.exis.cantidad = \"\";\r\n            this.exis.precio = \"\";\r\n            this.modales.existencia_ingreso = false;\r\n        },\r\n\r\n        actuExiIng(estado) {\r\n            let id = this.ejercicio[0].id;\r\n            var existencia = {\r\n                identificador: id,\r\n                fecha: \"\",\r\n                movimiento: \"\",\r\n                tipo: \"existencia\",\r\n                ingreso_cantidad: \"\",\r\n                ingreso_precio: \"\",\r\n                ingreso_total: \"\",\r\n                egreso_cantidad: \"\",\r\n                egreso_precio: \"\",\r\n                egreso_total: \"\",\r\n                existencia_cantidad: this.exis.cantidad,\r\n                existencia_precio: this.exis.precio,\r\n                existencia_total: \"\"\r\n            };\r\n\r\n            this.ejercicio.unshift(existencia);\r\n            toastr.success(\"Agregado\", \"SmartLearn\", {\r\n                timeOut: \"3000\"\r\n            });\r\n        },\r\n\r\n        agregarTran() {\r\n            if (\r\n                this.inicial.fecha.trim() === \"\" ||\r\n                this.inicial.movimiento.trim() === \"\" ||\r\n                this.inicial.cantidad.trim() === \"\" ||\r\n                this.inicial.precio.trim() === \"\"\r\n            ) {\r\n                toastr.error(\"Todos lo campos son obligatorios\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                this.inicial.total = Number(\r\n                    this.inicial.cantidad * this.inicial.precio\r\n                ).toFixed(2);\r\n                let existencia = {\r\n                    tipo: \"existencia\",\r\n                    fecha: \"\",\r\n                    movimiento: \"\",\r\n                    tipo: \"existencia\",\r\n                    ingreso_cantidad: \"\",\r\n                    ingreso_precio: \"\",\r\n                    ingreso_total: \"\",\r\n                    egreso_cantidad: \"\",\r\n                    egreso_precio: \"\",\r\n                    egreso_total: \"\",\r\n                    existencia_cantidad: this.inicial.cantidad,\r\n                    existencia_precio: this.inicial.precio,\r\n                    existencia_total: \"\"\r\n                };\r\n                this.existencias.push(existencia);\r\n                let registro = [];\r\n\r\n                var array = {\r\n                    tipo: \"inicial\",\r\n                    fecha: this.inicial.fecha,\r\n                    movimiento: this.inicial.movimiento,\r\n                    ingreso_cantidad: \"\",\r\n                    ingreso_precio: \"\",\r\n                    egreso_total: \"\",\r\n                    egreso_cantidad: \"\",\r\n                    egreso_precio: \"\",\r\n                    ingreso_total: \"\",\r\n                    existencia_cantidad: this.inicial.cantidad,\r\n                    existencia_precio: this.inicial.precio,\r\n                    existencia_total: this.inicial.total\r\n                };\r\n                registro.push(array);\r\n                this.transacciones.unshift(registro);\r\n\r\n                toastr.success(\r\n                    \"Transaccion agregada correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.totales.cantidad = this.inicial.cantidad;\r\n                this.totales.precio = this.inicial.precio;\r\n                this.totales.total = this.inicial.total;\r\n                this.inicial.fecha = \"\";\r\n                this.inicial.movimiento = \"\";\r\n                this.inicial.cantidad = \"\";\r\n                this.inicial.precio = \"\";\r\n                $(\"#saldo_inicial\").modal(\"hide\");\r\n            }\r\n            this.sumasTotales();\r\n            this.ultimaExistencia();\r\n        },\r\n        ultimaExistencia() {\r\n            let a = this.transacciones.length;\r\n            let u = this.transacciones.length - 1;\r\n            if (a >= 1) {\r\n                let ultima = this.transacciones[u];\r\n                let filtro = ultima.filter(\r\n                    x =>\r\n                        (x.existencia_cantidad !== \"\" &&\r\n                            x.existencia_cantidad !== null) ||\r\n                        (x.existencia_precio !== \"\" &&\r\n                            x.existencia_precio !== null)\r\n                );\r\n\r\n                let exis = [];\r\n                filtro.forEach(function (existencia, id) {\r\n                    let agregar = {\r\n                        tipo: \"existencia\",\r\n                        fecha: \"\",\r\n                        movimiento: \"\",\r\n                        tipo: \"existencia\",\r\n                        ingreso_cantidad: \"\",\r\n                        ingreso_precio: \"\",\r\n                        ingreso_total: \"\",\r\n                        egreso_cantidad: \"\",\r\n                        egreso_precio: \"\",\r\n                        egreso_total: \"\",\r\n                        existencia_cantidad: existencia.existencia_cantidad,\r\n                        existencia_precio: existencia.existencia_precio,\r\n                        existencia_total: \"\"\r\n                    };\r\n                    exis.push(agregar);\r\n                });\r\n                console.log(this.transacciones[u]);\r\n                this.existencias = JSON.parse(JSON.stringify(exis));\r\n            } else {\r\n                this.existencias = [];\r\n            }\r\n        },\r\n        cerrarInicial() {\r\n            this.update = false;\r\n            this.inicial.fecha = \"\";\r\n            this.inicial.movimiento = \"\";\r\n            this.inicial.cantidad = \"\";\r\n            this.inicial.precio = \"\";\r\n            this.inicial.fecha = \"\";\r\n            this.inicial.movimiento = \"\";\r\n            this.inicial.cantidad = \"\";\r\n            this.inicial.precio = \"\";\r\n        },\r\n        actualizarInicial() {\r\n            if (\r\n                this.inicial.fecha.trim() === \"\" ||\r\n                this.inicial.movimiento.trim() === \"\" ||\r\n                this.inicial.cantidad.trim() === \"\" ||\r\n                this.inicial.precio.trim() === \"\"\r\n            ) {\r\n                toastr.error(\"Todos lo campos son obligatorios\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                // let fecha = this.formatoFecha(this.inicial.fecha)\r\n                this.transacciones[0][0].fecha = this.inicial.fecha;\r\n                this.transacciones[0][0].movimiento = this.inicial.movimiento;\r\n                this.transacciones[0][0].existencia_cantidad = this.inicial.cantidad;\r\n                this.transacciones[0][0].existencia_precio = this.inicial.precio;\r\n\r\n                let total = JSON.parse(JSON.stringify(this.inicial.total));\r\n                let newTotal =\r\n                    Number(this.inicial.cantidad) * Number(this.inicial.precio);\r\n                this.inicial.total = newTotal;\r\n                this.transacciones[0][0].existencia_total = newTotal.toFixed(2);\r\n                let transacciones = this.transacciones;\r\n                let identificador = transacciones.length - 1;\r\n\r\n                this.totales.cantidad = this.inicial.cantidad;\r\n                this.totales.precio = this.inicial.precio;\r\n                // this.totales.total         = this.inicial.total;\r\n                this.update = false;\r\n                this.inicial.fecha = \"\";\r\n                this.inicial.movimiento = \"\";\r\n                this.inicial.cantidad = \"\";\r\n                this.inicial.precio = \"\";\r\n                $(\"#saldo_inicial\").modal(\"hide\");\r\n                this.ultimaExistencia();\r\n            }\r\n        },\r\n        agregarIngreso() {\r\n            if (\r\n                this.transaccion.fecha.trim() === \"\" ||\r\n                this.transaccion.movimiento.trim() === \"\" ||\r\n                this.transaccion.ingreso.cantidad.trim() === \"\" ||\r\n                this.transaccion.ingreso.precio.trim() === \"\"\r\n            ) {\r\n                toastr.error(\r\n                    \"Todos los campos son obligatorios\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                let id = this.transacciones.length + 1;\r\n\r\n                this.transaccion.ingreso.total = Number(\r\n                    this.transaccion.ingreso.cantidad *\r\n                    this.transaccion.ingreso.precio\r\n                ).toFixed(2);\r\n                let calculo = Number(\r\n                    this.transaccion.ingreso.total + this.totales.total\r\n                );\r\n\r\n                let array = {\r\n                    identificador: id,\r\n                    tipo: \"ingreso\",\r\n                    fecha: this.transaccion.fecha,\r\n                    movimiento: this.transaccion.movimiento,\r\n                    ingreso_cantidad: this.transaccion.ingreso.cantidad,\r\n                    ingreso_precio: this.transaccion.ingreso.precio,\r\n                    ingreso_total: this.transaccion.ingreso.total,\r\n                    egreso_cantidad: \"\",\r\n                    egreso_precio: \"\",\r\n                    egreso_total: \"\",\r\n                    existencia_cantidad: this.transaccion.existencia.cantidad,\r\n                    existencia_precio: this.transaccion.existencia.precio,\r\n                    existencia_total: \"\"\r\n                };\r\n\r\n                this.modales.modal_ingreso.push(array);\r\n\r\n                toastr.success(\r\n                    \"Transaccion agregada correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n\r\n                this.transaccion.fecha = \"\";\r\n                this.transaccion.movimiento = \"\";\r\n                this.transaccion.ingreso.cantidad = \"\";\r\n                this.transaccion.ingreso.precio = \"\";\r\n                this.transaccion.ingreso.cantidad = \"\";\r\n                this.transaccion.ingreso.precio = \"\";\r\n                this.transaccion.exis.cantidad = this.transaccion.existencia.cantidad;\r\n                this.transaccion.exis.precio = this.transaccion.existencia.precio;\r\n                this.transaccion.existencia.cantidad = \"\";\r\n                this.transaccion.existencia.precio = \"\";\r\n            }\r\n        },\r\n        borrarIngreso(index, tipo) {\r\n            let id = index;\r\n            if (tipo == \"ingreso\") {\r\n                if (this.ejercicio[index].tipo == \"ingreso\") {\r\n                    console.log(\r\n                        \"Si eliminas este ingreso se borrara el movimiento\"\r\n                    );\r\n                } else if (this.ejercicio[index].tipo == \"ingreso_venta\") {\r\n                    console.log(\r\n                        \"Si eliminas este ingreso se borrara el movimiento\"\r\n                    );\r\n                } else {\r\n                    this.ejercicio.splice(index, 1);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (tipo == \"venta\") {\r\n                if (\r\n                    this.modales.modal_devolucion_venta[id].tipo ==\r\n                    \"ingreso_venta\"\r\n                ) {\r\n                    this.modales.modal_devolucion_venta.splice(index, 1);\r\n                } else if (\r\n                    this.modales.modal_devolucion_venta[id].tipo == \"existencia\"\r\n                ) {\r\n                    this.modales.modal_devolucion_venta.splice(index, 1);\r\n                }\r\n            } else {\r\n                if (this.modales.modal_ingreso[id].tipo == \"ingreso\") {\r\n                    this.modales.modal_ingreso.splice(index, 1);\r\n                } else if (\r\n                    this.modales.modal_ingreso[id].tipo == \"existencia\"\r\n                ) {\r\n                    this.modales.modal_ingreso.splice(index, 1);\r\n                }\r\n            }\r\n        },\r\n\r\n        agregarTransaccion(tipo) {\r\n            if (tipo == \"ingreso\") {\r\n                let prueba1 = this.modales.modal_ingreso.filter(\r\n                    x => x.tipo == \"ingreso\"\r\n                );\r\n                if (prueba1.length == 0) {\r\n                    toastr.error(\r\n                        \"No puedes enviar solo existencias\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    return;\r\n                }\r\n\r\n                let ingreso = this.modales.modal_ingreso.filter(\r\n                    x => x.tipo == \"ingreso\"\r\n                );\r\n                let id = this.transacciones.length + 1;\r\n\r\n                let filtro_existencias = this.modales.modal_ingreso.filter(\r\n                    x => x.tipo == \"existencia\"\r\n                );\r\n\r\n                let existencia = {\r\n                    tipo: \"existencia\",\r\n                    fecha: \"\",\r\n                    movimiento: \"\",\r\n                    ingreso_cantidad: \"\",\r\n                    ingreso_precio: \"\",\r\n                    ingreso_total: \"\",\r\n                    egreso_cantidad: \"\",\r\n                    egreso_precio: \"\",\r\n                    egreso_total: \"\",\r\n                    existencia_cantidad: ingreso[0].existencia_cantidad,\r\n                    existencia_precio: ingreso[0].existencia_precio,\r\n                    existencia_total: \"\"\r\n                };\r\n\r\n                filtro_existencias.push(existencia);\r\n                this.existencias = JSON.parse(\r\n                    JSON.stringify(filtro_existencias)\r\n                );\r\n\r\n                let exi_total = 0;\r\n\r\n                filtro_existencias.forEach(function (existencia, i) {\r\n                    let cantidad = existencia.existencia_cantidad;\r\n                    let precio = existencia.existencia_precio;\r\n\r\n                    let subtotal = Number(cantidad) * Number(precio);\r\n\r\n                    exi_total += Number(subtotal);\r\n                });\r\n\r\n                let ultimo = this.modales.modal_ingreso.length - 1;\r\n\r\n                this.modales.modal_ingreso[\r\n                    ultimo\r\n                ].existencia_total = exi_total.toFixed(2);\r\n\r\n                this.transacciones.push(this.modales.modal_ingreso);\r\n\r\n                this.modales.modal_ingreso = [];\r\n\r\n                this.totales.total = exi_total;\r\n                console.log(exi_total);\r\n                this.suman.muestra = exi_total;\r\n\r\n                this.transaccion.ingreso.total = \"\";\r\n                $(\"#ingreso\").modal(\"hide\");\r\n                this.sumasTotales();\r\n                this.ultimaExistencia();\r\n            } else {\r\n                let prueba = this.modales.modal_devolucion_venta.filter(\r\n                    x => x.tipo == \"ingreso_venta\"\r\n                );\r\n                if (prueba.length == 0) {\r\n                    toastr.error(\r\n                        \"No puedes enviar solo existencias\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    return;\r\n                }\r\n\r\n                let venta = this.modales.modal_devolucion_venta.filter(\r\n                    x => x.tipo == \"ingreso_venta\"\r\n                );\r\n                let id = this.transacciones.length + 1;\r\n                let filtro_existencias = this.modales.modal_devolucion_venta.filter(\r\n                    x => x.tipo == \"existencia\"\r\n                );\r\n                let existencia = {\r\n                    identificador: id,\r\n                    tipo: \"existencia\",\r\n                    fecha: \"\",\r\n                    movimiento: \"\",\r\n                    tipo: \"existencia\",\r\n                    ingreso_cantidad: \"\",\r\n                    ingreso_precio: \"\",\r\n                    ingreso_total: \"\",\r\n                    egreso_cantidad: \"\",\r\n                    egreso_precio: \"\",\r\n                    egreso_total: \"\",\r\n                    existencia_cantidad: venta[0].existencia_cantidad,\r\n                    existencia_precio: venta[0].existencia_precio,\r\n                    existencia_total: \"\"\r\n                };\r\n                filtro_existencias.unshift(existencia);\r\n                this.existencias = JSON.parse(\r\n                    JSON.stringify(filtro_existencias)\r\n                );\r\n\r\n                let exi_total = 0;\r\n\r\n                filtro_existencias.forEach(function (existencia, i) {\r\n                    let cantidad = existencia.existencia_cantidad;\r\n                    let precio = existencia.existencia_precio;\r\n\r\n                    let subtotal = Number(cantidad) * Number(precio);\r\n\r\n                    exi_total += Number(subtotal);\r\n                });\r\n\r\n                let ultimo = this.modales.modal_devolucion_venta.length - 1;\r\n\r\n                this.modales.modal_devolucion_venta[\r\n                    ultimo\r\n                ].existencia_total = exi_total.toFixed(2);\r\n                this.totales.total = exi_total;\r\n                console.log(exi_total);\r\n                this.transacciones.push(this.modales.modal_devolucion_venta);\r\n                this.modales.modal_devolucion_venta = [];\r\n\r\n                this.transaccion.ingreso.cantidad = \"\";\r\n                this.transaccion.ingreso.precio = \"\";\r\n                this.transaccion.ingreso.total = \"\";\r\n                $(\"#ingreso\").modal(\"hide\");\r\n                this.sumasTotales();\r\n                this.ultimaExistencia();\r\n            }\r\n        },\r\n\r\n        editarTransaccion(index, id) {\r\n            // let id = index;\r\n            if (this.transacciones[index][id].tipo == \"inicial\") {\r\n                this.update = true;\r\n\r\n                this.inicial.fecha = this.transacciones[index][id].fecha;\r\n                this.inicial.movimiento = this.transacciones[index][\r\n                    id\r\n                ].movimiento;\r\n                this.inicial.cantidad = this.transacciones[index][\r\n                    id\r\n                ].existencia_cantidad;\r\n                this.inicial.precio = this.transacciones[index][\r\n                    id\r\n                ].existencia_precio;\r\n\r\n                $(\"#saldo_inicial\").modal(\"show\");\r\n            } else if (this.transacciones[index][id].tipo == \"ingreso\") {\r\n                this.actuingreso.index = index;\r\n                this.actuingreso.estado = true;\r\n                this.actuegreso.estado = false;\r\n\r\n                const second = JSON.parse(\r\n                    JSON.stringify(this.transacciones[index])\r\n                );\r\n                this.ejercicio = second;\r\n            } else if (this.transacciones[index][id].tipo == \"egreso\") {\r\n                this.actuegreso.index = index;\r\n                this.actuegreso.estado = true;\r\n                this.actuingreso.estado = false;\r\n                this.actuegreso.tipo = true;\r\n\r\n                const egre = JSON.parse(\r\n                    JSON.stringify(this.transacciones[index])\r\n                );\r\n                this.egresos = egre;\r\n            } else if (this.transacciones[index][id].tipo == \"ingreso_venta\") {\r\n                this.actuingreso.index = index;\r\n                this.actuingreso.estado = true;\r\n                this.actuegreso.estado = false;\r\n\r\n                const venta = JSON.parse(\r\n                    JSON.stringify(this.transacciones[index])\r\n                );\r\n                this.ejercicio = venta;\r\n            } else if (this.transacciones[index][id].tipo == \"egreso_compra\") {\r\n                this.actuegreso.index = index;\r\n                this.actuegreso.estado = true;\r\n                this.actuingreso.estado = false;\r\n\r\n                const comprea = JSON.parse(\r\n                    JSON.stringify(this.transacciones[index])\r\n                );\r\n                this.egresos = comprea;\r\n            }\r\n        },\r\n        cancelarActualizacion(tipo) {\r\n            if (tipo == \"egresos\") {\r\n                this.actuegreso.index = \"\";\r\n                this.actuegreso.estado = false;\r\n                this.actuegreso.tipo = false;\r\n                this.egresos = [];\r\n            } else if (tipo == \"ingresos\") {\r\n                this.actuingreso.index = \"\";\r\n                this.actuingreso.estado = false;\r\n                this.ejercicio = [];\r\n            }\r\n        },\r\n        actualizarIngreso() {\r\n            let ingreso = this.ejercicio.filter(\r\n                x => x.tipo == \"ingreso\" || x.tipo == \"ingreso_venta\"\r\n            );\r\n            let id = this.transacciones.length + 1;\r\n\r\n            let multi = Number(\r\n                ingreso[0].ingreso_cantidad * ingreso[0].ingreso_precio\r\n            ).toFixed(2);\r\n            ingreso[0].ingreso_total = multi;\r\n            let filtro_existencias = this.ejercicio.filter(\r\n                x => x.tipo == \"existencia\"\r\n            );\r\n\r\n            let existencia = {\r\n                identificador: id,\r\n                tipo: \"existencia\",\r\n                fecha: \"\",\r\n                movimiento: \"\",\r\n                tipo: \"existencia\",\r\n                ingreso_cantidad: \"\",\r\n                ingreso_precio: \"\",\r\n                ingreso_total: \"\",\r\n                egreso_cantidad: \"\",\r\n                egreso_precio: \"\",\r\n                egreso_total: \"\",\r\n                existencia_cantidad: ingreso[0].existencia_cantidad,\r\n                existencia_precio: ingreso[0].existencia_precio,\r\n                existencia_total: \"\"\r\n            };\r\n\r\n            filtro_existencias.push(existencia);\r\n\r\n            let exi_total = 0;\r\n\r\n            filtro_existencias.forEach(function (existencia, i) {\r\n                let cantidad = existencia.existencia_cantidad;\r\n                let precio = existencia.existencia_precio;\r\n\r\n                let subtotal = Number(cantidad) * Number(precio);\r\n\r\n                exi_total += Number(subtotal);\r\n            });\r\n\r\n            let ultimo = this.ejercicio.length - 1;\r\n\r\n            this.ejercicio[ultimo].existencia_total = exi_total.toFixed(2);\r\n\r\n            let index = this.actuingreso.index;\r\n            this.transacciones[index] = this.ejercicio;\r\n            this.ejercicio = [];\r\n            this.actuingreso.estado = false;\r\n            this.actuingreso.index = \"\";\r\n            this.sumasTotales();\r\n            this.ultimaExistencia();\r\n        },\r\n        nuevoEgreso(metodo) {\r\n            if (metodo == \"agregar\") {\r\n                this.transaccion.egreso.add = true;\r\n            } else if (metodo == \"cerrar\") {\r\n                this.transaccion.egreso.add = false;\r\n            } else if (metodo == \"crear\") {\r\n                if (\r\n                    this.edit.egreso.cantidad.trim() === \"\" ||\r\n                    this.edit.egreso.precio.trim() === \"\"\r\n                ) {\r\n                    toastr.error(\r\n                        \"Todos lo campos son obligatorios\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                } else {\r\n                    let egresos = this.modales.modal_egreso.filter(\r\n                        x => x.tipo == \"egreso\"\r\n                    );\r\n                    let id = this.transacciones.length + 1;\r\n                    let ultimo = egresos.length - 1;\r\n                    this.edit.egreso.total = Number(\r\n                        this.edit.egreso.cantidad * this.edit.egreso.precio\r\n                    );\r\n\r\n                    let array = {\r\n                        identificacion: id,\r\n                        tipo: \"egreso\",\r\n                        fecha: \"\",\r\n                        movimiento: \"\",\r\n                        egreso_cantidad: this.edit.egreso.cantidad,\r\n                        egreso_precio: this.edit.egreso.precio,\r\n                        egreso_total: this.edit.egreso.total,\r\n                        existencia_cantidad: this.transaccion.existencia\r\n                            .cantidad,\r\n                        existencia_precio: this.transaccion.existencia.precio,\r\n                        existencia_total: \"\"\r\n                    };\r\n                    this.modales.modal_egreso.splice(ultimo + 1, 0, array);\r\n                    this.edit.egreso.cantidad = \"\";\r\n                    this.edit.egreso.precio = \"\";\r\n                    this.edit.egreso.total = \"\";\r\n                    this.transaccion.egreso.add = false;\r\n                }\r\n            }\r\n        },\r\n        agregarEgreso(tipo) {\r\n            if (\r\n                this.transaccion.egreso.cantidad.trim() === \"\" ||\r\n                this.transaccion.egreso.precio.trim() === \"\"\r\n            ) {\r\n                toastr.error(\"Todos lo campos son obligatorios\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                if (tipo == \"compra\") {\r\n                    let id = this.transacciones.length + 1;\r\n                    this.transaccion.egreso.total = Number(\r\n                        this.transaccion.egreso.cantidad *\r\n                        this.transaccion.egreso.precio\r\n                    ).toFixed(2);\r\n                    let calculo =\r\n                        Number(this.totales.total) -\r\n                        Number(this.transaccion.egreso.total);\r\n                    let array = {\r\n                        identificacion: id,\r\n                        fecha: \"\",\r\n                        movimiento: \"\",\r\n                        tipo: \"egreso_compra\",\r\n                        fecha: this.transaccion.fecha,\r\n                        movimiento: this.transaccion.movimiento,\r\n                        ingreso_cantidad: \"\",\r\n                        ingreso_precio: \"\",\r\n                        ingreso_total: \"\",\r\n                        egreso_cantidad: this.transaccion.egreso.cantidad,\r\n                        egreso_precio: this.transaccion.egreso.precio,\r\n                        egreso_total: this.transaccion.egreso.total,\r\n                        existencia_cantidad: this.transaccion.existencia\r\n                            .cantidad,\r\n                        existencia_precio: this.transaccion.existencia.precio,\r\n                        existencia_total: \"\"\r\n                    };\r\n                    this.modales.modal_devolucion_compra.push(array);\r\n\r\n                    toastr.success(\r\n                        \"Transaccion agregada correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.exis.cantidad = \"\";\r\n                    this.exis.precio = \"\";\r\n                    this.transaccion.fecha = \"\";\r\n                    this.transaccion.movimiento = \"\";\r\n                    this.transaccion.egreso.cantidad = \"\";\r\n                    this.transaccion.egreso.precio = \"\";\r\n                    this.transaccion.egreso.total = \"\";\r\n                    this.transaccion.existencia.cantidad = \"\";\r\n                    this.transaccion.existencia.precio = \"\";\r\n\r\n                    return;\r\n                }\r\n                let egreso = this.modales.modal_egreso.filter(\r\n                    x => x.tipo == \"egreso\"\r\n                );\r\n                let id = this.transacciones.length + 1;\r\n                if (egreso.length == 0) {\r\n                    this.transaccion.egreso.total = Number(\r\n                        this.transaccion.egreso.cantidad *\r\n                        this.transaccion.egreso.precio\r\n                    ).toFixed(2);\r\n                    let calculo =\r\n                        Number(this.totales.total) -\r\n                        Number(this.transaccion.egreso.total);\r\n                    let array = {\r\n                        identificacion: id,\r\n                        fecha: \"\",\r\n                        movimiento: \"\",\r\n                        tipo: \"egreso\",\r\n                        fecha: this.transaccion.fecha,\r\n                        movimiento: this.transaccion.movimiento,\r\n                        ingreso_cantidad: \"\",\r\n                        ingreso_precio: \"\",\r\n                        ingreso_total: \"\",\r\n                        egreso_cantidad: this.transaccion.egreso.cantidad,\r\n                        egreso_precio: this.transaccion.egreso.precio,\r\n                        egreso_total: this.transaccion.egreso.total,\r\n                        existencia_cantidad: this.transaccion.existencia\r\n                            .cantidad,\r\n                        existencia_precio: this.transaccion.existencia.precio,\r\n                        existencia_total: \"\"\r\n                    };\r\n                    this.modales.modal_egreso.unshift(array);\r\n                    toastr.success(\r\n                        \"Transaccion agregada correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.exis.cantidad = \"\";\r\n                    this.exis.precio = \"\";\r\n                    this.transaccion.fecha = \"\";\r\n                    this.transaccion.movimiento = \"\";\r\n                    this.transaccion.egreso.cantidad = \"\";\r\n                    this.transaccion.egreso.precio = \"\";\r\n                    this.transaccion.egreso.total = \"\";\r\n                    this.transaccion.existencia.cantidad = \"\";\r\n                    this.transaccion.existencia.precio = \"\";\r\n                    this.transaccion.egreso.active = true;\r\n                } else {\r\n                    let egresos = this.modales.modal_egreso.filter(\r\n                        x => x.tipo == \"egreso\"\r\n                    );\r\n\r\n                    let ultimo = egresos.length - 1;\r\n\r\n                    let total = Number(\r\n                        this.modales.modal_egreso[ultimo].existencia_total\r\n                    );\r\n                    this.transaccion.egreso.total = Number(\r\n                        this.transaccion.egreso.cantidad *\r\n                        this.transaccion.egreso.precio\r\n                    ).toFixed(2);\r\n                    let calculo = total - Number(this.transaccion.egreso.total);\r\n                    let array = {\r\n                        identificacion: id,\r\n                        fecha: \"\",\r\n                        movimiento: \"\",\r\n                        tipo: \"egreso\",\r\n                        fecha: this.transaccion.fecha,\r\n                        movimiento: this.transaccion.movimiento,\r\n                        ingreso_cantidad: \"\",\r\n                        ingreso_precio: \"\",\r\n                        ingreso_total: \"\",\r\n                        egreso_cantidad: this.transaccion.egreso.cantidad,\r\n                        egreso_precio: this.transaccion.egreso.precio,\r\n                        egreso_total: this.transaccion.egreso.total,\r\n                        existencia_cantidad: this.transaccion.existencia\r\n                            .cantidad,\r\n                        existencia_precio: this.transaccion.existencia.precio,\r\n                        existencia_total: \"\"\r\n                    };\r\n                    this.modales.modal_egreso.splice(ultimo + 1, 0, array);\r\n\r\n                    toastr.success(\r\n                        \"Transaccion agregada correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.exis.cantidad = \"\";\r\n                    this.exis.precio = \"\";\r\n                    this.transaccion.fecha = \"\";\r\n                    this.transaccion.movimiento = \"\";\r\n                    this.transaccion.egreso.cantidad = \"\";\r\n                    this.transaccion.egreso.precio = \"\";\r\n                    this.transaccion.egreso.total = \"\";\r\n                    this.transaccion.existencia.cantidad = \"\";\r\n                    this.transaccion.existencia.precio = \"\";\r\n                }\r\n            }\r\n        },\r\n\r\n        agregarEgresoNew(tipo) {\r\n            if (\r\n                this.transaccion.egreso.cantidad.trim() === \"\" ||\r\n                this.transaccion.egreso.precio.trim() === \"\"\r\n            ) {\r\n                toastr.error(\r\n                    \"Cantidad y Precio son obligatorios\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                let transacciones = this.transacciones;\r\n\r\n                let index = this.actuegreso.index;\r\n\r\n                let ultimo = this.egresos.length - 1;\r\n\r\n                this.transaccion.egreso.total = Number(\r\n                    this.transaccion.egreso.cantidad *\r\n                    this.transaccion.egreso.precio\r\n                ).toFixed(2);\r\n\r\n                let array = {\r\n                    identificacion: index,\r\n                    fecha: \"\",\r\n                    movimiento: \"\",\r\n                    tipo: \"egreso\",\r\n                    fecha: this.transaccion.fecha,\r\n                    movimiento: this.transaccion.movimiento,\r\n                    ingreso_cantidad: \"\",\r\n                    ingreso_precio: \"\",\r\n                    ingreso_total: \"\",\r\n                    egreso_cantidad: this.transaccion.egreso.cantidad,\r\n                    egreso_precio: this.transaccion.egreso.precio,\r\n                    egreso_total: this.transaccion.egreso.total,\r\n                    existencia_cantidad: this.transaccion.existencia.cantidad,\r\n                    existencia_precio: this.transaccion.existencia.precio,\r\n                    existencia_total: \"\"\r\n                };\r\n                this.egresos.splice(ultimo + 1, 0, array);\r\n                this.transaccion.egreso.edit = false;\r\n\r\n                toastr.success(\r\n                    \"Transaccion agregada correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.exis.cantidad = \"\";\r\n                this.exis.precio = \"\";\r\n                this.transaccion.fecha = \"\";\r\n                this.transaccion.movimiento = \"\";\r\n                this.transaccion.egreso.cantidad = \"\";\r\n                this.transaccion.egreso.precio = \"\";\r\n                this.transaccion.egreso.total = \"\";\r\n                this.transaccion.existencia.cantidad = \"\";\r\n                this.transaccion.existencia.precio = \"\";\r\n            }\r\n        },\r\n        existenciaEgreso(tipo) {\r\n            let id = this.transacciones.length + 1;\r\n            var existencia = {\r\n                identificador: id,\r\n                fecha: \"\",\r\n                movimiento: \"\",\r\n                tipo: \"existencia\",\r\n                ingreso_cantidad: \"\",\r\n                ingreso_precio: \"\",\r\n                ingreso_total: \"\",\r\n                egreso_cantidad: \"\",\r\n                egreso_precio: \"\",\r\n                egreso_total: \"\",\r\n                existencia_cantidad: this.exis.cantidad,\r\n                existencia_precio: this.exis.precio,\r\n                existencia_total: \"\"\r\n            };\r\n            if (tipo == \"compra\") {\r\n                this.modales.modal_devolucion_compra.unshift(existencia);\r\n            } else {\r\n                this.modales.modal_egreso.push(existencia);\r\n            }\r\n\r\n            toastr.success(\"Agregado\", \"SmartLearn\", {\r\n                timeOut: \"3000\"\r\n            });\r\n            this.exis.cantidad = \"\";\r\n            this.exis.precio = \"\";\r\n            this.modales.existencia_ingreso = false;\r\n        },\r\n        exisEgresoAct(tipo) {\r\n            let id = this.transacciones.length + 1;\r\n            var existencia = {\r\n                identificador: id,\r\n                tipo: \"existencia\",\r\n                fecha: \"\",\r\n                movimiento: \"\",\r\n                ingreso_cantidad: \"\",\r\n                ingreso_precio: \"\",\r\n                ingreso_total: \"\",\r\n                egreso_cantidad: \"\",\r\n                egreso_precio: \"\",\r\n                egreso_total: \"\",\r\n                existencia_cantidad: this.exis.cantidad,\r\n                existencia_precio: this.exis.precio,\r\n                existencia_total: \"\"\r\n            };\r\n            if (tipo == \"compra\") {\r\n                this.egresos.unshift(existencia);\r\n            } else {\r\n                this.egresos.push(existencia);\r\n            }\r\n\r\n            toastr.success(\"Agregado\", \"SmartLearn\", {\r\n                timeOut: \"3000\"\r\n            });\r\n            this.exis.cantidad = \"\";\r\n            this.exis.precio = \"\";\r\n            this.modales.existencia_ingreso = false;\r\n        },\r\n        agregarEgresos() {\r\n            let egresos = this.modales.modal_egreso.filter(\r\n                x => x.tipo == \"egreso\"\r\n            );\r\n            let u = egresos.length - 1;\r\n            let existencia_total = JSON.parse(\r\n                JSON.stringify(egresos[u].existencia_total)\r\n            );\r\n            let iden = this.transacciones.length + 1;\r\n            let exis = this.modales.modal_egreso.filter(\r\n                x => x.tipo == \"existencia\"\r\n            );\r\n            let conteo = this.modales.modal_egreso.filter(\r\n                x => x.tipo == \"existencia\"\r\n            );\r\n            let existencias_egresos = this.modales.modal_egreso.filter(\r\n                x =>\r\n                    x.tipo == \"egreso\" &&\r\n                    x.existencia_cantidad > 0 &&\r\n                    x.existencia_cantidad !== \"\"\r\n            );\r\n            existencias_egresos.forEach(function (existencia, id) {\r\n                let agregar = {\r\n                    identificador: iden,\r\n                    tipo: \"existencia\",\r\n                    fecha: \"\",\r\n                    movimiento: \"\",\r\n                    tipo: \"existencia\",\r\n                    ingreso_cantidad: \"\",\r\n                    ingreso_precio: \"\",\r\n                    ingreso_total: \"\",\r\n                    egreso_cantidad: \"\",\r\n                    egreso_precio: \"\",\r\n                    egreso_total: \"\",\r\n                    existencia_cantidad: existencia.existencia_cantidad,\r\n                    existencia_precio: existencia.existencia_precio,\r\n                    existencia_total: \"\"\r\n                };\r\n                exis.unshift(agregar);\r\n            });\r\n\r\n            this.existencias = JSON.parse(JSON.stringify(exis));\r\n\r\n            let exi_total = 0;\r\n\r\n            exis.forEach(function (existencia, i) {\r\n                let cantidad = existencia.existencia_cantidad;\r\n                let precio = existencia.existencia_precio;\r\n\r\n                let subtotal = Number(cantidad) * Number(precio);\r\n\r\n                exi_total += Number(subtotal);\r\n            });\r\n\r\n            let ultimo = this.modales.modal_egreso.length - 1;\r\n\r\n            this.modales.modal_egreso[\r\n                ultimo\r\n            ].existencia_total = exi_total.toFixed(2);\r\n            this.totales.total = exi_total;\r\n            console.log(exi_total);\r\n\r\n            this.transacciones.push(this.modales.modal_egreso);\r\n            this.modales.modal_egreso = [];\r\n            $(\"#egreso\").modal(\"hide\");\r\n\r\n            this.transaccion.fecha = \"\";\r\n            this.transaccion.movimiento = \"\";\r\n            this.transaccion.egreso.cantidad = \"\";\r\n            this.transaccion.egreso.precio = \"\";\r\n            this.transaccion.egreso.total = \"\";\r\n            this.sumasTotales();\r\n            this.ultimaExistencia();\r\n        },\r\n        agregarDevolucionCompra() {\r\n            let egresos = this.modales.modal_devolucion_compra.filter(\r\n                x => x.tipo == \"egreso_compra\"\r\n            );\r\n            let u = egresos.length - 1;\r\n            let existencia_total = JSON.parse(\r\n                JSON.stringify(egresos[u].existencia_total)\r\n            );\r\n            let iden = this.transacciones.length + 1;\r\n\r\n            let exis = this.modales.modal_devolucion_compra.filter(\r\n                x => x.tipo == \"existencia\"\r\n            );\r\n            let conteo = this.modales.modal_devolucion_compra.filter(\r\n                x => x.tipo == \"existencia\"\r\n            );\r\n\r\n            let existencias_egresos = this.modales.modal_devolucion_compra.filter(\r\n                x => x.tipo == \"egreso_compra\" && x.existencia_cantidad > 0\r\n            );\r\n            existencias_egresos.forEach(function (existencia, id) {\r\n                let agregar = {\r\n                    identificador: iden,\r\n                    tipo: \"existencia\",\r\n                    fecha: \"\",\r\n                    movimiento: \"\",\r\n                    tipo: \"existencia\",\r\n                    ingreso_cantidad: \"\",\r\n                    ingreso_precio: \"\",\r\n                    ingreso_total: \"\",\r\n                    egreso_cantidad: \"\",\r\n                    egreso_precio: \"\",\r\n                    egreso_total: \"\",\r\n                    existencia_cantidad: existencia.existencia_cantidad,\r\n                    existencia_precio: existencia.existencia_precio,\r\n                    existencia_total: \"\"\r\n                };\r\n                exis.push(agregar);\r\n            });\r\n\r\n            let exi_total = 0;\r\n\r\n            exis.forEach(function (existencia, i) {\r\n                let cantidad = existencia.existencia_cantidad;\r\n                let precio = existencia.existencia_precio;\r\n\r\n                let subtotal = Number(cantidad) * Number(precio);\r\n\r\n                exi_total += Number(subtotal);\r\n            });\r\n\r\n            let ultimo = this.modales.modal_devolucion_compra.length - 1;\r\n\r\n            this.modales.modal_devolucion_compra[\r\n                ultimo\r\n            ].existencia_total = exi_total.toFixed(2);\r\n            this.totales.total = exi_total;\r\n            console.log(exi_total);\r\n            this.existencias = JSON.parse(JSON.stringify(exis));\r\n\r\n            this.transacciones.push(this.modales.modal_devolucion_compra);\r\n            this.modales.modal_devolucion_compra = [];\r\n            $(\"#egreso\").modal(\"hide\");\r\n\r\n            this.transaccion.fecha = \"\";\r\n            this.transaccion.movimiento = \"\";\r\n            this.transaccion.egreso.cantidad = \"\";\r\n            this.transaccion.egreso.precio = \"\";\r\n            this.transaccion.egreso.total = \"\";\r\n            this.sumasTotales();\r\n            this.ultimaExistencia();\r\n        },\r\n        actualEgre(id, tipo) {\r\n            if (tipo == \"devolucion_compra\") {\r\n                let i = id;\r\n                let totales = this.totales.total;\r\n                let egresos = this.modales.modal_devolucion_compra.filter(\r\n                    x => x.tipo == \"egreso_compra\"\r\n                );\r\n                let ul = egresos.length - 1;\r\n                let exis = Number(egresos[ul].existencia_total);\r\n\r\n                let cantidad = Number(\r\n                    this.modales.modal_devolucion_compra[i].egreso_cantidad\r\n                );\r\n                let precio = Number(\r\n                    this.modales.modal_devolucion_compra[i].egreso_precio\r\n                );\r\n                let total1 = this.modales.modal_devolucion_compra[i]\r\n                    .egreso_total;\r\n                let multiplicacion = cantidad * precio;\r\n\r\n                this.modales.modal_devolucion_compra[\r\n                    i\r\n                ].egreso_total = multiplicacion.toFixed(2);\r\n                if (total1 > multiplicacion) {\r\n                    let dife = total1 - multiplicacion;\r\n                    let suma = exis + dife;\r\n                    this.totales.subtotal = suma;\r\n                } else {\r\n                    let adi = multiplicacion - total1;\r\n                    let suma = exis - adi;\r\n                    this.totales.subtotal = suma;\r\n                }\r\n\r\n                toastr.error(\"Datos Actualizado\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            let i = id;\r\n            let totales = this.totales.total;\r\n            let egresos = this.modales.modal_egreso.filter(\r\n                x => x.tipo == \"egreso\"\r\n            );\r\n            if (egresos.length >= 1) {\r\n                let cantidad = Number(\r\n                    this.modales.modal_egreso[i].egreso_cantidad\r\n                );\r\n                let precio = Number(this.modales.modal_egreso[i].egreso_precio);\r\n                let total1 = this.modales.modal_egreso[i].egreso_total;\r\n                let multiplicacion = cantidad * precio;\r\n                this.modales.modal_egreso[\r\n                    i\r\n                ].egreso_total = multiplicacion.toFixed(2);\r\n            }\r\n        },\r\n        totaEgre(id) {\r\n            let i = id;\r\n            let exis = this.totales.total;\r\n            let cantidad = Number(this.egresos[i].egreso_cantidad);\r\n            let precio = Number(this.egresos[i].egreso_precio);\r\n            let total1 = this.egresos[i].egreso_total;\r\n            let multiplicacion = cantidad * precio;\r\n\r\n            this.egresos[i].egreso_total = multiplicacion.toFixed(2);\r\n        },\r\n        ActualizarEgresos() {\r\n            let exis = [];\r\n            let existencias_egresos = this.egresos.filter(\r\n                x =>\r\n                    (x.tipo == \"egreso\" &&\r\n                        (x.existencia_cantidad > 0) &\r\n                        (x.existencia_cantidad !== \"\")) ||\r\n                    (x.tipo == \"egreso_compra\" &&\r\n                        (x.existencia_cantidad > 0) &\r\n                        (x.existencia_cantidad !== \"\"))\r\n            );\r\n            existencias_egresos.forEach(function (existencia, id) {\r\n                let agregar = {\r\n                    tipo: \"existencia\",\r\n                    fecha: \"\",\r\n                    movimiento: \"\",\r\n                    tipo: \"existencia\",\r\n                    ingreso_cantidad: \"\",\r\n                    ingreso_precio: \"\",\r\n                    ingreso_total: \"\",\r\n                    egreso_cantidad: \"\",\r\n                    egreso_precio: \"\",\r\n                    egreso_total: \"\",\r\n                    existencia_cantidad: existencia.existencia_cantidad,\r\n                    existencia_precio: existencia.existencia_precio,\r\n                    existencia_total: \"\"\r\n                };\r\n                exis.push(agregar);\r\n            });\r\n            console.log(exis + \"inu\");\r\n\r\n            existencias_egresos.forEach(function (egreso, id) {\r\n                let cantidad = egreso.egreso_cantidad;\r\n                let precio = egreso.egreso_precio;\r\n                let total = Number(cantidad * precio);\r\n                existencias_egresos[id].egreso_total = total.toFixed(2);\r\n            });\r\n\r\n            let existencias_filtro = this.egresos.filter(\r\n                x => x.tipo == \"existencia\"\r\n            );\r\n            if (existencias_filtro.length >= 1) {\r\n                filtro_existencias = exis.concat(existencias_filtro);\r\n                console.log(\"filtros\");\r\n            } else {\r\n                console.log(exis);\r\n                filtro_existencias = exis;\r\n            }\r\n            let exi_total = 0;\r\n            this.existencias = JSON.parse(JSON.stringify(filtro_existencias));\r\n            filtro_existencias.forEach(function (existencia, i) {\r\n                let cantidad = existencia.existencia_cantidad;\r\n                let precio = existencia.existencia_precio;\r\n\r\n                let subtotal = Number(cantidad) * Number(precio);\r\n\r\n                exi_total += Number(subtotal);\r\n            });\r\n\r\n            let ultimo = this.egresos.length - 1;\r\n\r\n            this.egresos[ultimo].existencia_total = exi_total.toFixed(2);\r\n\r\n            let index = this.actuegreso.index;\r\n            this.transacciones[index] = this.egresos;\r\n            this.egresos = [];\r\n            this.actuegreso.estado = false;\r\n            this.actuegreso.tipo = false;\r\n            this.actuegreso.index = \"\";\r\n            this.sumasTotales();\r\n            this.ultimaExistencia();\r\n        },\r\n        borrarEgresoAct(index, tipo) {\r\n            let transacciones = this.transacciones;\r\n            let puesto = this.actuegreso.index;\r\n            let id = index;\r\n            let ultimo = this.modales.modal_devolucion_compra.length - 1;\r\n\r\n            if (tipo == \"existencia\") {\r\n                if (this.egresos[index].tipo == \"existencia\") {\r\n                    this.egresos.splice(index, 1);\r\n                }\r\n                return;\r\n            }\r\n            if (tipo == \"egreso_compra\") {\r\n                if (this.modales.egresos[id].tipo == \"existencia\") {\r\n                    this.modales.egresos.splice(index, 1);\r\n                } else if (\r\n                    id == ultimo &&\r\n                    this.modales.egresos[id].tipo == \"egreso_compra\"\r\n                ) {\r\n                    console.log(\"No puede eliminar todos los egresos\");\r\n                }\r\n                return;\r\n            }\r\n\r\n            let egresos = this.egresos.filter(x => x.tipo == \"egreso\");\r\n\r\n            //ELIMINAR UN EGRESO\r\n            if (\r\n                this.egresos[id].tipo == \"existencia\" &&\r\n                this.egresos[id].existencia_total > 0\r\n            ) {\r\n                this.egresos.splice(index, 1);\r\n            } else if (\r\n                this.egresos[id].tipo == \"existencia\" &&\r\n                this.egresos[id].existencia_total == \"\"\r\n            ) {\r\n                this.egresos.splice(index, 1);\r\n            } else if (\r\n                this.egresos[id].tipo == \"egreso\" &&\r\n                egresos.length == 1\r\n            ) {\r\n                console.log(\"No puede eliminar todos los egresos\");\r\n            } else if (\r\n                this.egresos[id].tipo == \"egreso\" &&\r\n                this.egresos[id].existencia_total > 0\r\n            ) {\r\n                this.egresos.splice(index, 1);\r\n            } else if (\r\n                this.egresos[id].tipo == \"egreso\" &&\r\n                this.egresos[id].existencia_total == \"\"\r\n            ) {\r\n                this.egresos.splice(index, 1);\r\n            }\r\n        },\r\n        borrarEgreso(index, tipo) {\r\n            let id = index;\r\n            let ultimo = this.modales.modal_devolucion_compra.length - 1;\r\n\r\n            if (tipo == \"egreso_compra\") {\r\n                if (\r\n                    this.modales.modal_devolucion_compra[id].tipo ==\r\n                    \"existencia\"\r\n                ) {\r\n                    this.modales.modal_devolucion_compra.splice(index, 1);\r\n                } else if (\r\n                    id == ultimo &&\r\n                    this.modales.modal_devolucion_compra[id].tipo ==\r\n                    \"egreso_compra\"\r\n                ) {\r\n                    let total = this.modales.modal_devolucion_compra[id]\r\n                        .existencia_total;\r\n                    this.modales.modal_devolucion_compra.splice(index, 1);\r\n                }\r\n                return;\r\n            }\r\n            let egresos = this.modales.modal_egreso.filter(\r\n                x => x.tipo == \"egreso\"\r\n            );\r\n\r\n            //ELIMINAR UN EGRESO\r\n            if (this.modales.modal_egreso[id].tipo == \"existencia\") {\r\n                this.modales.modal_egreso.splice(index, 1);\r\n            } else if (this.modales.modal_egreso[id].tipo == \"egreso\") {\r\n                this.modales.modal_egreso.splice(index, 1);\r\n            }\r\n        },\r\n        agregarDevolucion() {\r\n            if (\r\n                this.transaccion.fecha.trim() === \"\" ||\r\n                this.transaccion.movimiento.trim() === \"\" ||\r\n                this.transaccion.ingreso.cantidad.trim() === \"\" ||\r\n                this.transaccion.ingreso.precio.trim() === \"\"\r\n            ) {\r\n                toastr.error(\r\n                    \"Todos los campos son obligatorios\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                let id = this.transacciones.length + 1;\r\n\r\n                this.transaccion.ingreso.total = Number(\r\n                    this.transaccion.ingreso.cantidad *\r\n                    this.transaccion.ingreso.precio\r\n                ).toFixed(2);\r\n                let calculo =\r\n                    Number(this.transaccion.ingreso.total) +\r\n                    Number(this.totales.total);\r\n                let array = {\r\n                    identificador: id,\r\n                    fecha: \"\",\r\n                    movimiento: \"\",\r\n                    tipo: \"ingreso_venta\",\r\n                    fecha: this.transaccion.fecha,\r\n                    movimiento: this.transaccion.movimiento,\r\n                    ingreso_cantidad: this.transaccion.ingreso.cantidad,\r\n                    ingreso_precio: this.transaccion.ingreso.precio,\r\n                    ingreso_total: this.transaccion.ingreso.total,\r\n                    egreso_cantidad: \"\",\r\n                    egreso_precio: \"\",\r\n                    egreso_total: \"\",\r\n                    existencia_cantidad: this.transaccion.existencia.cantidad,\r\n                    existencia_precio: this.transaccion.existencia.precio,\r\n                    existencia_total: \"\"\r\n                };\r\n\r\n                this.modales.modal_devolucion_venta.unshift(array);\r\n\r\n                toastr.success(\r\n                    \"Transaccion agregada correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.transaccion.exis.cantidad = this.transaccion.existencia.cantidad;\r\n                this.transaccion.exis.precio = this.transaccion.existencia.precio;\r\n                this.transaccion.fecha = \"\";\r\n                this.transaccion.movimiento = \"\";\r\n                this.transaccion.ingreso.cantidad = \"\";\r\n                this.transaccion.ingreso.precio = \"\";\r\n                this.transaccion.ingreso.total = \"\";\r\n                this.transaccion.existencia.precio = \"\";\r\n                this.transaccion.existencia.cantidad = \"\";\r\n            }\r\n        },\r\n\r\n        existenciaVenta() {\r\n            let id = this.transacciones.length + 1;\r\n            let ultimo = this.modales.modal_devolucion_venta.length - 1;\r\n            let total = this.modales.modal_devolucion_venta[ultimo]\r\n                .existencia_total;\r\n            let existencia = {\r\n                identificador: id,\r\n                fecha: \"\",\r\n                movimiento: \"\",\r\n                tipo: \"existencia\",\r\n                ingreso_cantidad: \"\",\r\n                ingreso_precio: \"\",\r\n                ingreso_total: \"\",\r\n                egreso_cantidad: \"\",\r\n                egreso_precio: \"\",\r\n                egreso_total: \"\",\r\n                existencia_cantidad: this.exis.cantidad,\r\n                existencia_precio: this.exis.precio,\r\n                existencia_total: \"\"\r\n            };\r\n            this.modales.modal_devolucion_venta.push(existencia);\r\n            this.modales.modal_devolucion_venta[ultimo].existencia_total = \"\";\r\n            toastr.success(\"Agregado\", \"SmartLearn\", {\r\n                timeOut: \"3000\"\r\n            });\r\n            this.exis.cantidad = \"\";\r\n            this.exis.precio = \"\";\r\n            this.transaccion.fecha = \"\";\r\n            this.transaccion.movimiento = \"\";\r\n            this.transaccion.ingreso.cantidad = \"\";\r\n            this.transaccion.ingreso.precio = \"\";\r\n            this.transaccion.ingreso.total = \"\";\r\n            // }\r\n        },\r\n        agregarNewEgreso(tipo) {\r\n            if (tipo == \"agregar\") {\r\n                this.transaccion.egreso.edit = true;\r\n            } else {\r\n                this.transaccion.egreso.edit = false;\r\n                this.transaccion.egreso.cantidad = \"\";\r\n                this.transaccion.egreso.precio = \"\";\r\n            }\r\n        },\r\n        guardarKardex: function () {\r\n            if (this.transacciones.length == 0) {\r\n                toastr.error(\r\n                    \"Debe haber al menos un registro en el Kardex\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (\r\n                this.nombre.trim() === \"\" ||\r\n                this.producto.trim() === \"\"\r\n            ) {\r\n                toastr.error(\"Nombre & Producto es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let _this = this;\r\n                let url = \"/sistema/admin/taller/kardex-fifo\";\r\n                axios\r\n                    .post(url, {\r\n                        id: _this.id_taller,\r\n                        nombre: _this.nombre,\r\n                        producto_id: _this.producto_id,\r\n                        producto: _this.producto,\r\n                        kardex_fifo: _this.transacciones,\r\n                        inv_inicial_cantidad:\r\n                            _this.prueba.cantidad.inventario_inicial,\r\n                        adquisicion_cantidad:\r\n                            _this.prueba.cantidad.adquicisiones,\r\n                        ventas_cantidad: _this.prueba.cantidad.ventas,\r\n                        inv_final_cantidad:\r\n                            _this.prueba.cantidad.inventario_final,\r\n                        inv_inicial_precio:\r\n                            _this.prueba.precio.inventario_inicial,\r\n                        adquisicion_precio: _this.prueba.precio.adquicisiones,\r\n                        ventas_precio: _this.prueba.precio.ventas,\r\n                        inv_final_precio: _this.prueba.precio.inventario_final\r\n                    })\r\n                    .then(response => {\r\n                        if (response.data.estado == \"guardado\") {\r\n                            toastr.success(\r\n                                \"Kardex creado correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                        } else if (response.data.estado == \"actualizado\") {\r\n                            toastr.warning(\r\n                                \"kardex actualizado correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                        }\r\n                    })\r\n                    .catch(function (error) { });\r\n            }\r\n        },\r\n        obtenerKardexFifo: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/kardex-obtener-fifo\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller,\r\n                    producto_id: _this.producto_id\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        toastr.info(\r\n                            \"Kardex Fifo cargado correctamente\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                        _this.transacciones = response.data.kardex_fifo;\r\n                        _this.nombre = response.data.informacion.nombre;\r\n                        _this.producto = response.data.informacion.producto;\r\n                        _this.prueba.cantidad.inventario_inicial =\r\n                            response.data.informacion.inv_inicial_cantidad;\r\n                        _this.prueba.cantidad.adquicisiones =\r\n                            response.data.informacion.adquisicion_cantidad;\r\n                        _this.prueba.cantidad.ventas =\r\n                            response.data.informacion.ventas_cantidad;\r\n                        _this.prueba.cantidad.inventario_final =\r\n                            response.data.informacion.inv_final_cantidad;\r\n                        _this.prueba.precio.inventario_inicial =\r\n                            response.data.informacion.inv_inicial_precio;\r\n                        _this.prueba.precio.adquicisiones =\r\n                            response.data.informacion.adquisicion_precio;\r\n                        _this.prueba.precio.ventas =\r\n                            response.data.informacion.ventas_precio;\r\n                        _this.prueba.precio.inventario_final =\r\n                            response.data.informacion.inv_final_precio;\r\n\r\n                        _this.datos_transacciones =\r\n                            response.data.transacciones.transacciones;\r\n                        console.log(\"nO SE RECIBIO NADA\");\r\n\r\n                        this.sumasTotales();\r\n                        this.ultimaExistencia();\r\n                    } else if (response.data.datos == false) {\r\n                        _this.transacciones = [];\r\n                        _this.nombre = \"\";\r\n                        _this.producto = \"\";\r\n                        _this.prueba.cantidad.inventario_inicial = \"\";\r\n                        _this.prueba.cantidad.adquicisiones = \"\";\r\n                        _this.prueba.cantidad.ventas = \"\";\r\n                        _this.prueba.cantidad.inventario_final = \"\";\r\n                        _this.prueba.precio.inventario_inicial = \"\";\r\n                        _this.prueba.precio.adquicisiones = \"\";\r\n                        _this.prueba.precio.ventas = \"\";\r\n                        _this.prueba.precio.inventario_final = \"\";\r\n                        _this.datos_transacciones =\r\n                            response.data.transacciones.transacciones;\r\n                        this.sumasTotales();\r\n                        this.ultimaExistencia();\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        },\r\n        borrarTransaccion(index, id) {\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar este registro??\",\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro se elimino\",\r\n                        \"success\"\r\n                    );\r\n                    let u = this.transacciones.length - 1;\r\n\r\n                    if (u == index) {\r\n                        this.transacciones.splice(index, 1);\r\n                        if (this.transacciones.length == 0) {\r\n                            this.sumasTotales();\r\n                            this.ultimaExistencia();\r\n                            return;\r\n                        }\r\n\r\n                        let last = this.transacciones.length - 1;\r\n                        let ultima_transaccion = JSON.parse(\r\n                            JSON.stringify(this.transacciones[last])\r\n                        );\r\n\r\n                        let consulta1 = ultima_transaccion.filter(\r\n                            x => x.tipo == \"ingreso\"\r\n                        );\r\n\r\n                        if (consulta1.length >= 1) {\r\n                            let ingreso = ultima_transaccion.filter(\r\n                                x => x.tipo == \"ingreso\"\r\n                            );\r\n                            let filtro_existencias = ultima_transaccion.filter(\r\n                                x => x.tipo == \"existencia\"\r\n                            );\r\n                            let existencia = {\r\n                                tipo: \"existencia\",\r\n                                existencia_cantidad:\r\n                                    ingreso[0].existencia_cantidad,\r\n                                existencia_precio: ingreso[0].existencia_precio\r\n                            };\r\n                            filtro_existencias.push(existencia);\r\n                            this.existencias = JSON.parse(\r\n                                JSON.stringify(filtro_existencias)\r\n                            );\r\n                            this.sumasTotales();\r\n                            this.ultimaExistencia();\r\n\r\n                            return;\r\n                        }\r\n                        let consulta2 = ultima_transaccion.filter(\r\n                            x => x.tipo == \"egreso\"\r\n                        );\r\n\r\n                        if (consulta2.length >= 1) {\r\n                            let exis = ultima_transaccion.filter(\r\n                                x => x.tipo == \"existencia\"\r\n                            );\r\n                            let existencias_egresos = ultima_transaccion.filter(\r\n                                x =>\r\n                                    x.tipo == \"egreso\" &&\r\n                                    x.existencia_cantidad > 0\r\n                            );\r\n                            existencias_egresos.forEach(function (\r\n                                existencia,\r\n                                id\r\n                            ) {\r\n                                let agregar = {\r\n                                    tipo: \"existencia\",\r\n                                    existencia_cantidad:\r\n                                        existencia.existencia_cantidad,\r\n                                    existencia_precio:\r\n                                        existencia.existencia_precio,\r\n                                    existencia_total: \"\"\r\n                                };\r\n                                exis.unshift(agregar);\r\n                            });\r\n                            this.existencias = JSON.parse(JSON.stringify(exis));\r\n                            this.sumasTotales();\r\n                            this.ultimaExistencia();\r\n\r\n                            return;\r\n                        }\r\n                        let consulta3 = ultima_transaccion.filter(\r\n                            x => x.tipo == \"egreso_compra\"\r\n                        );\r\n\r\n                        if (consulta3.length >= 1) {\r\n                            let egresos = ultima_transaccion.filter(\r\n                                x => x.tipo == \"egreso_compra\"\r\n                            );\r\n                            let exis = ultima_transaccion.filter(\r\n                                x => x.tipo == \"existencia\"\r\n                            );\r\n                            let existencias_egresos = ultima_transaccion.filter(\r\n                                x =>\r\n                                    x.tipo == \"egreso_compra\" &&\r\n                                    x.existencia_cantidad > 0\r\n                            );\r\n                            existencias_egresos.forEach(function (\r\n                                existencia,\r\n                                id\r\n                            ) {\r\n                                let agregar = {\r\n                                    tipo: \"existencia\",\r\n                                    existencia_cantidad:\r\n                                        existencia.existencia_cantidad,\r\n                                    existencia_precio:\r\n                                        existencia.existencia_precio,\r\n                                    existencia_total: \"\"\r\n                                };\r\n                                exis.push(agregar);\r\n                            });\r\n                            this.existencias = JSON.parse(JSON.stringify(exis));\r\n                            this.sumasTotales();\r\n                            this.ultimaExistencia();\r\n\r\n                            return;\r\n                        }\r\n                        let consulta4 = ultima_transaccion.filter(\r\n                            x => x.tipo == \"ingreso_venta\"\r\n                        );\r\n\r\n                        if (consulta4.length >= 1) {\r\n                            let venta = ultima_transaccion.filter(\r\n                                x => x.tipo == \"ingreso_venta\"\r\n                            );\r\n                            let filtro_existencias = ultima_transaccion.filter(\r\n                                x => x.tipo == \"existencia\"\r\n                            );\r\n                            let existencia = {\r\n                                tipo: \"existencia\",\r\n                                existencia_cantidad:\r\n                                    venta[0].existencia_cantidad,\r\n                                existencia_precio: venta[0].existencia_precio\r\n                            };\r\n                            filtro_existencias.unshift(existencia);\r\n                            this.existencias = JSON.parse(\r\n                                JSON.stringify(filtro_existencias)\r\n                            );\r\n                            this.sumasTotales();\r\n                            this.ultimaExistencia();\r\n\r\n                            return;\r\n                        }\r\n                        let consulta5 = ultima_transaccion.filter(\r\n                            x => x.tipo == \"inicial\"\r\n                        );\r\n\r\n                        if (consulta5.length >= 1) {\r\n                            this.existencias = [];\r\n                            this.sumasTotales();\r\n                            this.ultimaExistencia();\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        this.transacciones.splice(index, 1);\r\n                        this.sumasTotales();\r\n                        this.ultimaExistencia();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n});\r\n\r\nconst kardex_promedio = new Vue({\r\n    el: \"#kardex_promedio\",\r\n    data: {\r\n        id_taller: taller,\r\n        kardex_id: \"\",\r\n        producto: \"\",\r\n        producto_id: \"\",\r\n        nombre: \"\",\r\n        transacciones: [],\r\n        update: false,\r\n        inicial: {\r\n            fecha: \"\",\r\n            movimiento: \"\",\r\n            cantidad: \"\",\r\n            precio: \"\",\r\n            index: \"\"\r\n        },\r\n        prueba: {\r\n            cantidad: {\r\n                inventario_inicial: \"\",\r\n                adquicisiones: \"\",\r\n                ventas: \"\",\r\n                inventario_final: \"\"\r\n            },\r\n            precio: {\r\n                inventario_inicial: \"\",\r\n                adquicisiones: \"\",\r\n                ventas: \"\",\r\n                inventario_final: \"\"\r\n            }\r\n        },\r\n        ultima_existencia: [],\r\n        suman: {\r\n            ingreso_cantidad: 0,\r\n            ingreso_total: 0,\r\n            egreso_cantidad: 0,\r\n            egreso_total: 0,\r\n            muestra: 0\r\n        },\r\n        datos_transacciones: \"\",\r\n        modales: {\r\n            modal_ingreso: [],\r\n            modal_egreso: []\r\n        },\r\n        ingresos: [],\r\n        egresos: [],\r\n        transaccion: {\r\n            fecha: \"\",\r\n            movimiento: \"\",\r\n            ingreso: {\r\n                fecha: \"\",\r\n                movimiento: \"\",\r\n                cantidad: \"\",\r\n                precio: \"\",\r\n                total: \"\",\r\n                edit: false,\r\n                index: \"\"\r\n            },\r\n            egreso: {\r\n                fecha: \"\",\r\n                movimiento: \"\",\r\n                cantidad: \"\",\r\n                precio: \"\",\r\n                total: \"\",\r\n                temp: \"\",\r\n                edit: false,\r\n                index: \"\"\r\n            },\r\n            existencia: {\r\n                cantidad: \"\",\r\n                precio: \"\",\r\n                total: \"\"\r\n            }\r\n        }\r\n    },\r\n    mounted: function () {\r\n        this.obtenerKardexPromedio();\r\n    },\r\n    methods: {\r\n        calculadora() {\r\n            let propsData = {\r\n                title: \"Called from basic js\",\r\n                noteProp: [\"Note number 1\", \"Note number 2\"]\r\n            };\r\n            let component = \"example-component\";\r\n            funciones.VueSweetAlert2(component, propsData);\r\n        },\r\n        decimales(saldo) {\r\n            if (saldo !== null && saldo !== \"\" && saldo !== 0) {\r\n                let total = Number(saldo).toFixed(2);\r\n                return total;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        formatoFecha(fecha) {\r\n            if (fecha !== null) {\r\n                let date = fecha\r\n                    .split(\"-\")\r\n                    .reverse()\r\n                    .join(\"-\");\r\n                return date;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        cancelarActualizacion(tipo) {\r\n            if (tipo == \"egresos\") {\r\n                this.transaccion.egreso.index = \"\";\r\n                this.transaccion.egreso.edit = false;\r\n                this.egresos = [];\r\n            } else if (tipo == \"ingresos\") {\r\n                this.transaccion.ingreso.index = \"\";\r\n                this.transaccion.ingreso.edit = false;\r\n\r\n                this.ingresos = [];\r\n            }\r\n        },\r\n        exitenciaFinal() {\r\n            let u = this.transacciones.length - 1;\r\n            this.ultima_existencia = [\r\n                JSON.parse(JSON.stringify(this.transacciones[u]))\r\n            ];\r\n        },\r\n        sumasTotales() {\r\n            let transacciones = this.transacciones;\r\n            let in_cantidad = 0;\r\n            let in_total = 0;\r\n            let eg_cantidad = 0;\r\n            let eg_total = 0;\r\n            let conteo = transacciones.length;\r\n            if (conteo == 0) {\r\n                this.suman.ingreso_cantidad = 0;\r\n                this.suman.ingreso_total = 0;\r\n                this.suman.egreso_cantidad = 0;\r\n                this.suman.egreso_total = 0;\r\n                return;\r\n            }\r\n            //INGRESO CANTIDAD\r\n            transacciones.forEach(function (ingreso_cantidad, id) {\r\n                let temp = ingreso_cantidad.ingreso_cantidad;\r\n\r\n                if (temp != null && temp !== \"\") {\r\n                    in_cantidad += parseInt(temp);\r\n                    // console.log(temp);\r\n                }\r\n            });\r\n            this.suman.ingreso_cantidad = in_cantidad;\r\n\r\n            //INGRESO TOTAL\r\n\r\n            transacciones.forEach(function (ingreso_total, id) {\r\n                let temp1 = ingreso_total.ingreso_total;\r\n\r\n                if (temp1 != null && temp1 !== \"\") {\r\n                    in_total += Number(temp1);\r\n                    // console.log(temp1);\r\n                }\r\n            });\r\n            this.suman.ingreso_total = in_total.toFixed(2);\r\n\r\n            console.log(in_total);\r\n\r\n            //EGRESO CANTIDAD\r\n            transacciones.forEach(function (egreso_cantidad, id) {\r\n                let temp = egreso_cantidad.egreso_cantidad;\r\n\r\n                if (temp != null && temp !== \"\") {\r\n                    eg_cantidad += parseInt(temp);\r\n                    // console.log(temp);\r\n                }\r\n            });\r\n            this.suman.egreso_cantidad = eg_cantidad;\r\n\r\n            //EGRESO TOTAL\r\n\r\n            transacciones.forEach(function (egreso_total, id) {\r\n                let temp1 = egreso_total.egreso_total;\r\n\r\n                if (temp1 != null && temp1 !== \"\") {\r\n                    eg_total += Number(temp1);\r\n                    // console.log(temp1);\r\n                }\r\n            });\r\n            this.suman.egreso_total = eg_total.toFixed(2);\r\n\r\n            console.log(in_total);\r\n        },\r\n        modalInicial: function () {\r\n            this.cerrarInicial();\r\n            if (this.transacciones.length >= 1) {\r\n                let i = this.transacciones.length - 1;\r\n                console.log(this.transacciones[i]);\r\n                this.movimientos = this.transacciones[i];\r\n            }\r\n            $(\"#inicial\").modal(\"show\");\r\n        },\r\n        modalTransacciones: function () {\r\n            $(\"#ingreso-kardex\").modal(\"show\");\r\n        },\r\n        calcularTotalIngreso() {\r\n            if (\r\n                this.transaccion.ingreso.cantidad.trim() === \"\" ||\r\n                this.transaccion.ingreso.precio.trim() === \"\"\r\n            ) {\r\n                toastr.error(\r\n                    \"La Cantidad & Precio es Obligatoria\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                this.transaccion.ingreso.total = Number(\r\n                    this.transaccion.ingreso.cantidad *\r\n                    this.transaccion.ingreso.precio\r\n                ).toFixed(2);\r\n                let array = {\r\n                    tipo: \"ingreso\",\r\n                    fecha: this.transaccion.ingreso.fecha,\r\n                    movimiento: this.transaccion.ingreso.movimiento,\r\n                    ingreso_cantidad: this.transaccion.ingreso.cantidad,\r\n                    ingreso_precio: this.transaccion.ingreso.precio,\r\n                    ingreso_total: this.transaccion.ingreso.total,\r\n                    egreso_cantidad: \"\",\r\n                    egreso_precio: \"\",\r\n                    egreso_total: \"\",\r\n                    existencia_cantidad: this.transaccion.existencia.cantidad,\r\n                    existencia_precio: this.transaccion.existencia.precio,\r\n                    existencia_total: \"\"\r\n                };\r\n                this.modales.modal_ingreso.push(array);\r\n                this.transaccion.ingreso.fecha = \"\";\r\n                this.transaccion.ingreso.movimiento = \"\";\r\n                this.transaccion.ingreso.cantidad = \"\";\r\n                this.transaccion.ingreso.precio = \"\";\r\n                this.transaccion.ingreso.total = \"\";\r\n            }\r\n        },\r\n        actuaIng(id) {\r\n            let i = id;\r\n\r\n            let cantidad = Number(\r\n                this.modales.modal_ingreso[i].ingreso_cantidad\r\n            );\r\n            let precio = Number(this.modales.modal_ingreso[i].ingreso_precio);\r\n            let total1 = this.modales.modal_ingreso[i].ingreso_total;\r\n            let multiplicacion = cantidad * precio;\r\n            this.modales.modal_ingreso[\r\n                i\r\n            ].ingreso_total = multiplicacion.toFixed(2);\r\n            toastr.success(\"Datos Actualizado\", \"SmartLearn\", {\r\n                timeOut: \"3000\"\r\n            });\r\n        },\r\n        actuaEgre(id) {\r\n            let i = id;\r\n\r\n            let cantidad = Number(this.modales.modal_egreso[i].egreso_cantidad);\r\n            let precio = Number(this.modales.modal_egreso[i].egreso_precio);\r\n            let total1 = this.modales.modal_egreso[i].egreso_total;\r\n            let multiplicacion = cantidad * precio;\r\n            this.modales.modal_egreso[i].egreso_total = multiplicacion.toFixed(\r\n                2\r\n            );\r\n            toastr.success(\"Datos Actualizado\", \"SmartLearn\", {\r\n                timeOut: \"3000\"\r\n            });\r\n        },\r\n        calcularTotalEgreso() {\r\n            if (\r\n                this.transaccion.egreso.cantidad.trim() === \"\" ||\r\n                this.transaccion.egreso.precio.trim() === \"\"\r\n            ) {\r\n                toastr.error(\r\n                    \"La Cantidad & Precio es Obligatoria\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                this.transaccion.egreso.total = Number(\r\n                    this.transaccion.egreso.cantidad *\r\n                    this.transaccion.egreso.precio\r\n                ).toFixed(2);\r\n                let array = {\r\n                    tipo: \"egreso\",\r\n                    fecha: this.transaccion.egreso.fecha,\r\n                    movimiento: this.transaccion.egreso.movimiento,\r\n                    ingreso_cantidad: \"\",\r\n                    ingreso_precio: \"\",\r\n                    ingreso_total: \"\",\r\n                    egreso_cantidad: this.transaccion.egreso.cantidad,\r\n                    egreso_precio: this.transaccion.egreso.precio,\r\n                    egreso_total: this.transaccion.egreso.total,\r\n                    existencia_cantidad: this.transaccion.existencia.cantidad,\r\n                    existencia_precio: this.transaccion.existencia.precio,\r\n                    existencia_total: \"\"\r\n                };\r\n                this.modales.modal_egreso.push(array);\r\n                this.transaccion.egreso.fecha = \"\";\r\n                this.transaccion.egreso.movimiento = \"\";\r\n                this.transaccion.egreso.cantidad = \"\";\r\n                this.transaccion.egreso.precio = \"\";\r\n                this.transaccion.egreso.total = \"\";\r\n            }\r\n        },\r\n\r\n        agregarInicial() {\r\n            if (\r\n                this.inicial.fecha.trim() === \"\" ||\r\n                this.inicial.movimiento.trim() === \"\" ||\r\n                this.inicial.cantidad.trim() === \"\" ||\r\n                this.inicial.precio.trim() === \"\"\r\n            ) {\r\n                toastr.error(\r\n                    \"Todos los campos son Obligatorios\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                let cantidad = this.inicial.cantidad;\r\n                let precio = this.inicial.precio;\r\n                this.inicial.total = Number(cantidad * precio).toFixed(2);\r\n\r\n                let inicial = {\r\n                    tipo: \"inicial\",\r\n                    fecha: this.inicial.fecha,\r\n                    movimiento: this.inicial.movimiento,\r\n                    ingreso_cantidad: \"\",\r\n                    ingreso_precio: \"\",\r\n                    ingreso_total: \"\",\r\n                    egreso_cantidad: \"\",\r\n                    egreso_precio: \"\",\r\n                    egreso_total: \"\",\r\n                    existencia_cantidad: this.inicial.cantidad,\r\n                    existencia_precio: this.inicial.precio,\r\n                    existencia_total: this.inicial.total\r\n                };\r\n                this.transacciones.unshift(inicial);\r\n                toastr.success(\r\n                    \"Transaccion agregada correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.update = false;\r\n\r\n                this.inicial.fecha = \"\";\r\n                this.inicial.movimiento = \"\";\r\n                this.inicial.cantidad = \"\";\r\n                this.inicial.precio = \"\";\r\n                this.inicial.total = \"\";\r\n                $(\"#inicial\").modal(\"hide\");\r\n                let ultima = this.transacciones.length - 1;\r\n                this.ultima_existencia = [\r\n                    JSON.parse(JSON.stringify(this.transacciones[ultima]))\r\n                ];\r\n                this.sumasTotales();\r\n            }\r\n        },\r\n        cerrarInicial() {\r\n            this.update = false;\r\n            this.inicial.fecha = \"\";\r\n            this.inicial.movimiento = \"\";\r\n            this.inicial.cantidad = \"\";\r\n            this.inicial.precio = \"\";\r\n            this.inicial.fecha = \"\";\r\n            this.inicial.movimiento = \"\";\r\n            this.inicial.cantidad = \"\";\r\n            this.inicial.precio = \"\";\r\n        },\r\n        agregarIngreso() {\r\n            this.transacciones.push(this.modales.modal_ingreso[0]);\r\n            toastr.success(\"Transaccion agregada correctamente\", \"SmartLearn\", {\r\n                timeOut: \"3000\"\r\n            });\r\n            this.modales.modal_ingreso = [];\r\n            $(\"#ingreso-kardex\").modal(\"hide\");\r\n            let ultima = this.transacciones.length - 1;\r\n\r\n            this.ultima_existencia = [\r\n                JSON.parse(JSON.stringify(this.transacciones[ultima]))\r\n            ];\r\n            this.sumasTotales();\r\n        },\r\n        agregarEgreso() {\r\n            this.transacciones.push(this.modales.modal_egreso[0]);\r\n            toastr.success(\"Transaccion agregada correctamente\", \"SmartLearn\", {\r\n                timeOut: \"3000\"\r\n            });\r\n            this.modales.modal_egreso = [];\r\n            $(\"#ingreso-kardex\").modal(\"hide\");\r\n            let ultima = this.transacciones.length - 1;\r\n\r\n            this.ultima_existencia = [\r\n                JSON.parse(JSON.stringify(this.transacciones[ultima]))\r\n            ];\r\n            this.sumasTotales();\r\n        },\r\n        editarTransaccion(id, tipo) {\r\n            if (tipo == \"ingreso\") {\r\n                this.transaccion.ingreso.edit = true;\r\n                this.transaccion.egreso.edit = false;\r\n\r\n                this.ingresos = [\r\n                    JSON.parse(JSON.stringify(this.transacciones[id]))\r\n                ];\r\n                this.transaccion.ingreso.index = id;\r\n            } else if (tipo == \"egreso\") {\r\n                this.transaccion.egreso.edit = true;\r\n                this.transaccion.ingreso.edit = false;\r\n\r\n                this.egresos = [\r\n                    JSON.parse(JSON.stringify(this.transacciones[id]))\r\n                ];\r\n                this.transaccion.egreso.index = id;\r\n            } else if (tipo == \"inicial\") {\r\n                this.transaccion.ingreso.edit = false;\r\n                this.transaccion.egreso.edit = false;\r\n\r\n                this.inicial.index = id;\r\n                this.inicial.fecha = this.transacciones[id].fecha;\r\n                this.inicial.movimiento = this.transacciones[id].movimiento;\r\n                this.inicial.cantidad = this.transacciones[\r\n                    id\r\n                ].existencia_cantidad;\r\n                this.inicial.precio = this.transacciones[id].existencia_precio;\r\n                this.update = true;\r\n                $(\"#inicial\").modal(\"show\");\r\n            }\r\n        },\r\n        actualizarIngreso() {\r\n            let id = this.transaccion.ingreso.index;\r\n            let cantidad = this.ingresos[0].ingreso_cantidad;\r\n            let precio = this.ingresos[0].ingreso_precio;\r\n            let total = Number(cantidad * precio).toFixed(2);\r\n            this.ingresos[0].ingreso_total = total;\r\n            let ingreso = this.ingresos[0];\r\n            this.transacciones.splice(id, 1, ingreso);\r\n            this.transaccion.ingreso.index = \"\";\r\n\r\n            this.ingresos = [];\r\n            this.exitenciaFinal();\r\n            this.sumasTotales();\r\n            this.transaccion.ingreso.edit = false;\r\n        },\r\n        actualizarEgreso() {\r\n            let id = this.transaccion.egreso.index;\r\n            let cantidad = this.egresos[0].egreso_cantidad;\r\n            let precio = this.egresos[0].egreso_precio;\r\n            let total = Number(cantidad * precio).toFixed(2);\r\n            this.egresos[0].egreso_total = total;\r\n            let egreso = this.egresos[0];\r\n            this.transacciones.splice(id, 1, egreso);\r\n            this.transaccion.egreso.index = \"\";\r\n\r\n            this.egresos = [];\r\n            this.exitenciaFinal();\r\n            this.sumasTotales();\r\n            this.transaccion.egreso.edit = false;\r\n        },\r\n        actualizarInicial() {\r\n            let id = this.inicial.index;\r\n            let cantidad = this.inicial.cantidad;\r\n            let precio = this.inicial.precio;\r\n            let total = Number(cantidad * precio).toFixed(2);\r\n            this.inicial.total = total;\r\n            this.transacciones[id].fecha = this.inicial.fecha;\r\n            this.transacciones[id].movimiento = this.inicial.movimiento;\r\n            this.transacciones[id].existencia_cantidad = this.inicial.cantidad;\r\n            this.transacciones[id].existencia_precio = this.inicial.precio;\r\n            this.transacciones[id].existencia_total = this.inicial.total;\r\n            this.update = false;\r\n\r\n            this.inicial.fecha = \"\";\r\n            this.inicial.movimiento = \"\";\r\n            this.inicial.cantidad = \"\";\r\n            this.inicial.precio = \"\";\r\n            this.inicial.total = \"\";\r\n            this.exitenciaFinal();\r\n            this.sumasTotales();\r\n\r\n            $(\"#inicial\").modal(\"hide\");\r\n        },\r\n        totalIng(id) {\r\n            let cantidad = this.ingresos[0].ingreso_cantidad;\r\n            let precio = this.ingresos[0].ingreso_precio;\r\n            let total = Number(cantidad * precio).toFixed(2);\r\n            this.ingresos[0].ingreso_total = total;\r\n        },\r\n        totaEgre(id) {\r\n            let cantidad = this.egresos[0].egreso_cantidad;\r\n            let precio = this.egresos[0].egreso_precio;\r\n            let total = Number(cantidad * precio).toFixed(2);\r\n            this.egresos[0].egreso_total = total;\r\n        },\r\n\r\n        borrarTransaccion(index) {\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar este registro?? \",\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta se elimino correctamente\",\r\n                        \"success\"\r\n                    );\r\n                    let u = this.transacciones.length - 1;\r\n\r\n                    if (index == u) {\r\n                        if (u == 0) {\r\n                            this.ultima_existencia = [];\r\n                            this.transacciones.splice(index, 1);\r\n                        } else {\r\n                            this.transacciones.splice(index, 1);\r\n                            this.ultima_existencia = [\r\n                                JSON.parse(\r\n                                    JSON.stringify(this.transacciones[u - 1])\r\n                                )\r\n                            ];\r\n                        }\r\n                    } else {\r\n                        this.transacciones.splice(index, 1);\r\n                    }\r\n                    toastr.info(\r\n                        \"Transaccion eliminada correctamente\",\r\n                        \"SmartLearn\",\r\n                        {\r\n                            timeOut: \"3000\"\r\n                        }\r\n                    );\r\n                    this.sumasTotales();\r\n                }\r\n            });\r\n        },\r\n        guardarKardex: function () {\r\n            if (this.transacciones.length == 0) {\r\n                toastr.error(\r\n                    \"Debe haber al menos un registro en el Kardex\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (\r\n                this.nombre.trim() === \"\" ||\r\n                this.producto.trim() === \"\"\r\n            ) {\r\n                toastr.error(\"Nombre & Producto es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let _this = this;\r\n                let url = \"/sistema/admin/taller/kardex-promedio\";\r\n                axios\r\n                    .post(url, {\r\n                        id: _this.id_taller,\r\n                        nombre: _this.nombre,\r\n                        producto: _this.producto,\r\n                        producto_id: _this.producto_id,\r\n                        kardex_promedio: _this.transacciones,\r\n                        inv_inicial_cantidad:\r\n                            _this.prueba.cantidad.inventario_inicial,\r\n                        adquisicion_cantidad:\r\n                            _this.prueba.cantidad.adquicisiones,\r\n                        ventas_cantidad: _this.prueba.cantidad.ventas,\r\n                        inv_final_cantidad:\r\n                            _this.prueba.cantidad.inventario_final,\r\n                        inv_inicial_precio:\r\n                            _this.prueba.precio.inventario_inicial,\r\n                        adquisicion_precio: _this.prueba.precio.adquicisiones,\r\n                        ventas_precio: _this.prueba.precio.ventas,\r\n                        inv_final_precio: _this.prueba.precio.inventario_final\r\n                    })\r\n                    .then(response => {\r\n                        if (response.data.estado == \"guardado\") {\r\n                            toastr.success(\r\n                                \"Kardex creado correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                        } else if (response.data.estado == \"actualizado\") {\r\n                            toastr.warning(\r\n                                \"kardex actualizado correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                        }\r\n                    })\r\n                    .catch(function (error) { });\r\n            }\r\n        },\r\n        obtenerKardexPromedio: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/kardex-obtener-promedio\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller,\r\n                    producto_id: _this.producto_id\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        toastr.info(\r\n                            \"Kardex Promedio cargado correctamente\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                        _this.transacciones = response.data.kardex_promedio;\r\n                        _this.nombre = response.data.informacion.nombre;\r\n                        _this.producto = response.data.informacion.producto;\r\n                        _this.prueba.cantidad.inventario_inicial =\r\n                            response.data.informacion.inv_inicial_cantidad;\r\n                        _this.prueba.cantidad.adquicisiones =\r\n                            response.data.informacion.adquisicion_cantidad;\r\n                        _this.prueba.cantidad.ventas =\r\n                            response.data.informacion.ventas_cantidad;\r\n                        _this.prueba.cantidad.inventario_final =\r\n                            response.data.informacion.inv_final_cantidad;\r\n                        _this.prueba.precio.inventario_inicial =\r\n                            response.data.informacion.inv_inicial_precio;\r\n                        _this.prueba.precio.adquicisiones =\r\n                            response.data.informacion.adquisicion_precio;\r\n                        _this.prueba.precio.ventas =\r\n                            response.data.informacion.ventas_precio;\r\n                        _this.prueba.precio.inventario_final =\r\n                            response.data.informacion.inv_final_precio;\r\n\r\n                        _this.datos_transacciones =\r\n                            response.data.transacciones.transacciones;\r\n\r\n                        this.sumasTotales();\r\n                        this.exitenciaFinal();\r\n                    } else {\r\n                        _this.transacciones = [];\r\n                        _this.nombre = \"\";\r\n                        _this.producto = \"\";\r\n                        _this.prueba.cantidad.inventario_inicial = \"\";\r\n                        _this.prueba.cantidad.adquicisiones = \"\";\r\n                        _this.prueba.cantidad.ventas = \"\";\r\n                        _this.prueba.cantidad.inventario_final = \"\";\r\n                        _this.prueba.precio.inventario_inicial = \"\";\r\n                        _this.prueba.precio.adquicisiones = \"\";\r\n                        _this.prueba.precio.ventas = \"\";\r\n                        _this.prueba.precio.inventario_final = \"\";\r\n                        _this.datos_transacciones =\r\n                            response.data.transacciones.transacciones;\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        }\r\n    }\r\n});\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////LIBRO CAJA ANEXO //////////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nlet librocaja = new Vue({\r\n    el: \"#librocaja\",\r\n    data: {\r\n        id_taller: taller,\r\n        nombre: \"\",\r\n        libros_caja: [], //donde se almacenara todos los datos del libro CAJA\r\n        caja: {\r\n            // variables a utilizar para el libro CAJA\r\n            fecha: \"\",\r\n            edit: false,\r\n            detalle: \"\",\r\n            debe: \"\",\r\n            haber: \"\",\r\n            saldo: \"\"\r\n        },\r\n        eliminar: {\r\n            index: \"\",\r\n            nombre: \"\"\r\n        },\r\n        suman: {\r\n            //suma total del libro CAJA\r\n            debe: 0,\r\n            haber: 0\r\n        },\r\n        update: false,\r\n        registro_id: \"\",\r\n        dgeneral: [],\r\n        registros_cierres: [],\r\n        ajustes: [],\r\n        nombre_cierre: \"\"\r\n    },\r\n    mounted: function () {\r\n        this.obtenerLibroCaja();\r\n        this.obtenerDiarioGeneral();\r\n    },\r\n    methods: {\r\n        obtenerDiarioGeneral: function () {\r\n            var _this = this;\r\n            var url = \"/sistema/admin/taller/diariogeneral\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        _this.dgeneral = response.data.registros;\r\n                        _this.nombre_dgral = response.data.nombre;\r\n                        let inicial = response.data.inicial;\r\n                        _this.dgeneral.unshift(inicial);\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        },\r\n\r\n        calculadora() {\r\n            let propsData = {\r\n                title: \"Called from basic js\",\r\n                noteProp: [\"Note number 1\", \"Note number 2\"]\r\n            };\r\n            let component = \"example-component\";\r\n            funciones.VueSweetAlert2(component, propsData);\r\n        },\r\n        decimales(saldo) {\r\n            if (saldo !== null && saldo !== \"\" && saldo !== 0) {\r\n                let total = Number(saldo).toFixed(2);\r\n                return total;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        formatoFecha(fecha) {\r\n            if (fecha !== null) {\r\n                let date = fecha\r\n                    .split(\"-\")\r\n                    .reverse()\r\n                    .join(\"-\");\r\n                return date;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        totales: function () {\r\n            this.suman.debe = 0;\r\n            this.suman.haber = 0;\r\n            let regis = this.libros_caja;\r\n            let total1 = 0;\r\n            let total2 = 0;\r\n\r\n            regis.forEach(function (obj, index) {\r\n                total1 += Number(obj.debe);\r\n            });\r\n            regis.forEach(function (obj, index) {\r\n                total2 += Number(obj.haber);\r\n            });\r\n\r\n            this.suman.debe = total1.toFixed(2);\r\n            this.suman.haber = total2.toFixed(2);\r\n        },\r\n\r\n        abrirLibro() {\r\n            //solo para acceder al modal para agregar todo pilas\r\n            this.update = false;\r\n            $(\"#libro-caja\").modal(\"show\");\r\n        }, //fin de metodo abrirtransaccion\r\n\r\n        agregarRegistro() {\r\n            if (this.caja.fecha.trim() === \"\") {\r\n                toastr.error(\"La fecha es obligatoria \", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.caja.detalle.trim() === \"\") {\r\n                toastr.error(\"El campo Detalle es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (\r\n                this.caja.debe.trim() != \"\" &&\r\n                this.caja.haber.trim() != \"\"\r\n            ) {\r\n                toastr.error(\r\n                    \"No puede llenar ambos campos de debe y haber\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"30000\"\r\n                    }\r\n                );\r\n            } else {\r\n                var caja = {\r\n                    fecha: this.caja.fecha,\r\n                    detalle: this.caja.detalle,\r\n                    debe: this.caja.debe,\r\n                    haber: this.caja.haber,\r\n                    saldo: this.caja.saldo\r\n                };\r\n                this.libros_caja.push(caja);\r\n                toastr.success(\r\n                    \"Registro agregado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.caja.fecha = \"\";\r\n                this.caja.detalle = \"\";\r\n                this.caja.debe = \"\";\r\n                this.caja.haber = \"\";\r\n                this.caja.saldo = \"\";\r\n                this.totales();\r\n            }\r\n        }, // function agregarregistro\r\n\r\n        editLibroCaja(index) {\r\n            this.caja.edit = true;\r\n            this.registro_id = index;\r\n            this.caja.fecha = this.libros_caja[index].fecha;\r\n            this.caja.detalle = this.libros_caja[index].detalle;\r\n            this.caja.debe = this.libros_caja[index].debe;\r\n            this.caja.haber = this.libros_caja[index].haber;\r\n            this.caja.saldo = this.libros_caja[index].saldo;\r\n        },\r\n\r\n        editlibrocajafuera(index) {\r\n            this.caja.edit = true;\r\n            this.registro_id = index;\r\n            this.caja.fecha = this.libros_caja[index].fecha;\r\n            this.caja.detalle = this.libros_caja[index].detalle;\r\n            this.caja.debe = this.libros_caja[index].debe;\r\n            this.caja.haber = this.libros_caja[index].haber;\r\n            this.caja.saldo = this.libros_caja[index].saldo;\r\n            $(\"#libro-caja\").modal(\"show\");\r\n        }, //fin editlibrocajafuera\r\n\r\n        cancelarEditlibro() {\r\n            this.caja.fecha = \"\";\r\n            this.caja.detalle = \"\";\r\n            this.caja.debe = \"\";\r\n            this.caja.haber = \"\";\r\n            this.caja.saldo = \"\";\r\n            this.caja.edit = false;\r\n        },\r\n\r\n        actualizarLibroCaja() {\r\n            if (this.caja.fecha.trim() === \"\") {\r\n                toastr.error(\"La fecha es obligatoria \", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.caja.detalle.trim() === \"\") {\r\n                toastr.error(\"El campo Detalle es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.registro_id;\r\n                this.libros_caja[id].fecha = this.caja.fecha;\r\n                this.libros_caja[id].detalle = this.caja.detalle;\r\n                this.libros_caja[id].debe = this.caja.debe;\r\n                this.libros_caja[id].haber = this.caja.haber;\r\n                this.libros_caja[id].saldo = this.caja.saldo;\r\n                this.cancelarEditlibro();\r\n                this.totales();\r\n                toastr.error(\r\n                    \"Registro actualizado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            }\r\n        }, //fin de actualizar libro de caja\r\n\r\n        WarningEliminarLibro(id) {\r\n            this.eliminar.index = id;\r\n            this.eliminar.nombre = this.libros_caja[id].detalle;\r\n\r\n            Swal.fire({\r\n                title:\r\n                    \"Seguro que deseas eliminar el Registro de \" +\r\n                    this.eliminar.nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + this.eliminar.nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.libros_caja.splice(id, 1);\r\n                    this.totales();\r\n                }\r\n            });\r\n        }, //fin metodo warningeliminarcompra\r\n\r\n        guardarLibro: function () {\r\n            if (this.nombre.length == 0) {\r\n                toastr.error(\r\n                    \"Debe Ingresar el Nombre Comercial\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.libros_caja.length == 0) {\r\n                toastr.error(\r\n                    \"Debe haber al menos un registro en el Balance\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                let _this = this;\r\n                let url = \"/sistema/admin/taller/anexo_caja\";\r\n                axios\r\n                    .post(url, {\r\n                        id: _this.id_taller,\r\n                        libros_caja: _this.libros_caja,\r\n                        nombre: _this.nombre,\r\n                        debe: _this.suman.debe,\r\n                        haber: _this.suman.haber\r\n                    })\r\n                    .then(response => {\r\n                        if (response.data.estado == \"guardado\") {\r\n                            toastr.success(\r\n                                \"Anexo creado correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            arqueo_caja.obtenerLibroCaja();\r\n                        } else if (response.data.estado == \"actualizado\") {\r\n                            toastr.warning(\r\n                                \"Anexo actualizado correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            arqueo_caja.obtenerLibroCaja();\r\n                            this.totales();\r\n                        }\r\n                    })\r\n                    .catch(function (error) { });\r\n            }\r\n        }, //fin metodo guardar\r\n\r\n        obtenerLibroCaja: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/anexo-obtener-caja\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        toastr.info(\r\n                            \"Anexo Libro Caja cargado correctamente\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                        this.libros_caja = response.data.banexocaja;\r\n                        this.nombre = response.data.nombre;\r\n                        this.totales();\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        }\r\n    }\r\n});\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////ARQUEO CAJA ANEXO /////////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\nconst arqueo_caja = new Vue({\r\n    el: \"#arqueo_caja\",\r\n\r\n    data: {\r\n        id_taller: taller,\r\n\r\n        libros_caja: [],\r\n        debe_lb: \"\",\r\n        haber_lb: \"\",\r\n        nombre_lb: \"\",\r\n        t_saldo: [], // array de saldos\r\n        saldo: {\r\n            edit: false,\r\n            detalle: \"\",\r\n            s_debe: \"\",\r\n            s_haber: \"\"\r\n        },\r\n        pruebas: {\r\n            cuenta1: \"\",\r\n            cuenta2: \"\",\r\n            valor1: \"\",\r\n            valor2: \"\",\r\n            saldo_ctcaja: \"\",\r\n            saldo_arqueocaja: \"\",\r\n            select_resultado: \"\",\r\n            select_valor: \"\"\r\n        },\r\n        t_exis: [], // array de existencias\r\n        exis: {\r\n            edit: false,\r\n            detalle: \"\",\r\n            e_debe: \"\",\r\n            e_haber: \"\"\r\n        },\r\n        sumas: {\r\n            // totales de Saldo debe y haber\r\n            td: 0,\r\n            th: 0\r\n        },\r\n        eliminar: {\r\n            index: \"\",\r\n            nombre: \"\"\r\n        },\r\n        update: false,\r\n        registro_id: \"\"\r\n    },\r\n    mounted: function () {\r\n        this.ObtenerArqueo();\r\n        this.obtenerLibroCaja();\r\n    },\r\n    methods: {\r\n        calculadora() {\r\n            let propsData = {\r\n                title: \"Called from basic js\",\r\n                noteProp: [\"Note number 1\", \"Note number 2\"]\r\n            };\r\n            let component = \"example-component\";\r\n            funciones.VueSweetAlert2(component, propsData);\r\n        },\r\n\r\n        obtenerLibroCaja: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/anexo-obtener-caja\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        this.libros_caja = response.data.banexocaja;\r\n                        this.nombre_lb = response.data.nombre;\r\n                        this.debe_lb = response.data.totaldebe;\r\n                        this.haber_lb = response.data.totalhaber;\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        }, //end function obtener libro caja\r\n\r\n        formatoFecha(fecha) {\r\n            if (fecha !== null) {\r\n                let date = fecha\r\n                    .split(\"-\")\r\n                    .reverse()\r\n                    .join(\"-\");\r\n                return date;\r\n            } else {\r\n                return;\r\n            }\r\n        }, // fin fecha\r\n        decimales(saldo) {\r\n            if (saldo !== null && saldo !== \"\" && saldo !== 0) {\r\n                let total = Number(saldo).toFixed(2);\r\n                return total;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n\r\n        totales_s: function () {\r\n            this.sumas.td = 0;\r\n            this.sumas.th = 0;\r\n\r\n            let rg = this.t_saldo;\r\n            let re = this.t_exis;\r\n            let t1 = 0;\r\n            let t2 = 0;\r\n            let t3 = 0;\r\n            let t4 = 0;\r\n\r\n            rg.forEach(function (obj, index) {\r\n                //if(obj.s_debe !== '' || obj.s_debe !== null){\r\n                t1 += Number(obj.s_debe);\r\n                //}\r\n            });\r\n            rg.forEach(function (obj, index) {\r\n                //if(obj.s_haber !== '' || obj.s_haber !== null){\r\n                t2 += Number(obj.s_haber);\r\n                //}\r\n            });\r\n\r\n            re.forEach(function (obj, index) {\r\n                //if(obj.e_debe !== '' || obj.e_debe !== null){\r\n                t3 += Number(obj.e_debe);\r\n                //}\r\n            });\r\n            re.forEach(function (obj, index) {\r\n                //if(obj.e_haber !== '' || obj.e_haber !== null){\r\n                t4 += Number(obj.e_haber);\r\n                //}\r\n            });\r\n            var td1 = t1 + t3;\r\n            var th1 = t2 + t4;\r\n            console.log(t1);\r\n            //  this.sumas.td = t1.toFixed(2);\r\n            //  this.sumas.th = t2.toFixed(2);\r\n\r\n            this.sumas.td = td1.toFixed(2);\r\n            this.sumas.th = th1.toFixed(2);\r\n        },\r\n\r\n        abrirArqueo() {\r\n            //solo para acceder al modal para agregar todo pilas\r\n            this.update = false;\r\n            $(\"#arqueo-caja\").modal(\"show\");\r\n        }, //fin de metodo abrirtransaccion\r\n\r\n        agregarsaldo() {\r\n            if (this.saldo.detalle.trim() === \"\") {\r\n                toastr.error(\"El Detalle es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (\r\n                this.saldo.s_debe.trim() != \"\" &&\r\n                this.saldo.s_haber.trim() != \"\"\r\n            ) {\r\n                toastr.error(\r\n                    \"No puede llenar ambos campos de debe y haber \",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                var saldo = {\r\n                    detalle: this.saldo.detalle,\r\n                    s_debe: this.saldo.s_debe,\r\n                    s_haber: this.saldo.s_haber\r\n                };\r\n                this.t_saldo.push(saldo);\r\n                toastr.success(\"Saldo agregado correctamente\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n\r\n                this.saldo.detalle = \"\";\r\n                this.saldo.s_debe = \"\";\r\n                this.saldo.s_haber = \"\";\r\n                this.totales_s(); // esta enobservacion la utilizacion de totales\r\n            }\r\n        }, //fin metodo agregar saldo\r\n\r\n        editSaldo(index) {\r\n            this.registro_id = index;\r\n            this.saldo.edit = true;\r\n            this.saldo.detalle = this.t_saldo[index].detalle;\r\n            this.saldo.s_debe = this.t_saldo[index].s_debe;\r\n            this.saldo.s_haber = this.t_saldo[index].s_haber;\r\n            $(\"#ht-dato-saldo-tab\").tab(\"show\");\r\n        }, //end edit saldos\r\n\r\n        editSaldoFuera(index) {\r\n            this.registro_id = index;\r\n            this.saldo.edit = true;\r\n            this.saldo.detalle = this.t_saldo[index].detalle;\r\n            this.saldo.s_debe = this.t_saldo[index].s_debe;\r\n            this.saldo.s_haber = this.t_saldo[index].s_haber;\r\n            $(\"#arqueo-caja\").modal(\"show\");\r\n            $(\"#ht-dato-saldo-tab\").tab(\"show\");\r\n        }, //end edit saldos\r\n\r\n        cancelarEditSaldo() {\r\n            this.saldo.detalle = \"\";\r\n            this.saldo.s_debe = \"\";\r\n            this.saldo.s_haber = \"\";\r\n            this.saldo.edit = false;\r\n        }, //fin de cancelar edicion\r\n\r\n        actualizarSaldo() {\r\n            if (this.saldo.detalle == \"\") {\r\n                toastr.error(\"El campo Detalle es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let index = this.registro_id;\r\n\r\n                this.t_saldo[index].detalle = this.saldo.detalle;\r\n                this.t_saldo[index].s_debe = this.saldo.s_debe;\r\n                this.t_saldo[index].s_haber = this.saldo.s_haber;\r\n                this.cancelarEditSaldo();\r\n                this.totales_s();\r\n                toastr.error(\r\n                    \"Registro actualizado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            }\r\n        }, //fin de function  actualizar\r\n\r\n        WarningEliminarSaldo(id) {\r\n            this.eliminar.index = id;\r\n            this.eliminar.nombre = this.t_saldo[id].detalle;\r\n\r\n            Swal.fire({\r\n                title:\r\n                    \"Seguro que deseas eliminar este Registro \" +\r\n                    this.eliminar.nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + this.eliminar.nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.t_saldo.splice(id, 1);\r\n                    this.totales_s();\r\n                }\r\n            });\r\n        }, //fin metodo warningeliminarcompra\r\n\r\n        agregarExistencia() {\r\n            if (this.exis.detalle.trim() === \"\") {\r\n                toastr.error(\"El Detalle es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (\r\n                this.exis.e_debe.trim() != \"\" &&\r\n                this.exis.e_haber.trim() != \"\"\r\n            ) {\r\n                toastr.error(\r\n                    \"No puede llenar ambos campos de debe y haber \",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                var exis = {\r\n                    detalle: this.exis.detalle,\r\n                    e_debe: this.exis.e_debe,\r\n                    e_haber: this.exis.e_haber\r\n                };\r\n                this.t_exis.push(exis);\r\n                toastr.success(\r\n                    \"Existencias agregado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n\r\n                this.exis.detalle = \"\";\r\n                this.exis.e_debe = \"\";\r\n                this.exis.e_haber = \"\";\r\n                this.totales_s(); // esta enobservacion la utilizacion de totales\r\n            }\r\n        }, //fin metodo agregar existencia\r\n\r\n        editExis(index) {\r\n            this.exis.edit = true;\r\n            this.registro_id = index;\r\n            this.exis.detalle = this.t_exis[index].detalle;\r\n            this.exis.e_debe = this.t_exis[index].e_debe;\r\n            this.exis.e_haber = this.t_exis[index].e_haber;\r\n            $(\"#ht-dato-exis-tab\").tab(\"show\");\r\n        }, //end edit EXISTENCIAS\r\n\r\n        editExisFuera(index) {\r\n            this.exis.edit = true;\r\n            this.registro_id = index;\r\n            this.exis.detalle = this.t_exis[index].detalle;\r\n            this.exis.e_debe = this.t_exis[index].e_debe;\r\n            this.exis.e_haber = this.t_exis[index].e_haber;\r\n            $(\"#arqueo-caja\").modal(\"show\");\r\n            $(\"#ht-dato-exis-tab\").tab(\"show\");\r\n        }, //end edit EXISTENCIAS\r\n\r\n        cancelarEditExis() {\r\n            this.exis.detalle = \"\";\r\n            this.exis.e_debe = \"\";\r\n            this.exis.e_haber = \"\";\r\n            this.exis.edit = false;\r\n        }, //fin de cancelar edicion\r\n\r\n        actualizarExis() {\r\n            if (this.exis.detalle == \"\") {\r\n                toastr.error(\"El campo Detalle es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let index = this.registro_id;\r\n                this.t_exis[index].detalle = this.exis.detalle;\r\n                this.t_exis[index].e_debe = this.exis.e_debe;\r\n                this.t_exis[index].e_haber = this.exis.e_haber;\r\n\r\n                this.cancelarEditExis();\r\n                this.totales_s();\r\n                toastr.error(\r\n                    \"Registro actualizado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            }\r\n        }, //fin de function  actualizar\r\n\r\n        WarningEliminarExis(id) {\r\n            this.eliminar.index = id;\r\n            this.eliminar.nombre = this.t_exis[id].detalle;\r\n\r\n            Swal.fire({\r\n                title:\r\n                    \"Seguro que deseas eliminar este Registro \" +\r\n                    this.eliminar.nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + this.eliminar.nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.t_exis.splice(id, 1);\r\n                    this.totales_s();\r\n                }\r\n            });\r\n        }, //fin metodo warningeliminarcompra\r\n\r\n        guardaArqueo: function () {\r\n            if (this.t_saldo.length == 0) {\r\n                toastr.error(\r\n                    \"Debe haber al menos un Saldo Registrado\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.t_exis.length == 0) {\r\n                toastr.error(\r\n                    \"Debe haber al menos una Existencia Registrado\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                var _this = this;\r\n                var url = \"/sistema/admin/taller/arqueo_caja\";\r\n                axios\r\n                    .post(url, {\r\n                        id: _this.id_taller,\r\n                        t_saldo: _this.t_saldo,\r\n                        t_exis: _this.t_exis,\r\n                        td: _this.sumas.td,\r\n                        th: _this.sumas.th,\r\n                        cuenta1: _this.pruebas.cuenta1,\r\n                        cuenta2: _this.pruebas.cuenta2,\r\n                        valor1: _this.pruebas.valor1,\r\n                        valor2: _this.pruebas.valor2,\r\n                        saldo_ctcaja: _this.pruebas.saldo_ctcaja,\r\n                        saldo_arqueocaja: _this.pruebas.saldo_arqueocaja,\r\n                        select_resultado: _this.pruebas.select_resultado,\r\n                        select_valor: _this.pruebas.select_valor\r\n                    })\r\n                    .then(response => {\r\n                        if (response.data.estado == \"guardado\") {\r\n                            toastr.success(\r\n                                \"Arqueo Caja creado correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            this.totales_s();\r\n                        } else if (response.data.estado == \"actualizado\") {\r\n                            toastr.warning(\r\n                                \"Arqueo Caja actualizado correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            this.totales_s();\r\n                        }\r\n                    })\r\n                    .catch(function (error) { });\r\n            }\r\n        }, //fin metodo guardar\r\n\r\n        ObtenerArqueo: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/arqueo-obtener-caja\";\r\n\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        toastr.info(\r\n                            \"Anexo Arqueo Caja cargado correctamente\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                        this.t_saldo = response.data.saldo;\r\n                        this.t_exis = response.data.exis;\r\n                        (this.pruebas.cuenta1 = response.data.cuenta1),\r\n                            (this.pruebas.cuenta2 = response.data.cuenta2),\r\n                            (this.pruebas.valor1 = response.data.valor1),\r\n                            (this.pruebas.valor2 = response.data.valor2),\r\n                            (this.pruebas.saldo_ctcaja =\r\n                                response.data.saldo_ctcaja),\r\n                            (this.pruebas.saldo_arqueocaja =\r\n                                response.data.saldo_arqueocaja),\r\n                            (this.pruebas.select_resultado =\r\n                                response.data.select_resultado),\r\n                            (this.pruebas.select_valor =\r\n                                response.data.select_valor),\r\n                            this.totales_s();\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        } //fin function obtener\r\n    }\r\n});\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////LIBRO BANCO ANEXO /////////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\nlet librosbanco = new Vue({\r\n    el: \"#librosbanco\",\r\n\r\n    data: {\r\n        id_taller: taller,\r\n        nombre: \"\",\r\n        n_banco: \"\",\r\n        c_banco: \"\",\r\n\r\n        lb_banco: [],\r\n        eliminar: {\r\n            index: \"\",\r\n            nombre: \"\"\r\n        },\r\n        banco: {\r\n            edit: false,\r\n            fecha: \"\",\r\n            detalle: \"\",\r\n            cheque: \"\",\r\n            debe: \"\",\r\n            haber: \"\",\r\n            saldo: \"\"\r\n        },\r\n        suman: {\r\n            //suma total del libro CAJA\r\n            debe: 0,\r\n            haber: 0\r\n        },\r\n        update: false,\r\n        registro_id: \"\",\r\n        dgeneral: [],\r\n        registros_cierres: [],\r\n        ajustes: [],\r\n        nombre_cierre: \"\"\r\n    },\r\n    mounted: function () {\r\n        this.obtenerLibroBanco();\r\n        this.obtenerDiarioGeneral();\r\n    },\r\n\r\n    methods: {\r\n        obtenerDiarioGeneral: function () {\r\n            var _this = this;\r\n            var url = \"/sistema/admin/taller/diariogeneral\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        _this.dgeneral = response.data.registros;\r\n                        _this.nombre_dgral = response.data.nombre;\r\n                        let inicial = response.data.inicial;\r\n                        _this.dgeneral.unshift(inicial);\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        },\r\n        calculadora() {\r\n            let propsData = {\r\n                title: \"Called from basic js\",\r\n                noteProp: [\"Note number 1\", \"Note number 2\"]\r\n            };\r\n            let component = \"example-component\";\r\n            funciones.VueSweetAlert2(component, propsData);\r\n        },\r\n        decimales(saldo) {\r\n            if (saldo !== null && saldo !== \"\" && saldo !== 0) {\r\n                let total = Number(saldo).toFixed(2);\r\n                return total;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        formatoFecha(fecha) {\r\n            if (fecha !== null) {\r\n                let date = fecha\r\n                    .split(\"-\")\r\n                    .reverse()\r\n                    .join(\"-\");\r\n                return date;\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        totales: function () {\r\n            this.suman.debe = 0;\r\n            this.suman.haber = 0;\r\n            let regis = this.lb_banco;\r\n            let total1 = 0;\r\n            let total2 = 0;\r\n\r\n            regis.forEach(function (obj, index) {\r\n                total1 += Number(obj.debe);\r\n            });\r\n            regis.forEach(function (obj, index) {\r\n                total2 += Number(obj.haber);\r\n            });\r\n\r\n            this.suman.debe = total1.toFixed(2);\r\n            this.suman.haber = total2.toFixed(2);\r\n        },\r\n\r\n        abrirLibroB() {\r\n            //solo para acceder al modal para agregar todo pilas\r\n            this.update = false;\r\n            $(\"#libro-banco\").modal(\"show\");\r\n        }, //fin de metodo abrirtransaccion\r\n\r\n        agregarBanco() {\r\n            if (this.banco.fecha.trim() === \"\") {\r\n                toastr.error(\"La fecha es obligatoria \", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.banco.detalle.trim() === \"\") {\r\n                toastr.error(\"El campo Detalle es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (\r\n                this.banco.debe.trim() != \"\" &&\r\n                this.banco.haber.trim() != \"\"\r\n            ) {\r\n                toastr.error(\r\n                    \"No puede llenar ambos campos de debe y haber\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"30000\"\r\n                    }\r\n                );\r\n            } else {\r\n                var banco = {\r\n                    fecha: this.banco.fecha,\r\n                    detalle: this.banco.detalle,\r\n                    cheque: this.banco.cheque,\r\n                    debe: this.banco.debe,\r\n                    haber: this.banco.haber,\r\n                    saldo: this.banco.saldo\r\n                };\r\n                this.lb_banco.push(banco);\r\n                toastr.success(\r\n                    \"Registro agregado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.banco.fecha = \"\";\r\n                this.banco.detalle = \"\";\r\n                this.banco.cheque = \"\";\r\n                this.banco.debe = \"\";\r\n                this.banco.haber = \"\";\r\n                this.banco.saldo = \"\";\r\n                this.totales();\r\n            }\r\n        }, // function agregarbanco end\r\n\r\n        editLibroBanco(index) {\r\n            this.banco.edit = true;\r\n            this.registro_id = index;\r\n            this.banco.fecha = this.lb_banco[index].fecha;\r\n            this.banco.detalle = this.lb_banco[index].detalle;\r\n            this.banco.cheque = this.lb_banco[index].cheque;\r\n            this.banco.debe = this.lb_banco[index].debe;\r\n            this.banco.haber = this.lb_banco[index].haber;\r\n            this.banco.saldo = this.lb_banco[index].saldo;\r\n        }, //end edit\r\n\r\n        editLibroBancoFuera(index) {\r\n            this.banco.edit = true;\r\n            this.registro_id = index;\r\n            this.banco.fecha = this.lb_banco[index].fecha;\r\n            this.banco.detalle = this.lb_banco[index].detalle;\r\n            this.banco.cheque = this.lb_banco[index].cheque;\r\n            this.banco.debe = this.lb_banco[index].debe;\r\n            this.banco.haber = this.lb_banco[index].haber;\r\n            this.banco.saldo = this.lb_banco[index].saldo;\r\n            $(\"#libro-banco\").modal(\"show\");\r\n        }, //end edit\r\n\r\n        cancelarEditlibroBanco() {\r\n            this.banco.fecha = \"\";\r\n            this.banco.detalle = \"\";\r\n            this.banco.cheque = \"\";\r\n            this.banco.debe = \"\";\r\n            this.banco.haber = \"\";\r\n            this.banco.saldo = \"\";\r\n            this.banco.edit = false;\r\n        },\r\n\r\n        actualizarLibroBanco() {\r\n            if (this.banco.fecha.trim() === \"\") {\r\n                toastr.error(\"La fecha es obligatoria \", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.banco.detalle.trim() === \"\") {\r\n                toastr.error(\"El campo Detalle es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.registro_id;\r\n                this.lb_banco[id].fecha = this.banco.fecha;\r\n                this.lb_banco[id].detalle = this.banco.detalle;\r\n                this.lb_banco[id].cheque = this.banco.cheque;\r\n                this.lb_banco[id].debe = this.banco.debe;\r\n                this.lb_banco[id].haber = this.banco.haber;\r\n                this.lb_banco[id].saldo = this.banco.saldo;\r\n\r\n                this.cancelarEditlibroBanco();\r\n                this.totales();\r\n                toastr.error(\r\n                    \"Registro actualizado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            }\r\n        }, //fin de actualizar libro Banco\r\n\r\n        eliminarLibro() {\r\n            let id = this.eliminar.index;\r\n            this.lb_banco.splice(id, 1);\r\n            this.eliminar.index = \"\";\r\n            this.eliminar.nombre = \"\";\r\n            $(\"#eliminar-banco\").modal(\"hide\"); // en prueba para eliminar\r\n        }, //fin metodo eliminar compra\r\n\r\n        deleteLibroBanco(index) {\r\n            this.lb_banco.splice(index, 1);\r\n            this.totales();\r\n        }, //finde delete\r\n\r\n        WarningEliminarLibro(id) {\r\n            this.eliminar.index = id;\r\n            this.eliminar.nombre = this.lb_banco[id].detalle;\r\n\r\n            Swal.fire({\r\n                title:\r\n                    \"Seguro que deseas eliminar el Registro de \" +\r\n                    this.eliminar.nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + this.eliminar.nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.lb_banco.splice(id, 1);\r\n                    this.totales();\r\n                }\r\n            });\r\n        }, //fin metodo warningeliminarcompra\r\n\r\n        guardarlbBAnco() {\r\n            if (this.nombre.length == 0) {\r\n                toastr.error(\r\n                    \"Debe Ingresar el Nombre del Comercial\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.n_banco.length == 0) {\r\n                toastr.error(\r\n                    \"Debe Ingresar el Nombre del Banco\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.c_banco.length == 0) {\r\n                toastr.error(\r\n                    \"Debe Ingresar la Cuenta del Banco\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.lb_banco.length == 0) {\r\n                toastr.error(\"Debe haber al menos un Registro\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let _this = this;\r\n                let url = \"/sistema/admin/taller/libro_banco\";\r\n                axios\r\n                    .post(url, {\r\n                        id: _this.id_taller,\r\n                        lb_banco: _this.lb_banco,\r\n                        nombre: _this.nombre,\r\n                        n_banco: _this.n_banco,\r\n                        c_banco: _this.c_banco,\r\n                        debe: _this.suman.debe,\r\n                        haber: _this.suman.haber\r\n                    })\r\n                    .then(response => {\r\n                        if (response.data.estado == \"guardado\") {\r\n                            toastr.success(\r\n                                \"Arqueo Libro Banco creado correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            conciliacionb.obtenerLibroBanco();\r\n                        } else if (response.data.estado == \"actualizado\") {\r\n                            toastr.warning(\r\n                                \"Arqueo Libro Banco actualizado correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            conciliacionb.obtenerLibroBanco();\r\n                            this.totales();\r\n                        }\r\n                    })\r\n                    .catch(function (error) { });\r\n            }\r\n        }, // fin metodo guardar libro Banco\r\n\r\n        obtenerLibroBanco: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/libro-obtener-banco\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        toastr.info(\r\n                            \"Anexo Libro Banco cargado correctamente\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                        this.lb_banco = response.data.mb;\r\n                        this.nombre = response.data.nombre;\r\n                        this.n_banco = response.data.n_banco;\r\n                        this.c_banco = response.data.c_banco;\r\n                        this.totales();\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        } //fin obtener libro banco\r\n    }\r\n});\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////CONCILIACION BANCARIA /////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\nconst conciliacionb = new Vue({\r\n    el: \"#conciliacionb\",\r\n    data: {\r\n        id_taller: taller,\r\n        nombre: \"\",\r\n        n_banco: \"\",\r\n        fecha: \"\",\r\n        lb_nombre: \"\",\r\n        lb_n_banco: \"\",\r\n        lb_c_banco: \"\",\r\n        debe_lbanco: \"\",\r\n        haber_lbanco: \"\",\r\n\r\n        lb_banco: [],\r\n        c_saldos: [],\r\n        saldo: {\r\n            edit: false,\r\n            fecha: \"\",\r\n            detalle: \"\",\r\n            saldo: \"\"\r\n        },\r\n        c_debitos: [],\r\n        debito: {\r\n            edit: false,\r\n            fecha: \"\",\r\n            detalle: \"\",\r\n            saldo: \"\"\r\n        },\r\n        c_creditos: [],\r\n        credito: {\r\n            edit: false,\r\n            fecha: \"\",\r\n            detalle: \"\",\r\n            saldo: \"\"\r\n        },\r\n        c_cheques: [],\r\n        cheques: {\r\n            edit: false,\r\n            fecha: \"\",\r\n            detalle: \"\",\r\n            saldo: \"\"\r\n        },\r\n        c_depositos: [],\r\n        deposito: {\r\n            edit: false,\r\n            fecha: \"\",\r\n            detalle: \"\",\r\n            saldo: \"\"\r\n        },\r\n\r\n        suman: {\r\n            saldo_c: 0,\r\n            saldo_ch: 0,\r\n            saldo_d: 0,\r\n            saldo_depositos: 0,\r\n            total: 0\r\n        },\r\n        update: false,\r\n        registro_id: \"\"\r\n    },\r\n    mounted: function () {\r\n        this.obtenerConciliacionBancaria();\r\n        this.obtenerLibroBanco();\r\n    },\r\n    methods: {\r\n        calculadora() {\r\n            let propsData = {\r\n                title: \"Called from basic js\",\r\n                noteProp: [\"Note number 1\", \"Note number 2\"]\r\n            };\r\n            let component = \"example-component\";\r\n            funciones.VueSweetAlert2(component, propsData);\r\n        },\r\n        obtenerLibroBanco: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/libro-obtener-banco\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        this.lb_banco = response.data.mb;\r\n                        this.lb_nombre = response.data.nombre;\r\n                        this.lb_n_banco = response.data.n_banco;\r\n                        this.lb_c_banco = response.data.c_banco;\r\n                        this.debe_lbanco = response.data.totaldebe;\r\n                        this.haber_lbanco = response.data.totalhaber;\r\n                        // this.totales();\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        },\r\n\r\n        decimales(saldo) {\r\n            if (saldo !== null && saldo !== \"\" && saldo !== 0) {\r\n                let total = Number(saldo).toFixed(2);\r\n                return total;\r\n            } else {\r\n                return;\r\n            }\r\n        }, //fin metodo decimal\r\n        formatoFecha(fecha) {\r\n            if (fecha !== null) {\r\n                let date = fecha\r\n                    .split(\"-\")\r\n                    .reverse()\r\n                    .join(\"-\");\r\n                return date;\r\n            } else {\r\n                return;\r\n            }\r\n        }, // fin fecha\r\n\r\n        totales: function () {\r\n            this.suman.saldo_c = 0;\r\n            this.suman.saldo_ch = 0;\r\n            this.suman.saldo_d = 0;\r\n            this.suman.saldo_depositos = 0;\r\n            this.suman.total = 0;\r\n\r\n            let r1 = this.c_saldos;\r\n            let r2 = this.c_debitos;\r\n            let r3 = this.c_creditos;\r\n            let r4 = this.c_cheques;\r\n            let r5 = this.c_depositos;\r\n\r\n            let t1 = 0;\r\n            let t2 = 0;\r\n            let t3 = 0;\r\n            let t4 = 0;\r\n            let t5 = 0;\r\n\r\n            r1.forEach(function (obj, index) {\r\n                t1 += Number(obj.saldo);\r\n            });\r\n\r\n            r2.forEach(function (obj, index) {\r\n                t2 += Number(obj.saldo);\r\n            });\r\n\r\n            r3.forEach(function (obj, index) {\r\n                t3 += Number(obj.saldo);\r\n            });\r\n\r\n            r4.forEach(function (obj, index) {\r\n                t4 += Number(obj.saldo);\r\n            });\r\n\r\n            r5.forEach(function (obj, index) {\r\n                t5 += Number(obj.saldo);\r\n            });\r\n\r\n            var tsd = t1 + t2 + t5;\r\n            var tsdc = tsd - t3;\r\n            var tch = tsdc - t4;\r\n\r\n            this.suman.saldo_d = t2.toFixed(2);\r\n            this.suman.saldo_c = t3.toFixed(2);\r\n            this.suman.saldo_ch = t4.toFixed(2);\r\n            this.suman.saldo_depositos = t5.toFixed(2);\r\n            this.suman.total = tch.toFixed(2);\r\n        }, //fin function totales\r\n\r\n        abrirSaldos() {\r\n            //solo para acceder al modal para agregar todo pilas\r\n            this.limpiar();\r\n            $(\"#conciliacion-bancaria\").modal(\"show\");\r\n            $(\"#nav-bih-conciliacion-saldo-tab\").tab(\"show\");\r\n        }, //fin de metodo abrirtransaccion\r\n\r\n        abrirDebito() {\r\n            //solo para acceder al modal para agregar todo pilas\r\n            this.limpiar();\r\n            $(\"#conciliacion-bancaria\").modal(\"show\");\r\n            $(\"#nav-bih-conciliacion-debito-tab\").tab(\"show\");\r\n        }, //fin de metodo abrirtransaccion\r\n\r\n        abrirCredito() {\r\n            //solo para acceder al modal para agregar todo pilas\r\n            this.limpiar();\r\n            $(\"#conciliacion-bancaria\").modal(\"show\");\r\n            $(\"#nav-bih-conciliacion-credito-tab\").tab(\"show\");\r\n        }, //fin de metodo abrirtransaccion\r\n\r\n        abrirCheques() {\r\n            //solo para acceder al modal para agregar todo pilas\r\n            this.limpiar();\r\n            $(\"#conciliacion-bancaria\").modal(\"show\");\r\n            $(\"#nav-bih-conciliacion-cheque-tab\").tab(\"show\");\r\n        }, //fin de metodo abrirtransaccion\r\n\r\n        abrirDepositos() {\r\n            //solo para acceder al modal para agregar todo pilas\r\n            this.limpiar();\r\n            $(\"#conciliacion-bancaria\").modal(\"show\");\r\n            $(\"#nav-bih-conciliacion-deposito-tab\").tab(\"show\");\r\n        }, //fin de metodo abrirtransaccion\r\n\r\n        agregarDeposito() {\r\n            if (this.deposito.fecha.trim() === \"\") {\r\n                toastr.error(\"La Fecha es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.deposito.detalle.trim() === \"\") {\r\n                toastr.error(\"El Detalle es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.deposito.saldo.trim() === \"\") {\r\n                toastr.error(\"El Saldo es Obligatorio \", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                var deposito = {\r\n                    fecha: this.deposito.fecha,\r\n                    detalle: this.deposito.detalle,\r\n                    saldo: this.deposito.saldo\r\n                };\r\n                this.c_depositos.push(deposito);\r\n                toastr.success(\r\n                    \"El Valor agregado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.deposito.fecha = \"\";\r\n                this.deposito.detalle = \"\";\r\n                this.deposito.saldo = \"\";\r\n                this.totales();\r\n            }\r\n        }, //fin metodo agregar deposito\r\n\r\n        editDepositos(index) {\r\n            this.deposito.edit = true;\r\n            this.registro_id = index;\r\n            this.deposito.fecha = this.c_depositos[index].fecha;\r\n            this.deposito.detalle = this.c_depositos[index].detalle;\r\n            this.deposito.saldo = this.c_depositos[index].saldo;\r\n            $(\"#nav-bih-conciliacion-deposito-tab\").tab(\"show\");\r\n        }, //end edit saldos\r\n\r\n        editDepositoFuera(index) {\r\n            this.deposito.edit = true;\r\n            this.registro_id = index;\r\n            this.deposito.fecha = this.c_depositos[index].fecha;\r\n            this.deposito.detalle = this.c_depositos[index].detalle;\r\n            this.deposito.saldo = this.c_depositos[index].saldo;\r\n            $(\"#conciliacion-bancaria\").modal(\"show\");\r\n            $(\"#nav-bih-conciliacion-deposito-tab\").tab(\"show\");\r\n        }, //fin udpate saldo\r\n\r\n        cancelarEditDeposito() {\r\n            this.deposito.fecha = \"\";\r\n            this.deposito.detalle = \"\";\r\n            this.deposito.saldo = \"\";\r\n            this.deposito.edit = false;\r\n        },\r\n\r\n        EliminarDeposito(index) {\r\n            let nombre = this.c_depositos[index].detalle;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.c_depositos.splice(index, 1);\r\n\r\n                    this.totales();\r\n                }\r\n            });\r\n        }, // fin eliminar deposito\r\n\r\n        actualizarDeposito() {\r\n            if (this.deposito.fecha.trim() === \"\") {\r\n                toastr.error(\"La Fecha es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.deposito.detalle.trim() === \"\") {\r\n                toastr.error(\"El Detalle es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.deposito.saldo.trim() === \"\") {\r\n                toastr.error(\"El Saldo es Obligatorio \", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.registro_id;\r\n                this.c_depositos[id].fecha = this.deposito.fecha;\r\n                this.c_depositos[id].detalle = this.deposito.detalle;\r\n                this.c_depositos[id].saldo = this.deposito.saldo;\r\n\r\n                this.cancelarEditDeposito();\r\n                this.totales();\r\n                toastr.error(\r\n                    \"Registro actualizado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            }\r\n        }, //fin de actualizar saldo\r\n\r\n        agregarSaldo() {\r\n            if (this.saldo.fecha.trim() === \"\") {\r\n                toastr.error(\"La Fecha es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.saldo.detalle.trim() === \"\") {\r\n                toastr.error(\"El Detalle es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.saldo.saldo.trim() === \"\") {\r\n                toastr.error(\"El Saldo es Obligatorio \", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                var saldo = {\r\n                    fecha: this.saldo.fecha,\r\n                    detalle: this.saldo.detalle,\r\n                    saldo: this.saldo.saldo\r\n                };\r\n                this.c_saldos.push(saldo);\r\n                toastr.success(\r\n                    \"El Valor agregado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.saldo.fecha = \"\";\r\n                this.saldo.detalle = \"\";\r\n                this.saldo.saldo = \"\";\r\n                this.totales();\r\n            }\r\n        }, //fin metodo agregar saldo\r\n\r\n        editSaldo(index) {\r\n            this.saldo.edit = true;\r\n            this.registro_id = index;\r\n            this.saldo.fecha = this.c_saldos[index].fecha;\r\n            this.saldo.detalle = this.c_saldos[index].detalle;\r\n            this.saldo.saldo = this.c_saldos[index].saldo;\r\n            $(\"#nav-bih-conciliacion-saldo-tab\").tab(\"show\");\r\n        }, //end edit saldos\r\n\r\n        editSaldoFuera(index) {\r\n            this.saldo.edit = true;\r\n            this.registro_id = index;\r\n            this.saldo.fecha = this.c_saldos[index].fecha;\r\n            this.saldo.detalle = this.c_saldos[index].detalle;\r\n            this.saldo.saldo = this.c_saldos[index].saldo;\r\n            $(\"#conciliacion-bancaria\").modal(\"show\");\r\n            $(\"#nav-bih-conciliacion-saldo-tab\").tab(\"show\");\r\n        }, //fin udpate saldo\r\n\r\n        cancelarEditSaldo() {\r\n            this.saldo.fecha = \"\";\r\n            this.saldo.detalle = \"\";\r\n            this.saldo.saldo = \"\";\r\n            this.saldo.edit = false;\r\n        },\r\n\r\n        EliminarSaldo(index) {\r\n            let nombre = this.c_saldos[index].detalle;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.c_saldos.splice(index, 1);\r\n\r\n                    this.totales();\r\n                }\r\n            });\r\n        },\r\n\r\n        actualizarSaldo() {\r\n            if (this.saldo.fecha.trim() === \"\") {\r\n                toastr.error(\"La Fecha es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.saldo.detalle.trim() === \"\") {\r\n                toastr.error(\"El Detalle es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.saldo.saldo.trim() === \"\") {\r\n                toastr.error(\"El Saldo es Obligatorio \", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.registro_id;\r\n                this.c_saldos[id].fecha = this.saldo.fecha;\r\n                this.c_saldos[id].detalle = this.saldo.detalle;\r\n                this.c_saldos[id].saldo = this.saldo.saldo;\r\n\r\n                this.cancelarEditSaldo();\r\n                this.totales();\r\n                toastr.error(\r\n                    \"Registro actualizado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            }\r\n        }, //fin de actualizar saldo\r\n\r\n        agregarCreditos() {\r\n            if (this.credito.fecha.trim() === \"\") {\r\n                toastr.error(\"La Fecha es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.credito.detalle.trim() === \"\") {\r\n                toastr.error(\"El Detalle es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.credito.saldo.trim() === \"\") {\r\n                toastr.error(\"El Valor es Obligatorio \", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                var credito = {\r\n                    fecha: this.credito.fecha,\r\n                    detalle: this.credito.detalle,\r\n                    saldo: this.credito.saldo\r\n                };\r\n                this.c_creditos.push(credito);\r\n                toastr.success(\r\n                    \"El Credito agregado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.credito.fecha = \"\";\r\n                this.credito.detalle = \"\";\r\n                this.credito.saldo = \"\";\r\n                this.totales();\r\n            }\r\n        }, //fin metodo agregar saldo\r\n\r\n        editCredito(index) {\r\n            this.credito.edit = true;\r\n            this.registro_id = index;\r\n            this.credito.fecha = this.c_creditos[index].fecha;\r\n            this.credito.detalle = this.c_creditos[index].detalle;\r\n            this.credito.saldo = this.c_creditos[index].saldo;\r\n\r\n            $(\"#nav-bih-conciliacion-credito-tab\").tab(\"show\");\r\n        }, //end edit saldos\r\n\r\n        editCreditoFuera(index) {\r\n            this.credito.edit = true;\r\n            this.registro_id = index;\r\n            this.credito.fecha = this.c_creditos[index].fecha;\r\n            this.credito.detalle = this.c_creditos[index].detalle;\r\n            this.credito.saldo = this.c_creditos[index].saldo;\r\n\r\n            $(\"#conciliacion-bancaria\").modal(\"show\");\r\n            $(\"#nav-bih-conciliacion-credito-tab\").tab(\"show\");\r\n        }, //fin udpate saldo\r\n\r\n        cancelarEditCredito() {\r\n            this.credito.fecha = \"\";\r\n            this.credito.detalle = \"\";\r\n            this.credito.saldo = \"\";\r\n            this.credito.edit = false;\r\n        },\r\n\r\n        EliminarCredito(index) {\r\n            let nombre = this.c_creditos[index].detalle;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.c_creditos.splice(index, 1);\r\n\r\n                    this.totales();\r\n                }\r\n            });\r\n        },\r\n\r\n        actualizarCredito() {\r\n            if (this.credito.fecha.trim() === \"\") {\r\n                toastr.error(\"La Fecha es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.credito.detalle.trim() === \"\") {\r\n                toastr.error(\"El Detalle es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.credito.saldo.trim() === \"\") {\r\n                toastr.error(\"El Saldo es Obligatorio \", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.registro_id;\r\n                this.c_creditos[id].fecha = this.credito.fecha;\r\n                this.c_creditos[id].detalle = this.credito.detalle;\r\n                this.c_creditos[id].saldo = this.credito.saldo;\r\n\r\n                this.cancelarEditCredito();\r\n                this.totales();\r\n                toastr.error(\r\n                    \"Registro actualizado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            }\r\n        }, //fin de actualizar credito\r\n\r\n        agregarDebitos() {\r\n            if (this.debito.fecha.trim() === \"\") {\r\n                toastr.error(\"La Fecha es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.debito.detalle.trim() === \"\") {\r\n                toastr.error(\"El Detalle es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.debito.saldo.trim() === \"\") {\r\n                toastr.error(\"El Valor es Obligatorio \", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                var debito = {\r\n                    fecha: this.debito.fecha,\r\n                    detalle: this.debito.detalle,\r\n                    saldo: this.debito.saldo\r\n                };\r\n                this.c_debitos.push(debito);\r\n                toastr.success(\r\n                    \"El Debito agregado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.debito.fecha = \"\";\r\n                this.debito.detalle = \"\";\r\n                this.debito.saldo = \"\";\r\n                this.totales();\r\n            }\r\n        }, //fin metodo agregar saldo\r\n\r\n        editDebito(index) {\r\n            this.debito.edit = true;\r\n            this.registro_id = index;\r\n            this.debito.fecha = this.c_debitos[index].fecha;\r\n            this.debito.detalle = this.c_debitos[index].detalle;\r\n            this.debito.saldo = this.c_debitos[index].saldo;\r\n            $(\"#nav-bih-conciliacion-debito-tab\").tab(\"show\");\r\n        }, //end edit saldos\r\n\r\n        editDebitoFuera(index) {\r\n            this.debito.edit = true;\r\n            this.registro_id = index;\r\n            this.debito.fecha = this.c_debitos[index].fecha;\r\n            this.debito.detalle = this.c_debitos[index].detalle;\r\n            this.debito.saldo = this.c_debitos[index].saldo;\r\n\r\n            $(\"#conciliacion-bancaria\").modal(\"show\");\r\n            $(\"#nav-bih-conciliacion-debito-tab\").tab(\"show\");\r\n        }, //fin udpate saldo\r\n\r\n        cancelarEditDebito() {\r\n            this.debito.fecha = \"\";\r\n            this.debito.detalle = \"\";\r\n            this.debito.saldo = \"\";\r\n            this.debito.edit = false;\r\n        },\r\n\r\n        EliminarDebito(index) {\r\n            let nombre = this.c_debitos[index].detalle;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.c_debitos.splice(index, 1);\r\n\r\n                    this.totales();\r\n                }\r\n            });\r\n        },\r\n\r\n        actualizarDebito() {\r\n            if (this.debito.fecha.trim() === \"\") {\r\n                toastr.error(\"La Fecha es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.debito.detalle.trim() === \"\") {\r\n                toastr.error(\"El Detalle es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.debito.saldo.trim() === \"\") {\r\n                toastr.error(\"El Saldo es Obligatorio \", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.registro_id;\r\n                this.c_debitos[id].fecha = this.debito.fecha;\r\n                this.c_debitos[id].detalle = this.debito.detalle;\r\n                this.c_debitos[id].saldo = this.debito.saldo;\r\n\r\n                this.cancelarEditDebito();\r\n                this.totales();\r\n                toastr.error(\r\n                    \"Registro actualizado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            }\r\n        }, //fin de actualizar debito\r\n\r\n        agregarCheques() {\r\n            if (this.cheques.fecha.trim() === \"\") {\r\n                toastr.error(\"La Fecha es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.cheques.detalle.trim() === \"\") {\r\n                toastr.error(\"El Detalle es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.cheques.saldo.trim() === \"\") {\r\n                toastr.error(\"El Valor es Obligatorio \", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                var cheques = {\r\n                    fecha: this.cheques.fecha,\r\n                    detalle: this.cheques.detalle,\r\n                    saldo: this.cheques.saldo\r\n                };\r\n                this.c_cheques.push(cheques);\r\n                toastr.success(\r\n                    \"El Cheque agregado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n\r\n                this.cheques.fecha = \"\";\r\n                this.cheques.detalle = \"\";\r\n                this.cheques.saldo = \"\";\r\n                this.totales();\r\n            }\r\n        }, //fin metodo agregar cheque\r\n\r\n        editCheque(index) {\r\n            this.cheques.edit = true;\r\n            this.registro_id = index;\r\n            this.cheques.fecha = this.c_cheques[index].fecha;\r\n            this.cheques.detalle = this.c_cheques[index].detalle;\r\n            this.cheques.saldo = this.c_cheques[index].saldo;\r\n\r\n            $(\"#nav-bih-conciliacion-cheque-tab\").tab(\"show\");\r\n        }, //end edit saldos\r\n\r\n        editChequeFuera(index) {\r\n            this.cheques.edit = true;\r\n            this.registro_id = index;\r\n            this.cheques.fecha = this.c_cheques[index].fecha;\r\n            this.cheques.detalle = this.c_cheques[index].detalle;\r\n            this.cheques.saldo = this.c_cheques[index].saldo;\r\n\r\n            $(\"#conciliacion-bancaria\").modal(\"show\");\r\n            $(\"#nav-bih-conciliacion-cheque-tab\").tab(\"show\");\r\n        }, //fin udpate saldo\r\n\r\n        cancelarEditCheque() {\r\n            this.cheques.fecha = \"\";\r\n            this.cheques.detalle = \"\";\r\n            this.cheques.saldo = \"\";\r\n            this.cheques.edit = false;\r\n        },\r\n\r\n        EliminarCheque(index) {\r\n            let nombre = this.c_cheques[index].detalle;\r\n            Swal.fire({\r\n                title: \"Seguro que deseas eliminar la cuenta \" + nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.c_cheques.splice(index, 1);\r\n\r\n                    this.totales();\r\n                }\r\n            });\r\n        },\r\n\r\n        actualizarCheque() {\r\n            if (this.cheques.fecha.trim() === \"\") {\r\n                toastr.error(\"La Fecha es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.cheques.detalle.trim() === \"\") {\r\n                toastr.error(\"El Detalle es Obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.cheques.saldo.trim() === \"\") {\r\n                toastr.error(\"El Saldo es Obligatorio \", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let id = this.registro_id;\r\n                this.c_cheques[id].fecha = this.cheques.fecha;\r\n                this.c_cheques[id].detalle = this.cheques.detalle;\r\n                this.c_cheques[id].saldo = this.cheques.saldo;\r\n\r\n                this.cancelarEditCheque();\r\n                this.totales();\r\n\r\n                toastr.error(\r\n                    \"Registro actualizado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            }\r\n        }, //fin de actualizar debito\r\n\r\n        limpiar() {\r\n            this.saldo.fecha = \"\";\r\n            this.saldo.detalle = \"\";\r\n            this.saldo.saldo = \"\";\r\n            this.debito.fecha = \"\";\r\n            this.debito.detalle = \"\";\r\n            this.debito.saldo = \"\";\r\n            this.credito.fecha = \"\";\r\n            this.credito.detalle = \"\";\r\n            this.credito.saldo = \"\";\r\n            this.cheques.detalle = \"\";\r\n            this.cheques.saldo = \"\";\r\n            this.cheques.fecha = \"\";\r\n            this.deposito.detalle = \"\";\r\n            this.deposito.saldo = \"\";\r\n            this.deposito.fecha = \"\";\r\n        }, //fin metodo limpiar todos los campos\r\n\r\n        guardarConciliacionB() {\r\n            if (this.nombre.length == 0) {\r\n                toastr.error(\r\n                    \"Debe Registrar el Nombre del Comercial\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.fecha.length == 0) {\r\n                toastr.error(\"Debe Ingresar la Fecha\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.n_banco.length == 0) {\r\n                toastr.error(\r\n                    \"Debe Ingresar el Nombre del Banco\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.c_saldos.length == 0) {\r\n                toastr.error(\r\n                    \"Debe haber al menos un Saldo Registrado\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.c_debitos.length == 0) {\r\n                toastr.error(\r\n                    \"Debe haber al menos un Débito Registrado\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.c_depositos.length == 0) {\r\n                toastr.error(\r\n                    \"Debe haber al menos un Depósito Registrado\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.c_creditos.length == 0) {\r\n                toastr.error(\r\n                    \"Debe haber al menos un Crédito Registrado\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.c_cheques.length == 0) {\r\n                toastr.error(\r\n                    \"Debe haber al menos un Cheque Registrado\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                let _this = this;\r\n                let url = \"/sistema/admin/taller/conciliacion_bancaria\";\r\n                axios\r\n                    .post(url, {\r\n                        id: _this.id_taller,\r\n                        nombre: _this.nombre,\r\n                        n_banco: _this.n_banco,\r\n                        fecha: _this.fecha,\r\n                        saldo_c: _this.suman.saldo_c,\r\n                        saldo_depositos: _this.suman.saldo_depositos,\r\n                        saldo_d: _this.suman.saldo_d,\r\n                        saldo_ch: _this.suman.saldo_ch,\r\n                        total: _this.suman.total,\r\n                        c_saldos: _this.c_saldos,\r\n                        c_debitos: _this.c_debitos,\r\n                        c_creditos: _this.c_creditos,\r\n                        c_cheques: _this.c_cheques,\r\n                        c_depositos: _this.c_depositos\r\n                    })\r\n                    .then(response => {\r\n                        if (response.data.estado == \"guardado\") {\r\n                            toastr.success(\r\n                                \"Conciliación Bancaria creada correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                        } else if (response.data.estado == \"actualizado\") {\r\n                            toastr.warning(\r\n                                \"Conciliación Bancaria actualizado correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            this.totales();\r\n                        }\r\n                    })\r\n                    .catch(function (error) { });\r\n            } //end else\r\n        }, //fin guardado conciliacion\r\n\r\n        obtenerConciliacionBancaria: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/conciliacion-obtener-bancaria\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        toastr.info(\r\n                            \"Anexo Conciliación Bancaria cargado correctamente\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                        this.c_saldos = response.data.saldo;\r\n                        this.c_debitos = response.data.debito;\r\n                        this.c_depositos = response.data.deposito;\r\n                        this.c_creditos = response.data.credito;\r\n                        this.c_cheques = response.data.cheque;\r\n                        this.nombre = response.data.nombre;\r\n                        this.n_banco = response.data.n_banco;\r\n                        this.fecha = response.data.fecha;\r\n                        this.totales();\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        } //fin metodo obtener conciliacion bancaria\r\n    }\r\n});\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////RETENCION DEL IVA /////////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\nlet reten_iva = new Vue({\r\n    el: \"#retencion_iva\",\r\n    data: {\r\n        id_taller: taller,\r\n        nombre_c: \"\",\r\n        fecha: \"\",\r\n        contribuyente: \"\",\r\n        ruc: \"\",\r\n        dgeneral: [],\r\n        eliminar: {\r\n            index: \"\",\r\n            nombre: \"\"\r\n        },\r\n        t_ventas: [],\r\n        t_compras: [],\r\n        compra: {\r\n            edit: false,\r\n            fecha_c: \"\",\r\n            detalle: \"\",\r\n            proveedor: \"\",\r\n            base_im: \"\",\r\n            porcentaje: \"\",\r\n            v_retenido: \"\",\r\n            iva: \"\",\r\n            ret_10: \"\",\r\n            ret_20: \"\",\r\n            ret_30: \"\",\r\n            ret_70: \"\",\r\n            ret_100: \"\"\r\n        },\r\n        suma_c: {\r\n            suma_base: 0,\r\n            suma_reten: 0,\r\n            suma_ivac: 0,\r\n            suma_10: 0,\r\n            suma_20: 0,\r\n            suma_30: 0,\r\n            suma_70: 0,\r\n            suma_100: 0\r\n        },\r\n\r\n        venta: {\r\n            edit: false,\r\n            fecha_v: \"\",\r\n            detalle: \"\",\r\n            cliente: \"\",\r\n            base_im: \"\",\r\n            porcentaje: \"\",\r\n            v_retenido: \"\",\r\n            iva: \"\",\r\n            ret_10: \"\",\r\n            ret_20: \"\",\r\n            ret_30: \"\",\r\n            ret_70: \"\",\r\n            ret_100: \"\"\r\n        },\r\n        suma_v: {\r\n            suma_base: 0,\r\n            suma_reten: 0,\r\n            suma_ivav: 0,\r\n            suma_10: 0,\r\n            suma_20: 0,\r\n            suma_30: 0,\r\n            suma_70: 0,\r\n            suma_100: 0\r\n        },\r\n        total: {\r\n            t_ivacompra: \"\",\r\n            t_ivaventa: \"\",\r\n            total_pagar: \"\",\r\n            result_iva: \"\",\r\n            t_reten: \"\"\r\n        },\r\n        update: false,\r\n        registro_id: \"\"\r\n    }, //fin del data\r\n    mounted: function () {\r\n        this.obtenerDiarioGeneral();\r\n        this.obtenerRetencionIva();\r\n    },\r\n\r\n    methods: {\r\n        calculadora() {\r\n            let propsData = {\r\n                title: \"Called from basic js\",\r\n                noteProp: [\"Note number 1\", \"Note number 2\"]\r\n            };\r\n            let component = \"example-component\";\r\n            funciones.VueSweetAlert2(component, propsData);\r\n        },\r\n        obtenerDiarioGeneral: function () {\r\n            var _this = this;\r\n            var url = \"/sistema/admin/taller/diariogeneral\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        _this.dgeneral = response.data.registros;\r\n                        _this.ajustes = response.data.ajustes;\r\n                        _this.nombre_dgral = response.data.nombre;\r\n                        let inicial = response.data.inicial;\r\n                        _this.dgeneral.unshift(inicial);\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        }, //fin metodo obtener diario general\r\n\r\n        formatoFecha(fecha) {\r\n            if (fecha !== null) {\r\n                let date = fecha\r\n                    .split(\"-\")\r\n                    .reverse()\r\n                    .join(\"-\");\r\n                return date;\r\n            } else {\r\n                return;\r\n            }\r\n        }, //fin metodo formatofecha\r\n\r\n        decimales(saldo) {\r\n            if (saldo !== null && saldo !== \"\" && saldo !== 0) {\r\n                let total = Number(saldo).toFixed(2);\r\n                return total;\r\n            } else {\r\n                return;\r\n            }\r\n        }, //fin metodo decimales\r\n\r\n        Totales() {\r\n            let r1 = this.t_compras;\r\n            let r2 = this.t_ventas;\r\n\r\n            let c1 = 0;\r\n            let c2 = 0;\r\n            let c3 = 0;\r\n            let c4 = 0;\r\n            let c5 = 0;\r\n            let c6 = 0;\r\n            let c7 = 0;\r\n            let c8 = 0;\r\n\r\n            let v1 = 0;\r\n            let v2 = 0;\r\n            let v3 = 0;\r\n            let v4 = 0;\r\n            let v5 = 0;\r\n            let v6 = 0;\r\n            let v7 = 0;\r\n            let v8 = 0;\r\n\r\n            //suma compras\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.base_im;\r\n                if (temp != null && temp !== \"\") {\r\n                    c1 += Number(temp);\r\n                }\r\n            });\r\n            this.suma_c.suma_base = c1.toFixed(2);\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.v_retenido;\r\n                if (temp != null && temp !== \"\") {\r\n                    c2 += Number(temp);\r\n                }\r\n            });\r\n            this.suma_c.suma_reten = c2.toFixed(2);\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.iva;\r\n                if (temp != null && temp !== \"\") {\r\n                    c3 += Number(temp);\r\n                }\r\n            });\r\n            this.suma_c.suma_ivac = c3.toFixed(2);\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.ret_10;\r\n                if (temp != null && temp !== \"\") {\r\n                    c4 += Number(temp);\r\n                }\r\n            });\r\n            this.suma_c.suma_10 = c4.toFixed(2);\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.ret_20;\r\n                if (temp != null && temp !== \"\") {\r\n                    c5 += Number(temp);\r\n                }\r\n            });\r\n            this.suma_c.suma_20 = c5.toFixed(2);\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.ret_30;\r\n                if (temp != null && temp !== \"\") {\r\n                    c6 += Number(temp);\r\n                }\r\n            });\r\n            this.suma_c.suma_30 = c6.toFixed(2);\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.ret_70;\r\n                if (temp != null && temp !== \"\") {\r\n                    c7 += Number(temp);\r\n                }\r\n            });\r\n            this.suma_c.suma_70 = c7.toFixed(2);\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.ret_100;\r\n                if (temp != null && temp !== \"\") {\r\n                    c8 += Number(temp);\r\n                }\r\n            });\r\n            this.suma_c.suma_100 = c8.toFixed(2);\r\n            //\r\n            //sumas ventas\r\n            //\r\n\r\n            r2.forEach(function (r2, i) {\r\n                let temp = r2.base_im;\r\n                if (temp != null && temp !== \"\") {\r\n                    v1 += Number(temp);\r\n                }\r\n            });\r\n            this.suma_v.suma_base = v1.toFixed(2);\r\n\r\n            r2.forEach(function (r2, i) {\r\n                let temp = r2.v_retenido;\r\n                if (temp != null && temp !== \"\") {\r\n                    v2 += Number(temp);\r\n                }\r\n            });\r\n            this.suma_v.suma_reten = v2.toFixed(2);\r\n\r\n            r2.forEach(function (r2, i) {\r\n                let temp = r2.iva;\r\n                if (temp != null && temp !== \"\") {\r\n                    v3 += Number(temp);\r\n                }\r\n            });\r\n            this.suma_v.suma_ivav = v3.toFixed(2);\r\n\r\n            r2.forEach(function (r2, i) {\r\n                let temp = r2.ret_10;\r\n                if (temp != null && temp !== \"\") {\r\n                    v4 += Number(temp);\r\n                }\r\n            });\r\n            this.suma_v.suma_10 = v4.toFixed(2);\r\n\r\n            r2.forEach(function (r2, i) {\r\n                let temp = r2.ret_20;\r\n                if (temp != null && temp !== \"\") {\r\n                    v5 += Number(temp);\r\n                }\r\n            });\r\n            this.suma_v.suma_20 = v5.toFixed(2);\r\n\r\n            r2.forEach(function (r2, i) {\r\n                let temp = r2.ret_30;\r\n                if (temp != null && temp !== \"\") {\r\n                    v6 += Number(temp);\r\n                }\r\n            });\r\n            this.suma_v.suma_30 = v6.toFixed(2);\r\n\r\n            r2.forEach(function (r2, i) {\r\n                let temp = r2.ret_70;\r\n                if (temp != null && temp !== \"\") {\r\n                    v7 += Number(temp);\r\n                }\r\n            });\r\n            this.suma_v.suma_70 = v7.toFixed(2);\r\n\r\n            r2.forEach(function (r2, i) {\r\n                let temp = r2.ret_100;\r\n                if (temp != null && temp !== \"\") {\r\n                    v8 += Number(temp);\r\n                }\r\n            });\r\n            this.suma_v.suma_100 = v8.toFixed(2);\r\n        }, //fin de sumatotales\r\n\r\n        abrirCompra() {\r\n            //solo para acceder al modal para agregar todo pilas\r\n\r\n            $(\"#modal-retencion\").modal(\"show\");\r\n            $(\"#ht-retencion-compra-tab\").tab(\"show\");\r\n        }, //fin de metodo abrirtransaccion\r\n        abrirVenta() {\r\n            //solo para acceder al modal para agregar todo pilas\r\n\r\n            $(\"#modal-retencion\").modal(\"show\");\r\n            $(\"#ht-retencion-venta-tab\").tab(\"show\");\r\n        }, //fin de metodo abrirtransaccion\r\n\r\n        agregarCompra() {\r\n            if (this.compra.fecha_c == \"\") {\r\n                toastr.error(\"El campo Fecha es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.compra.detalle == \"\") {\r\n                toastr.error(\r\n                    \"El campo de Compra de Bienes y Servicios es obligatorio\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                let compra = {\r\n                    fecha_c: this.compra.fecha_c,\r\n                    detalle: this.compra.detalle,\r\n                    proveedor: this.compra.proveedor,\r\n                    base_im: this.compra.base_im,\r\n                    porcentaje: this.compra.porcentaje,\r\n                    v_retenido: this.compra.v_retenido,\r\n                    iva: this.compra.iva,\r\n                    ret_10: this.compra.ret_10,\r\n                    ret_20: this.compra.ret_20,\r\n                    ret_30: this.compra.ret_30,\r\n                    ret_70: this.compra.ret_70,\r\n                    ret_100: this.compra.ret_100\r\n                };\r\n                this.t_compras.push(compra);\r\n                toastr.success(\r\n                    \"Registro agregado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.compra.fecha_c = \"\";\r\n                this.compra.detalle = \"\";\r\n                this.compra.proveedor = \"\";\r\n                this.compra.base_im = \"\";\r\n                this.compra.porcentaje = \"\";\r\n                this.compra.v_retenido = \"\";\r\n                this.compra.iva = \"\";\r\n                this.compra.ret_10 = \"\";\r\n                this.compra.ret_20 = \"\";\r\n                this.compra.ret_30 = \"\";\r\n                this.compra.ret_70 = \"\";\r\n                this.compra.ret_100 = \"\";\r\n                this.Totales();\r\n            }\r\n        }, //fin de agregarCompra\r\n\r\n        editCompra(index) {\r\n            this.compra.edit = true;\r\n            this.registro_id = index;\r\n            this.compra.fecha_c = this.t_compras[index].fecha_c;\r\n            this.compra.detalle = this.t_compras[index].detalle;\r\n            this.compra.proveedor = this.t_compras[index].proveedor;\r\n            this.compra.base_im = this.t_compras[index].base_im;\r\n            this.compra.porcentaje = this.t_compras[index].porcentaje;\r\n            this.compra.v_retenido = this.t_compras[index].v_retenido;\r\n            this.compra.iva = this.t_compras[index].iva;\r\n            this.compra.ret_10 = this.t_compras[index].ret_10;\r\n            this.compra.ret_20 = this.t_compras[index].ret_20;\r\n            this.compra.ret_30 = this.t_compras[index].ret_30;\r\n            this.compra.ret_70 = this.t_compras[index].ret_70;\r\n            this.compra.ret_100 = this.t_compras[index].ret_100;\r\n\r\n            $(\"#ht-retencion-compra-tab\").tab(\"show\");\r\n        }, //fin de edit modal\r\n\r\n        editCompraFuera(index) {\r\n            this.compra.edit = true;\r\n            this.registro_id = index;\r\n            this.compra.fecha_c = this.t_compras[index].fecha_c;\r\n            this.compra.detalle = this.t_compras[index].detalle;\r\n            this.compra.proveedor = this.t_compras[index].proveedor;\r\n            this.compra.base_im = this.t_compras[index].base_im;\r\n            this.compra.porcentaje = this.t_compras[index].porcentaje;\r\n            this.compra.v_retenido = this.t_compras[index].v_retenido;\r\n            this.compra.iva = this.t_compras[index].iva;\r\n            this.compra.ret_10 = this.t_compras[index].ret_10;\r\n            this.compra.ret_20 = this.t_compras[index].ret_20;\r\n            this.compra.ret_30 = this.t_compras[index].ret_30;\r\n            this.compra.ret_70 = this.t_compras[index].ret_70;\r\n            this.compra.ret_100 = this.t_compras[index].ret_100;\r\n\r\n            $(\"#modal-retencion\").modal(\"show\");\r\n            $(\"#ht-retencion-compra-tab\").tab(\"show\");\r\n        }, //fin de edit modal\r\n\r\n        cancelarEditCompra() {\r\n            this.compra.fecha_c = \"\";\r\n            this.compra.detalle = \"\";\r\n            this.compra.proveedor = \"\";\r\n            this.compra.base_im = \"\";\r\n            this.compra.porcentaje = \"\";\r\n            this.compra.v_retenido = \"\";\r\n            this.compra.iva = \"\";\r\n            this.compra.ret_10 = \"\";\r\n            this.compra.ret_20 = \"\";\r\n            this.compra.ret_30 = \"\";\r\n            this.compra.ret_70 = \"\";\r\n            this.compra.ret_100 = \"\";\r\n            this.compra.edit = false;\r\n        }, //fin de cancelar edicion\r\n\r\n        actualizarCompra() {\r\n            if (this.compra.fecha_c == \"\") {\r\n                toastr.error(\"El campo Fecha es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.compra.detalle == \"\") {\r\n                toastr.error(\r\n                    \"El campo de Compra de Bienes y Servicios es obligatorio\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                let index = this.registro_id;\r\n\r\n                this.t_compras[index].fecha_c = this.compra.fecha_c;\r\n                this.t_compras[index].detalle = this.compra.detalle;\r\n                this.t_compras[index].proveedor = this.compra.proveedor;\r\n                this.t_compras[index].base_im = this.compra.base_im;\r\n                this.t_compras[index].porcentaje = this.compra.porcentaje;\r\n                this.t_compras[index].v_retenido = this.compra.v_retenido;\r\n                this.t_compras[index].iva = this.compra.iva;\r\n                this.t_compras[index].ret_10 = this.compra.ret_10;\r\n                this.t_compras[index].ret_20 = this.compra.ret_20;\r\n                this.t_compras[index].ret_30 = this.compra.ret_30;\r\n                this.t_compras[index].ret_70 = this.compra.ret_70;\r\n                this.t_compras[index].ret_100 = this.compra.ret_100;\r\n                this.cancelarEditCompra();\r\n                this.Totales();\r\n                toastr.error(\r\n                    \"Registro actualizado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            }\r\n        }, //fin de function  actualizar\r\n\r\n        WarningEliminarCompra(id) {\r\n            this.eliminar.index = id;\r\n            this.eliminar.nombre = this.t_compras[id].detalle;\r\n\r\n            Swal.fire({\r\n                title:\r\n                    \"Seguro que deseas eliminar este Registro \" +\r\n                    this.eliminar.nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + this.eliminar.nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.t_compras.splice(id, 1);\r\n                    this.Totales();\r\n                }\r\n            });\r\n        }, //fin metodo warningeliminarcompra\r\n\r\n        agregarVenta() {\r\n            if (this.venta.fecha_v == \"\") {\r\n                toastr.error(\"El campo Fecha es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.venta.detalle == \"\") {\r\n                toastr.error(\r\n                    \"El campo de Venta de Bienes y Servicios es obligatorio\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                let venta = {\r\n                    fecha_v: this.venta.fecha_v,\r\n                    detalle: this.venta.detalle,\r\n                    cliente: this.venta.cliente,\r\n                    base_im: this.venta.base_im,\r\n                    porcentaje: this.venta.porcentaje,\r\n                    v_retenido: this.venta.v_retenido,\r\n                    iva: this.venta.iva,\r\n                    ret_10: this.venta.ret_10,\r\n                    ret_20: this.venta.ret_20,\r\n                    ret_30: this.venta.ret_30,\r\n                    ret_70: this.venta.ret_70,\r\n                    ret_100: this.venta.ret_100\r\n                };\r\n                this.t_ventas.push(venta);\r\n                toastr.success(\r\n                    \"Registro agregado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.venta.fecha_v = \"\";\r\n                this.venta.detalle = \"\";\r\n                this.venta.cliente = \"\";\r\n                this.venta.base_im = \"\";\r\n                this.venta.porcentaje = \"\";\r\n                this.venta.v_retenido = \"\";\r\n                this.venta.iva = \"\";\r\n                this.venta.ret_10 = \"\";\r\n                this.venta.ret_20 = \"\";\r\n                this.venta.ret_30 = \"\";\r\n                this.venta.ret_70 = \"\";\r\n                this.venta.ret_100 = \"\";\r\n                this.Totales();\r\n            }\r\n        }, //fin de agregarVenta\r\n\r\n        editVenta(index) {\r\n            this.venta.edit = true;\r\n            this.registro_id = index;\r\n            this.venta.fecha_v = this.t_ventas[index].fecha_v;\r\n            this.venta.detalle = this.t_ventas[index].detalle;\r\n            this.venta.cliente = this.t_ventas[index].cliente;\r\n            this.venta.base_im = this.t_ventas[index].base_im;\r\n            this.venta.porcentaje = this.t_ventas[index].porcentaje;\r\n            this.venta.v_retenido = this.t_ventas[index].v_retenido;\r\n            this.venta.iva = this.t_ventas[index].iva;\r\n            this.venta.ret_10 = this.t_ventas[index].ret_10;\r\n            this.venta.ret_20 = this.t_ventas[index].ret_20;\r\n            this.venta.ret_30 = this.t_ventas[index].ret_30;\r\n            this.venta.ret_70 = this.t_ventas[index].ret_70;\r\n            this.venta.ret_100 = this.t_ventas[index].ret_100;\r\n\r\n            $(\"#ht-retencion-venta-tab\").tab(\"show\");\r\n        }, //fin de edit modal\r\n\r\n        editVentaFuera(index) {\r\n            this.venta.edit = true;\r\n            this.registro_id = index;\r\n            this.venta.fecha_v = this.t_ventas[index].fecha_v;\r\n            this.venta.detalle = this.t_ventas[index].detalle;\r\n            this.venta.cliente = this.t_ventas[index].cliente;\r\n            this.venta.base_im = this.t_ventas[index].base_im;\r\n            this.venta.porcentaje = this.t_ventas[index].porcentaje;\r\n            this.venta.v_retenido = this.t_ventas[index].v_retenido;\r\n            this.venta.iva = this.t_ventas[index].iva;\r\n            this.venta.ret_10 = this.t_ventas[index].ret_10;\r\n            this.venta.ret_20 = this.t_ventas[index].ret_20;\r\n            this.venta.ret_30 = this.t_ventas[index].ret_30;\r\n            this.venta.ret_70 = this.t_ventas[index].ret_70;\r\n            this.venta.ret_100 = this.t_ventas[index].ret_100;\r\n\r\n            $(\"#modal-retencion\").modal(\"show\");\r\n            $(\"#ht-retencion-venta-tab\").tab(\"show\");\r\n        }, //fin de edit modal venta\r\n\r\n        cancelarEditVenta() {\r\n            this.venta.fecha_v = \"\";\r\n            this.venta.detalle = \"\";\r\n            this.venta.cliente = \"\";\r\n            this.venta.base_im = \"\";\r\n            this.venta.porcentaje = \"\";\r\n            this.venta.v_retenido = \"\";\r\n            this.venta.iva = \"\";\r\n            this.venta.ret_10 = \"\";\r\n            this.venta.ret_20 = \"\";\r\n            this.venta.ret_30 = \"\";\r\n            this.venta.ret_70 = \"\";\r\n            this.venta.ret_100 = \"\";\r\n            this.venta.edit = false;\r\n        }, //fin de cancelar edicion venta\r\n\r\n        actualizarVenta() {\r\n            if (this.venta.fecha_v == \"\") {\r\n                toastr.error(\"El campo Fecha es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.venta.detalle == \"\") {\r\n                toastr.error(\r\n                    \"El campo de Venta de Bienes y Servicios es obligatorio\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                let index = this.registro_id;\r\n\r\n                this.t_ventas[index].fecha_v = this.venta.fecha_v;\r\n                this.t_ventas[index].detalle = this.venta.detalle;\r\n                this.t_ventas[index].cliente = this.venta.cliente;\r\n                this.t_ventas[index].base_im = this.venta.base_im;\r\n                this.t_ventas[index].porcentaje = this.venta.porcentaje;\r\n                this.t_ventas[index].v_retenido = this.venta.v_retenido;\r\n                this.t_ventas[index].iva = this.venta.iva;\r\n                this.t_ventas[index].ret_10 = this.venta.ret_10;\r\n                this.t_ventas[index].ret_20 = this.venta.ret_20;\r\n                this.t_ventas[index].ret_30 = this.venta.ret_30;\r\n                this.t_ventas[index].ret_70 = this.venta.ret_70;\r\n                this.t_ventas[index].ret_100 = this.venta.ret_100;\r\n                this.cancelarEditVenta();\r\n                this.Totales();\r\n                toastr.error(\r\n                    \"Registro actualizado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            }\r\n        }, //fin de function  actualizar\r\n\r\n        WarningEliminarVenta(id) {\r\n            this.eliminar.index = id;\r\n            this.eliminar.nombre = this.t_ventas[id].detalle;\r\n\r\n            Swal.fire({\r\n                title:\r\n                    \"Seguro que deseas eliminar este Registro \" +\r\n                    this.eliminar.nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la cuenta \" + this.eliminar.nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.t_ventas.splice(id, 1);\r\n                    this.Totales();\r\n                }\r\n            });\r\n        }, //fin metodo warningeliminarcompra\r\n\r\n        guardaretencioniva() {\r\n            if (this.nombre_c.length == 0) {\r\n                toastr.error(\r\n                    \"Debe Registrar el Nombre del Comercial\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.fecha.length == 0) {\r\n                toastr.error(\"Debe Ingresar la Fecha\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.contribuyente.length == 0) {\r\n                toastr.error(\"Debe Ingresar El Contribuyente\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.ruc.length == 0) {\r\n                toastr.error(\"Debe Ingresar el Ruc \", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let _this = this;\r\n                let url = \"/sistema/admin/taller/retencion_iva\";\r\n                axios\r\n                    .post(url, {\r\n                        id: _this.id_taller,\r\n                        nombre_c: _this.nombre_c,\r\n                        contribuyente: _this.contribuyente,\r\n                        fecha: _this.fecha,\r\n                        ruc: _this.ruc,\r\n                        sumac_base: _this.suma_c.suma_base,\r\n                        sumac_reten: _this.suma_c.suma_reten,\r\n                        sumac_ivac: _this.suma_c.suma_ivac,\r\n                        sumac_10: _this.suma_c.suma_10,\r\n                        sumac_20: _this.suma_c.suma_20,\r\n                        sumac_30: _this.suma_c.suma_30,\r\n                        sumac_70: _this.suma_c.suma_70,\r\n                        sumac_100: _this.suma_c.suma_100,\r\n                        sumav_base: _this.suma_v.suma_base,\r\n                        sumav_reten: _this.suma_v.suma_reten,\r\n                        sumav_ivav: _this.suma_v.suma_ivav,\r\n                        sumav_10: _this.suma_v.suma_10,\r\n                        sumav_20: _this.suma_v.suma_20,\r\n                        sumav_30: _this.suma_v.suma_30,\r\n                        sumav_70: _this.suma_v.suma_70,\r\n                        sumav_100: _this.suma_v.suma_100,\r\n                        t_ivacompra: _this.total.t_ivacompra,\r\n                        t_ivaventa: _this.total.t_ivaventa,\r\n                        total: _this.total.total_pagar,\r\n                        t_reten: _this.total.t_reten,\r\n                        result_iva: _this.total.result_iva,\r\n                        t_compras: _this.t_compras,\r\n                        t_ventas: _this.t_ventas\r\n                    })\r\n                    .then(response => {\r\n                        if (response.data.estado == \"guardado\") {\r\n                            toastr.success(\r\n                                \"Retención del Iva creada correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                        } else if (response.data.estado == \"actualizado\") {\r\n                            toastr.warning(\r\n                                \"Retención del Iva actualizado correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            this.Totales();\r\n                        }\r\n                    })\r\n                    .catch(function (error) { });\r\n            } //else fin\r\n        }, //fin metodo guardar\r\n\r\n        obtenerRetencionIva: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/retencion-obtener-iva\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        toastr.info(\r\n                            \"Anexo Retencion del Iva cargado correctamente\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                        this.t_compras = response.data.compra;\r\n                        this.t_ventas = response.data.venta;\r\n                        this.nombre_c = response.data.nombre;\r\n                        this.ruc = response.data.ruc;\r\n                        this.contribuyente = response.data.contribuyente;\r\n                        this.fecha = response.data.fecha;\r\n                        this.total.t_ivacompra = response.data.t_ivacompra;\r\n                        this.total.t_ivaventa = response.data.t_ivaventa;\r\n                        this.total.t_reten = response.data.t_reten;\r\n                        this.total.result_iva = response.data.result_iva;\r\n                        this.total.total_pagar = response.data.total;\r\n                        this.Totales();\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        } //fin metodo obtener retencion del iva\r\n    } //fin de methods\r\n});\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////NOMINA DE EMPLEADOS ///////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\nconst nomina_em = new Vue({\r\n    el: \"#nomina_empleado\",\r\n    data: {\r\n        id_taller: taller,\r\n        fecha: \"\",\r\n        nombre: \"\",\r\n        t_nomina: [],\r\n        nomina: {\r\n            edit: false,\r\n            nombre_e: \"\",\r\n            cargo: \"\",\r\n            sueldo: \"\",\r\n            s_tiempo: \"\",\r\n            ingresos: \"\",\r\n            iees: \"\",\r\n            pres_iees: \"\",\r\n            pres_cia: \"\",\r\n            anticipo: \"\",\r\n            imp_renta: \"\",\r\n            egresos: \"\",\r\n            neto_pagar: \"\"\r\n        },\r\n        eliminar: {\r\n            index: \"\",\r\n            nombre: \"\"\r\n        },\r\n        sobretiempo: {\r\n            sueldo: \"\",\r\n            hora_trabajo: \"\",\r\n            total_suple: \"\",\r\n            total_extra: \"\",\r\n            suma_suple: \"\",\r\n            suma_extra: \"\",\r\n\r\n            total: \"\"\r\n        },\r\n        calculo: {\r\n            valor: \"\",\r\n            tiempo: \"\",\r\n            interes: \"\",\r\n            total: \"\"\r\n        },\r\n        calculo1: {\r\n            valor: \"\",\r\n            mes: \"\",\r\n            interes: \"\",\r\n            total: \"\"\r\n        },\r\n        suma: {\r\n            s_sueldo: 0,\r\n            s_sobretiempo: 0,\r\n            s_tingreso: 0,\r\n            s_iess: 0,\r\n            s_piess: 0,\r\n            s_pcias: 0,\r\n            s_anticipo: 0,\r\n            s_impr: 0,\r\n            s_tegresos: 0,\r\n            s_netopagar: 0\r\n        },\r\n        deduccion: {\r\n            valor: \"\",\r\n            descripcion: \"\"\r\n        },\r\n        deducciones: [],\r\n        impuesto: {\r\n            iva: \"\",\r\n            fraccion_excedente_iva: \"\",\r\n            ingreso_gravable: \"\",\r\n            iies: \"\",\r\n            ingreso_liquido: \"\",\r\n            sueldo: \"\",\r\n            comisiones: \"\",\r\n            fraccion: \"\",\r\n            fraccion_excedente: \"\",\r\n            impuesto_fraccion: \"\",\r\n            ingreso_mensual: \"\",\r\n            base_imponible: \"\",\r\n            ingreso_anual: \"\",\r\n            interes: \"\",\r\n            total: \"\",\r\n            total_impuesto: \"\"\r\n        },\r\n\r\n        update: false,\r\n        registro_id: \"\"\r\n    }, //end data\r\n    mounted: function () {\r\n        this.obtenerNomina();\r\n    },\r\n\r\n    methods: {\r\n        calculadora() {\r\n            let propsData = {\r\n                title: \"Called from basic js\",\r\n                noteProp: [\"Note number 1\", \"Note number 2\"]\r\n            };\r\n            let component = \"example-component\";\r\n            funciones.VueSweetAlert2(component, propsData);\r\n        },\r\n        calculoHora() {\r\n            if (this.sobretiempo.sueldo == \"\") {\r\n                toastr.error(\"No ha agregado el sueldo\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let hora_trabajo = Number(this.sobretiempo.sueldo) / 30 / 8;\r\n                this.sobretiempo.hora_trabajo = Number(hora_trabajo).toFixed(2);\r\n            }\r\n        },\r\n        calculoSobre() {\r\n            let suplementaria =\r\n                Number(this.sobretiempo.total_suple) *\r\n                Number(this.sobretiempo.hora_trabajo) *\r\n                1.5;\r\n            let extraordinaria =\r\n                Number(this.sobretiempo.total_extra) *\r\n                Number(this.sobretiempo.hora_trabajo) *\r\n                2;\r\n            this.sobretiempo.suma_suple = Number(suplementaria).toFixed(2);\r\n            this.sobretiempo.suma_extra = Number(extraordinaria).toFixed(2);\r\n            this.sobretiempo.total = Number(\r\n                suplementaria + extraordinaria\r\n            ).toFixed(2);\r\n        },\r\n        limpiarSobre() {\r\n            this.sobretiempo.sueldo = \"\";\r\n            this.sobretiempo.hora_trabajo = \"\";\r\n            this.sobretiempo.total_suple = \"\";\r\n            this.sobretiempo.total_extra = \"\";\r\n            this.sobretiempo.suma_suple = \"\";\r\n            this.sobretiempo.suma_extra = \"\";\r\n            this.sobretiempo.total = \"\";\r\n        },\r\n        impuestoAgregado(tipo) {\r\n            if (tipo == \"ingresos\") {\r\n                let sueldo = Number(this.impuesto.sueldo);\r\n                let comision = Number(this.impuesto.comisiones);\r\n\r\n                let ingreso_gravable = sueldo - comision;\r\n                this.impuesto.ingreso_gravable = Number(\r\n                    ingreso_gravable\r\n                ).toFixed(2);\r\n\r\n                let iies = (ingreso_gravable * 9.45) / 100;\r\n                this.impuesto.iies = Number(iies).toFixed(2);\r\n\r\n                let ingreso_liquido = ingreso_gravable - iies;\r\n                this.impuesto.ingreso_liquido = Number(ingreso_liquido).toFixed(\r\n                    2\r\n                );\r\n                this.impuestoAgregado(\"deduccion\");\r\n            } else if (tipo == \"deduccion\") {\r\n                let deduccion = 0;\r\n                let deducciones = this.deducciones;\r\n                deducciones.forEach(function (d) {\r\n                    deduccion += Number(d.valor);\r\n                });\r\n                let ingreso_liquido = Number(this.impuesto.ingreso_liquido);\r\n                let ingreso_mensual = ingreso_liquido - deduccion;\r\n                let ingreso_anual = ingreso_mensual * 12;\r\n\r\n                this.impuesto.ingreso_mensual = Number(ingreso_mensual).toFixed(\r\n                    2\r\n                );\r\n                this.impuesto.ingreso_anual = Number(ingreso_anual).toFixed(2);\r\n                this.impuesto.base_imponible = Number(ingreso_anual).toFixed(2);\r\n            } else if (tipo == \"final\") {\r\n                let iva = Number(this.impuesto.interes);\r\n                let base_imponible = Number(this.impuesto.base_imponible);\r\n                let fraccion = Number(this.impuesto.fraccion);\r\n                let impuesto_fraccion = Number(this.impuesto.impuesto_fraccion);\r\n\r\n                let fraccion_excedente = base_imponible - Number(fraccion);\r\n                let fraccion_excedenteiva =\r\n                    (fraccion_excedente * Number(iva)) / 100;\r\n                let total_impuesto =\r\n                    Number(impuesto_fraccion) + fraccion_excedenteiva;\r\n\r\n                this.impuesto.fraccion_excedente = Number(\r\n                    fraccion_excedente\r\n                ).toFixed(2);\r\n                this.impuesto.fraccion_excedente_iva = Number(\r\n                    fraccion_excedenteiva\r\n                ).toFixed(2);\r\n                this.impuesto.total_impuesto = Number(total_impuesto).toFixed(\r\n                    2\r\n                );\r\n                let total = total_impuesto / 12;\r\n                this.impuesto.total = Number(total).toFixed(2);\r\n                this.impuesto.iva = iva;\r\n            }\r\n        },\r\n\r\n        agregardeduccion() {\r\n            if (this.deduccion.valor == \"\") {\r\n                toastr.error(\"No puede dejar el campo vacio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let valor = Number(this.deduccion.valor);\r\n                let deduccio = {\r\n                    valor: valor,\r\n                    descripcion: this.deduccion.descripcion\r\n                };\r\n                this.deducciones.push(deduccio);\r\n                this.deduccion.descripcion = \"\";\r\n                this.deduccion.valor = \"\";\r\n                this.impuestoAgregado(\"deduccion\");\r\n            }\r\n        },\r\n        limpiar() {\r\n            this.impuesto.total = \"\";\r\n            this.impuesto.sueldo = \"\";\r\n            this.impuesto.fraccion = \"\";\r\n            this.impuesto.impuesto_fraccion = \"\";\r\n            this.impuesto.interes = \"\";\r\n            this.deducciones = [];\r\n            this.impuesto.comisiones = \"\";\r\n            this.impuesto.ingreso_gravable = \"\";\r\n            this.impuesto.iies = \"\";\r\n            this.impuesto.ingreso_liquido = \"\";\r\n            this.impuesto.ingreso_mensual = \"\";\r\n            this.impuesto.ingreso_anual = \"\";\r\n            this.impuesto.base_imponible = \"\";\r\n            this.impuesto.fraccion_excedente = \"\";\r\n            this.impuesto.fraccion_excedente_iva = \"\";\r\n            this.impuesto.total_impuesto = \"\";\r\n            this.impuesto.iva = \"\";\r\n            toastr.error(\"Limpiado Correctamente\", \"SmartLearn\", {\r\n                timeOut: \"3000\"\r\n            });\r\n        },\r\n        borrarDeduccion(index) {\r\n            this.deducciones.splice(index, 1);\r\n            this.impuestoAgregado(\"deduccion\");\r\n        },\r\n        impuestoRenta() {\r\n            if (this.impuesto.fraccion == \"\") {\r\n                toastr.error(\r\n                    \"No has agregado la fraccion basica\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.impuesto.impuesto_fraccion == \"\") {\r\n                toastr.error(\r\n                    \"No has agregado el impuesto a fraccion basica\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.impuesto.interes == \"\") {\r\n                toastr.error(\"No has agregado el porcentaje\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                this.impuestoAgregado(\"final\");\r\n            }\r\n        },\r\n\r\n        //impuesto agregado\r\n\r\n        prestamoHipotecario(valor, tiempo, interes) {\r\n            let total = 0;\r\n            let division = Number(valor) / Number(tiempo);\r\n            let porcentaje = (division * Number(interes)) / 100;\r\n\r\n            let subtotal = division + porcentaje;\r\n\r\n            total = subtotal / 12;\r\n\r\n            return Number(total).toFixed(2);\r\n        }, //end prestamo hipotecario\r\n\r\n        calculoHipo() {\r\n            if (this.calculo.valor == \"\") {\r\n                toastr.error(\"No has agregado el valor\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.calculo.tiempo == \"\") {\r\n                toastr.error(\"No has agregado el tiempo\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.calculo.interes == \"\") {\r\n                toastr.error(\"Debe agregar el Interes\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let calculo = this.calculo.valor;\r\n                let tiempo = this.calculo.tiempo;\r\n                let interes = this.calculo.interes;\r\n                let hipo = this.prestamoHipotecario(calculo, tiempo, interes);\r\n\r\n                this.calculo.total = hipo;\r\n                this.calculo.valor = \"\";\r\n                this.calculo.tiempo = \"\";\r\n                this.calculo.interes = \"\";\r\n            }\r\n        }, //fin calculo\r\n\r\n        prestamoQuirografario(valor, meses, interes) {\r\n            let total = 0;\r\n            let division = Number(valor) / Number(meses);\r\n            let porcentaje = (division * Number(interes)) / 100;\r\n\r\n            total = division + porcentaje;\r\n\r\n            return Number(total).toFixed(2);\r\n        }, //end prestamo\r\n\r\n        calculoquiro() {\r\n            if (this.calculo1.valor == \"\") {\r\n                toastr.error(\"No has agregado el valor\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.calculo1.mes == \"\") {\r\n                toastr.error(\"No has agregado el Mes\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.calculo1.interes == \"\") {\r\n                toastr.error(\"Debe agregar el Interes\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let valor = this.calculo1.valor;\r\n                let mes = this.calculo1.mes;\r\n                let interes = this.calculo1.interes;\r\n                let hipo = this.prestamoQuirografario(valor, mes, interes);\r\n\r\n                this.calculo1.total = hipo;\r\n                this.calculo1.valor = \"\";\r\n                this.calculo1.mes = \"\";\r\n                this.calculo1.interes = \"\";\r\n            }\r\n        }, //fin calculo\r\n\r\n        decimales(saldo) {\r\n            if (saldo !== null && saldo !== \"\" && saldo !== 0) {\r\n                let total = Number(saldo).toFixed(2);\r\n                return total;\r\n            } else {\r\n                return;\r\n            }\r\n        }, //fin metodo decimal\r\n        formatoFecha(fecha) {\r\n            if (fecha !== null) {\r\n                let date = fecha\r\n                    .split(\"-\")\r\n                    .reverse()\r\n                    .join(\"-\");\r\n                return date;\r\n            } else {\r\n                return;\r\n            }\r\n        }, // fin fecha\r\n\r\n        abrirNomina() {\r\n            //solo para acceder al modal para agregar todo pilas\r\n            this.update = false;\r\n            $(\"#modal_nomina\").modal(\"show\");\r\n        }, //fin de metodo abrirtransaccion\r\n\r\n        totales: function () {\r\n            let r1 = this.t_nomina;\r\n            let c1 = 0;\r\n            let c2 = 0;\r\n            let c3 = 0;\r\n            let c4 = 0;\r\n            let c5 = 0;\r\n            let c6 = 0;\r\n            let c7 = 0;\r\n            let c8 = 0;\r\n            let c9 = 0;\r\n            let c10 = 0;\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.sueldo;\r\n                if (temp != null && temp !== \"\") {\r\n                    c1 += Number(temp);\r\n                }\r\n            });\r\n            this.suma.s_sueldo = c1.toFixed(2);\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.s_tiempo;\r\n                if (temp != null && temp !== \"\") {\r\n                    c2 += Number(temp);\r\n                }\r\n            });\r\n            this.suma.s_sobretiempo = c2.toFixed(2);\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.ingresos;\r\n                if (temp != null && temp !== \"\") {\r\n                    c3 += Number(temp);\r\n                }\r\n            });\r\n            this.suma.s_tingreso = c3.toFixed(2);\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.iees;\r\n                if (temp != null && temp !== \"\") {\r\n                    c4 += Number(temp);\r\n                }\r\n            });\r\n            this.suma.s_iess = c4.toFixed(2);\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.pres_iees;\r\n                if (temp != null && temp !== \"\") {\r\n                    c5 += Number(temp);\r\n                }\r\n            });\r\n            this.suma.s_piess = c5.toFixed(2);\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.pres_cia;\r\n                if (temp != null && temp !== \"\") {\r\n                    c6 += Number(temp);\r\n                }\r\n            });\r\n            this.suma.s_pcias = c6.toFixed(2);\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.anticipo;\r\n                if (temp != null && temp !== \"\") {\r\n                    c7 += Number(temp);\r\n                }\r\n            });\r\n            this.suma.s_anticipo = c7.toFixed(2);\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.imp_renta;\r\n                if (temp != null && temp !== \"\") {\r\n                    c8 += Number(temp);\r\n                }\r\n            });\r\n            this.suma.s_impr = c8.toFixed(2);\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.egresos;\r\n                if (temp != null && temp !== \"\") {\r\n                    c9 += Number(temp);\r\n                }\r\n            });\r\n            this.suma.s_tegresos = c9.toFixed(2);\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.neto_pagar;\r\n                if (temp != null && temp !== \"\") {\r\n                    c10 += Number(temp);\r\n                }\r\n            });\r\n            this.suma.s_netopagar = c10.toFixed(2);\r\n        },\r\n\r\n        agregarNomina() {\r\n            if (this.nomina.nombre_e == \"\") {\r\n                toastr.error(\r\n                    \"El Nombre del Empleado es obligatorio\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.nomina.cargo == \"\") {\r\n                toastr.error(\r\n                    \"El Cargo del Empleado es Obligatorio es obligatorio\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                let nomina = {\r\n                    nombre_e: this.nomina.nombre_e,\r\n                    cargo: this.nomina.cargo,\r\n                    sueldo: this.nomina.sueldo,\r\n                    s_tiempo: this.nomina.s_tiempo,\r\n                    ingresos: this.nomina.ingresos,\r\n                    iees: this.nomina.iees,\r\n                    pres_iees: this.nomina.pres_iees,\r\n                    pres_cia: this.nomina.pres_cia,\r\n                    anticipo: this.nomina.anticipo,\r\n                    imp_renta: this.nomina.imp_renta,\r\n                    egresos: this.nomina.egresos,\r\n                    neto_pagar: this.nomina.neto_pagar\r\n                };\r\n                this.t_nomina.push(nomina);\r\n                toastr.success(\r\n                    \"Registro agregado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.nomina.nombre_e = \"\";\r\n                this.nomina.cargo = \"\";\r\n                this.nomina.sueldo = \"\";\r\n                this.nomina.s_tiempo = \"\";\r\n                this.nomina.ingresos = \"\";\r\n                this.nomina.iees = \"\";\r\n                this.nomina.pres_iees = \"\";\r\n                this.nomina.pres_cia = \"\";\r\n                this.nomina.anticipo = \"\";\r\n                this.nomina.imp_renta = \"\";\r\n                this.nomina.egresos = \"\";\r\n                this.nomina.neto_pagar = \"\";\r\n                this.totales();\r\n            }\r\n        }, //fin metodo agregar\r\n\r\n        editNomina(index) {\r\n            this.nomina.edit = true;\r\n            this.registro_id = index;\r\n            this.nomina.nombre_e = this.t_nomina[index].nombre_e;\r\n            this.nomina.cargo = this.t_nomina[index].cargo;\r\n            this.nomina.sueldo = this.t_nomina[index].sueldo;\r\n            this.nomina.s_tiempo = this.t_nomina[index].s_tiempo;\r\n            this.nomina.ingresos = this.t_nomina[index].ingresos;\r\n            this.nomina.iees = this.t_nomina[index].iees;\r\n            this.nomina.pres_iees = this.t_nomina[index].pres_iees;\r\n            this.nomina.pres_cia = this.t_nomina[index].pres_cia;\r\n            this.nomina.anticipo = this.t_nomina[index].anticipo;\r\n            this.nomina.imp_renta = this.t_nomina[index].imp_renta;\r\n            this.nomina.egresos = this.t_nomina[index].egresos;\r\n            this.nomina.neto_pagar = this.t_nomina[index].neto_pagar;\r\n        }, //fin edit modal\r\n\r\n        editNominaFuera(index) {\r\n            this.nomina.edit = true;\r\n            this.registro_id = index;\r\n            this.nomina.nombre_e = this.t_nomina[index].nombre_e;\r\n            this.nomina.cargo = this.t_nomina[index].cargo;\r\n            this.nomina.sueldo = this.t_nomina[index].sueldo;\r\n            this.nomina.s_tiempo = this.t_nomina[index].s_tiempo;\r\n            this.nomina.ingresos = this.t_nomina[index].ingresos;\r\n            this.nomina.iees = this.t_nomina[index].iees;\r\n            this.nomina.pres_iees = this.t_nomina[index].pres_iees;\r\n            this.nomina.pres_cia = this.t_nomina[index].pres_cia;\r\n            this.nomina.anticipo = this.t_nomina[index].anticipo;\r\n            this.nomina.imp_renta = this.t_nomina[index].imp_renta;\r\n            this.nomina.egresos = this.t_nomina[index].egresos;\r\n            this.nomina.neto_pagar = this.t_nomina[index].neto_pagar;\r\n            $(\"#modal_nomina\").modal(\"show\");\r\n        }, //fin edit fuera\r\n\r\n        cancelarEditNomina() {\r\n            this.nomina.nombre_e = \"\";\r\n            this.nomina.cargo = \"\";\r\n            this.nomina.sueldo = \"\";\r\n            this.nomina.s_tiempo = \"\";\r\n            this.nomina.ingresos = \"\";\r\n            this.nomina.iees = \"\";\r\n            this.nomina.pres_iees = \"\";\r\n            this.nomina.pres_cia = \"\";\r\n            this.nomina.anticipo = \"\";\r\n            this.nomina.imp_renta = \"\";\r\n            this.nomina.egresos = \"\";\r\n            this.nomina.neto_pagar = \"\";\r\n            this.nomina.edit = false;\r\n        }, //fin cancelar edit de nomina\r\n\r\n        actualizarNomina() {\r\n            if (this.nomina.nombre_e == \"\") {\r\n                toastr.error(\r\n                    \"El Nombre del Empleado es obligatorio\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.nomina.cargo == \"\") {\r\n                toastr.error(\r\n                    \"El Cargo del Empleado es Obligatorio es obligatorio\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                let index = this.registro_id;\r\n                this.t_nomina[index].nombre_e = this.nomina.nombre_e;\r\n                this.t_nomina[index].cargo = this.nomina.cargo;\r\n                this.t_nomina[index].sueldo = this.nomina.sueldo;\r\n                this.t_nomina[index].s_tiempo = this.nomina.s_tiempo;\r\n                this.t_nomina[index].ingresos = this.nomina.ingresos;\r\n                this.t_nomina[index].iees = this.nomina.iees;\r\n                this.t_nomina[index].pres_iees = this.nomina.pres_iees;\r\n                this.t_nomina[index].pres_cia = this.nomina.pres_cia;\r\n                this.t_nomina[index].anticipo = this.nomina.anticipo;\r\n                this.t_nomina[index].imp_renta = this.nomina.imp_renta;\r\n                this.t_nomina[index].egresos = this.nomina.egresos;\r\n                this.t_nomina[index].neto_pagar = this.nomina.neto_pagar;\r\n                this.cancelarEditNomina();\r\n                this.totales();\r\n                toastr.error(\r\n                    \"Registro actualizado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            }\r\n        }, //fin actualizar nomina\r\n\r\n        eliminarNomina() {\r\n            let id = this.eliminar.index;\r\n            this.t_nomina.splice(id, 1);\r\n            (this.eliminar.index = \"\"),\r\n                (this.eliminar.nombre = \"\"),\r\n                $(\"#eliminar_nomina\").modal(\"hide\"); // en prueba para eliminar\r\n        }, //fin eliminar nomina\r\n\r\n        deleteNomina(index) {\r\n            this.t_nomina.splice(index, 1);\r\n            this.Totales();\r\n        }, //fin metodo delete\r\n\r\n        WarningEliminarNomina(id) {\r\n            this.eliminar.index = id;\r\n            this.eliminar.nombre = this.t_nomina[id].nombre_e;\r\n\r\n            Swal.fire({\r\n                title:\r\n                    \"Seguro que deseas eliminar el Registro de  \" +\r\n                    this.eliminar.nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la Nomina \" + this.eliminar.nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.t_nomina.splice(id, 1);\r\n                    this.totales();\r\n                }\r\n            });\r\n        }, //fin metodo warningeliminarnomina\r\n\r\n        guardarNomina() {\r\n            if (this.nombre.length == 0) {\r\n                toastr.error(\r\n                    \"Debe Registrar el Nombre del Comercial\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.fecha.length == 0) {\r\n                toastr.error(\"Debe Ingresar la Fecha\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let _this = this;\r\n                let url = \"/sistema/admin/taller/nomina_empleado\";\r\n\r\n                axios\r\n                    .post(url, {\r\n                        id: _this.id_taller,\r\n                        nombre: _this.nombre,\r\n                        fecha: _this.fecha,\r\n                        t_nomina: _this.t_nomina,\r\n                        s_sueldo: _this.suma.s_sueldo,\r\n                        s_sobretiempo: _this.suma.s_sobretiempo,\r\n                        s_tingreso: _this.suma.s_tingreso,\r\n                        s_iess: _this.suma.s_iess,\r\n                        s_piess: _this.suma.s_piess,\r\n                        s_pcias: _this.suma.s_pcias,\r\n                        s_anticipo: _this.suma.s_anticipo,\r\n                        s_impr: _this.suma.s_impr,\r\n                        s_tegresos: _this.suma.s_tegresos,\r\n                        s_netopagar: _this.suma.s_netopagar\r\n                    })\r\n                    .then(response => {\r\n                        if (response.data.estado == \"guardado\") {\r\n                            toastr.success(\r\n                                \"Nómina de Empleados creada correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            provision_b.obtenerNomina();\r\n                        } else if (response.data.estado == \"actualizado\") {\r\n                            toastr.warning(\r\n                                \"Nómina de Empleados actualizado\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                            provision_b.obtenerNomina();\r\n                            this.totales();\r\n                        }\r\n                    })\r\n                    .catch(function (error) { });\r\n            } //end else\r\n        }, //fin metodo guardar nomina\r\n\r\n        obtenerNomina: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/nomina-obtener-empleado\";\r\n\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        toastr.info(\r\n                            \"Anexo Nómina de Empleado cargado correctamente\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n                        this.nombre = response.data.nombre;\r\n                        this.fecha = response.data.fecha;\r\n                        this.t_nomina = response.data.nomina;\r\n                        this.totales();\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        } //fin metodo obtener nomina\r\n    } //fin methods\r\n});\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////PROVISIONDE BENEFICIOS SOCIALES////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\nconst provision_b = new Vue({\r\n    el: \"#provision_beneficio\",\r\n    data: {\r\n        id_taller: taller,\r\n        t_nomina: [], // de la nomina\r\n        nombre: \"\", //de la nomina\r\n        fecha: \"\", //de la nomina\r\n        t_pro: [],\r\n\r\n        pro: {\r\n            edit: false,\r\n            nombre_em: \"\",\r\n            dias: \"\",\r\n            v_recibido: \"\",\r\n            d_tercero: \"\",\r\n            d_cuarto: \"\",\r\n            vacaciones: \"\",\r\n            f_reserva: \"\"\r\n        },\r\n\r\n        eliminar: {\r\n            index: \"\",\r\n            nombre: \"\"\r\n        },\r\n        suma: {\r\n            s_valor: \"\",\r\n            s_tercero: \"\",\r\n            s_cuarto: \"\",\r\n            s_vacaciones: \"\",\r\n            s_res: \"\"\r\n        },\r\n\r\n        update: false,\r\n        registro_id: \"\"\r\n    }, // end data\r\n\r\n    mounted: function () {\r\n        this.obtenerProvision();\r\n        this.obtenerNomina();\r\n    },\r\n\r\n    methods: {\r\n        calculadora() {\r\n            let propsData = {\r\n                title: \"Called from basic js\",\r\n                noteProp: [\"Note number 1\", \"Note number 2\"]\r\n            };\r\n            let component = \"example-component\";\r\n            funciones.VueSweetAlert2(component, propsData);\r\n        },\r\n        obtenerNomina: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/nomina-obtener-empleado\";\r\n\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        _this.nombre = response.data.nombre;\r\n                        _this.fecha = response.data.fecha;\r\n                        _this.t_nomina = response.data.nomina;\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        }, //fin metodo obtener nomina\r\n\r\n        decimales(saldo) {\r\n            if (saldo !== null && saldo !== \"\" && saldo !== 0) {\r\n                let total = Number(saldo).toFixed(2);\r\n                return total;\r\n            } else {\r\n                return;\r\n            }\r\n        }, //fin metodo decimal\r\n\r\n        abrirProvision() {\r\n            //solo para acceder al modal para agregar todo pilas\r\n            this.update = false;\r\n            $(\"#modal_provision\").modal(\"show\");\r\n        }, //fin de metodo abrirtransaccion\r\n\r\n        totales: function () {\r\n            let r1 = this.t_pro;\r\n\r\n            let c1 = 0;\r\n            let c2 = 0;\r\n            let c3 = 0;\r\n            let c4 = 0;\r\n            let c5 = 0;\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.v_recibido;\r\n                if (temp != null && temp !== \"\") {\r\n                    c1 += Number(temp);\r\n                }\r\n            });\r\n            this.suma.s_valor = c1.toFixed(2);\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.d_tercero;\r\n                if (temp != null && temp !== \"\") {\r\n                    c2 += Number(temp);\r\n                }\r\n            });\r\n            this.suma.s_tercero = c2.toFixed(2);\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.d_cuarto;\r\n                if (temp != null && temp !== \"\") {\r\n                    c3 += Number(temp);\r\n                }\r\n            });\r\n            this.suma.s_cuarto = c3.toFixed(2);\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.vacaciones;\r\n                if (temp != null && temp !== \"\") {\r\n                    c4 += Number(temp);\r\n                }\r\n            });\r\n            this.suma.s_vacaciones = c4.toFixed(2);\r\n\r\n            r1.forEach(function (r1, i) {\r\n                let temp = r1.f_reserva;\r\n                if (temp != null && temp !== \"\") {\r\n                    c5 += Number(temp);\r\n                }\r\n            });\r\n            this.suma.s_res = c5.toFixed(2);\r\n        }, //end totales\r\n\r\n        agregarProvision() {\r\n            if (this.pro.nombre_em == \"\") {\r\n                toastr.error(\r\n                    \"El Nombre del Empleado es obligatorio\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.pro.dias == \"\") {\r\n                toastr.error(\"Este campo es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.pro.v_recibido == \"\") {\r\n                toastr.error(\"El Valor recibido es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let pro = {\r\n                    nombre_em: this.pro.nombre_em,\r\n                    dias: this.pro.dias,\r\n                    v_recibido: this.pro.v_recibido,\r\n                    d_tercero: this.pro.d_tercero,\r\n                    d_cuarto: this.pro.d_cuarto,\r\n                    vacaciones: this.pro.vacaciones,\r\n                    f_reserva: this.pro.f_reserva\r\n                };\r\n                this.t_pro.push(pro);\r\n                toastr.success(\r\n                    \"Registro agregado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n                this.pro.nombre_em = \"\";\r\n                this.pro.dias = \"\";\r\n                this.pro.v_recibido = \"\";\r\n                this.pro.d_tercero = \"\";\r\n                this.pro.d_cuarto = \"\";\r\n                this.pro.vacaciones = \"\";\r\n                this.pro.f_reserva = \"\";\r\n                this.totales();\r\n            } //end else\r\n        }, //end agregar\r\n\r\n        editProvision(index) {\r\n            this.pro.edit = true;\r\n            this.registro_id = index;\r\n            this.pro.nombre_em = this.t_pro[index].nombre_em;\r\n            this.pro.dias = this.t_pro[index].dias;\r\n            this.pro.v_recibido = this.t_pro[index].v_recibido;\r\n            this.pro.d_tercero = this.t_pro[index].d_tercero;\r\n            this.pro.d_cuarto = this.t_pro[index].d_cuarto;\r\n            this.pro.vacaciones = this.t_pro[index].vacaciones;\r\n            this.pro.f_reserva = this.t_pro[index].f_reserva;\r\n        }, //end editprovision\r\n\r\n        editProvisionFuera(index) {\r\n            this.pro.edit = true;\r\n            this.registro_id = index;\r\n            this.pro.nombre_em = this.t_pro[index].nombre_em;\r\n            this.pro.dias = this.t_pro[index].dias;\r\n            this.pro.v_recibido = this.t_pro[index].v_recibido;\r\n            this.pro.d_tercero = this.t_pro[index].d_tercero;\r\n            this.pro.d_cuarto = this.t_pro[index].d_cuarto;\r\n            this.pro.vacaciones = this.t_pro[index].vacaciones;\r\n            this.pro.f_reserva = this.t_pro[index].f_reserva;\r\n            $(\"#modal_provision\").modal(\"show\");\r\n        }, //end editprovision\r\n\r\n        cancelarEditProvision() {\r\n            this.pro.nombre_em = \"\";\r\n            this.pro.dias = \"\";\r\n            this.pro.v_recibido = \"\";\r\n            this.pro.d_tercero = \"\";\r\n            this.pro.d_cuarto = \"\";\r\n            this.pro.vacaciones = \"\";\r\n            this.pro.f_reserva = \"\";\r\n            this.pro.edit = false;\r\n        }, //end cancelaredit\r\n\r\n        actualizarProvision() {\r\n            if (this.pro.nombre_em == \"\") {\r\n                toastr.error(\r\n                    \"El Nombre del Empleado es obligatorio\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else if (this.pro.dias == \"\") {\r\n                toastr.error(\"Este campo es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else if (this.pro.v_recibido == \"\") {\r\n                toastr.error(\"El Valor recibido es obligatorio\", \"SmartLearn\", {\r\n                    timeOut: \"3000\"\r\n                });\r\n            } else {\r\n                let index = this.registro_id;\r\n                this.t_pro[index].nombre_em = this.pro.nombre_em;\r\n                this.t_pro[index].dias = this.pro.dias;\r\n                this.t_pro[index].v_recibido = this.pro.v_recibido;\r\n                this.t_pro[index].d_tercero = this.pro.d_tercero;\r\n                this.t_pro[index].d_cuarto = this.pro.d_cuarto;\r\n                this.t_pro[index].vacaciones = this.pro.vacaciones;\r\n                this.t_pro[index].f_reserva = this.pro.f_reserva;\r\n                this.cancelarEditProvision();\r\n                this.totales();\r\n                toastr.error(\r\n                    \"Registro actualizado correctamente\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } //end else\r\n        }, //end provision actualizar\r\n\r\n        eliminarProvision() {\r\n            let id = this.eliminar.index;\r\n            this.t_pro.splice(id, 1);\r\n            (this.eliminar.index = \"\"),\r\n                (this.eliminar.nombre = \"\"),\r\n                $(\"#eliminar_p\").modal(\"hide\"); // en prueba para eliminar\r\n        }, //fin eliminar provision\r\n\r\n        deleteProvision(index) {\r\n            this.t_pro.splice(index, 1);\r\n            this.totales();\r\n        }, //fin metodo delete\r\n\r\n        WarningEliminarProvision(id) {\r\n            this.eliminar.index = id;\r\n            this.eliminar.nombre = this.t_pro[id].nombre_em;\r\n\r\n            Swal.fire({\r\n                title:\r\n                    \"Seguro que deseas eliminar el Registro de  \" +\r\n                    this.eliminar.nombre,\r\n                text: \"Esta accion no se puede revertir\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, eliminar!\"\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire(\r\n                        \"Eliminado!\",\r\n                        \"El Registro de la Provision \" + this.eliminar.nombre,\r\n                        \"success\"\r\n                    );\r\n                    this.t_pro.splice(id, 1);\r\n                    this.totales();\r\n                }\r\n            });\r\n        }, //fin metodo warningeliminarnomina\r\n\r\n        guardarProvision() {\r\n            if (this.t_pro.length == 0) {\r\n                toastr.error(\r\n                    \"Debe haber al menos un  Registrado\",\r\n                    \"SmartLearn\",\r\n                    {\r\n                        timeOut: \"3000\"\r\n                    }\r\n                );\r\n            } else {\r\n                let _this = this;\r\n                let url = \"/sistema/admin/taller/provision_social\";\r\n                axios\r\n                    .post(url, {\r\n                        id: _this.id_taller,\r\n                        s_valor: _this.suma.s_valor,\r\n                        s_tercero: _this.suma.s_tercero,\r\n                        s_cuarto: _this.suma.s_cuarto,\r\n                        s_vacaciones: _this.suma.s_vacaciones,\r\n                        s_res: _this.suma.s_res,\r\n                        t_pro: _this.t_pro\r\n                    })\r\n                    .then(response => {\r\n                        if (response.data.estado == \"guardado\") {\r\n                            toastr.success(\r\n                                \"Provisión de Beneficio creada correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                        } else if (response.data.estado == \"actualizado\") {\r\n                            toastr.warning(\r\n                                \"Provisión de Beneficio actualizado correctamente\",\r\n                                \"SmartLearn\",\r\n                                {\r\n                                    timeOut: \"3000\"\r\n                                }\r\n                            );\r\n                        }\r\n                    })\r\n                    .catch(function (error) { });\r\n            } //end else\r\n        }, //end guardarprovision\r\n\r\n        obtenerProvision: function () {\r\n            let _this = this;\r\n            let url = \"/sistema/admin/taller/provision-obtener-beneficio\";\r\n            axios\r\n                .post(url, {\r\n                    id: _this.id_taller\r\n                })\r\n                .then(response => {\r\n                    if (response.data.datos == true) {\r\n                        toastr.success(\r\n                            \"Anexo Provisión Beneficio Social cargado correctamente\",\r\n                            \"SmartLearn\",\r\n                            {\r\n                                timeOut: \"3000\"\r\n                            }\r\n                        );\r\n\r\n                        this.t_pro = response.data.pro;\r\n                        this.totales();\r\n                    }\r\n                })\r\n                .catch(function (error) { });\r\n        } // end obtener\r\n    } // end methods\r\n});\r\n"],"sourceRoot":""}